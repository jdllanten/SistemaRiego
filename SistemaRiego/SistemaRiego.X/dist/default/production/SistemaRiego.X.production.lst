

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 10 15:48:04 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.32
    56                           ; Generated 02/02/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataBANK0
    92  001746                     __pidataBANK0:
    93                           	callstack 0
    94                           
    95                           ;initializer for _AM_PM
    96  001746  05                 	db	5
    97                           
    98                           ;initializer for _Clock_type
    99  001747  06                 	db	6
   100                           
   101                           ;initializer for _bombillaCar0
   102  001748  0E                 	db	14
   103  001749  11                 	db	17
   104  00174A  11                 	db	17
   105  00174B  11                 	db	17
   106  00174C  0E                 	db	14
   107  00174D  0E                 	db	14
   108  00174E  00                 	db	0
   109  00174F  00                 	db	0
   110                           
   111                           	psect	idataBANK1
   112  00112A                     __pidataBANK1:
   113                           	callstack 0
   114                           
   115                           ;initializer for ON_LAMPARAS@F3209
   116  00112A  53                 	db	83
   117  00112B  65                 	db	101
   118  00112C  20                 	db	32
   119  00112D  65                 	db	101
   120  00112E  6E                 	db	110
   121  00112F  63                 	db	99
   122  001130  65                 	db	101
   123  001131  6E                 	db	110
   124  001132  64                 	db	100
   125  001133  69                 	db	105
   126  001134  6F                 	db	111
   127  001135  20                 	db	32
   128  001136  6C                 	db	108
   129  001137  61                 	db	97
   130  001138  20                 	db	32
   131  001139  3B                 	db	59
   132  00113A  62                 	db	98
   133  00113B  6F                 	db	111
   134  00113C  6D                 	db	109
   135  00113D  62                 	db	98
   136  00113E  69                 	db	105
   137  00113F  6C                 	db	108
   138  001140  6C                 	db	108
   139  001141  61                 	db	97
   140  001142  20                 	db	32
   141  001143  31                 	db	49
   142  001144  0D                 	db	13
   143  001145  00                 	db	0
   144                           
   145                           ;initializer for ON_LAMPARAS@F3215
   146  001146  53                 	db	83
   147  001147  65                 	db	101
   148  001148  20                 	db	32
   149  001149  65                 	db	101
   150  00114A  6E                 	db	110
   151  00114B  63                 	db	99
   152  00114C  65                 	db	101
   153  00114D  6E                 	db	110
   154  00114E  64                 	db	100
   155  00114F  69                 	db	105
   156  001150  6F                 	db	111
   157  001151  20                 	db	32
   158  001152  6C                 	db	108
   159  001153  61                 	db	97
   160  001154  20                 	db	32
   161  001155  62                 	db	98
   162  001156  6F                 	db	111
   163  001157  6D                 	db	109
   164  001158  62                 	db	98
   165  001159  69                 	db	105
   166  00115A  6C                 	db	108
   167  00115B  6C                 	db	108
   168  00115C  61                 	db	97
   169  00115D  20                 	db	32
   170  00115E  33                 	db	51
   171  00115F  0D                 	db	13
   172  001160  00                 	db	0
   173                           
   174                           ;initializer for ON_LAMPARAS@F3212
   175  001161  53                 	db	83
   176  001162  65                 	db	101
   177  001163  20                 	db	32
   178  001164  65                 	db	101
   179  001165  6E                 	db	110
   180  001166  63                 	db	99
   181  001167  65                 	db	101
   182  001168  6E                 	db	110
   183  001169  64                 	db	100
   184  00116A  69                 	db	105
   185  00116B  6F                 	db	111
   186  00116C  20                 	db	32
   187  00116D  6C                 	db	108
   188  00116E  61                 	db	97
   189  00116F  20                 	db	32
   190  001170  62                 	db	98
   191  001171  6F                 	db	111
   192  001172  6D                 	db	109
   193  001173  62                 	db	98
   194  001174  69                 	db	105
   195  001175  6C                 	db	108
   196  001176  6C                 	db	108
   197  001177  61                 	db	97
   198  001178  20                 	db	32
   199  001179  32                 	db	50
   200  00117A  0D                 	db	13
   201  00117B  00                 	db	0
   202                           
   203                           ;initializer for Mostrar_Fecha@F3226
   204  00117C  52                 	db	82
   205  00117D  65                 	db	101
   206  00117E  67                 	db	103
   207  00117F  69                 	db	105
   208  001180  73                 	db	115
   209  001181  74                 	db	116
   210  001182  72                 	db	114
   211  001183  61                 	db	97
   212  001184  6E                 	db	110
   213  001185  64                 	db	100
   214  001186  6F                 	db	111
   215  001187  20                 	db	32
   216  001188  48                 	db	72
   217  001189  6F                 	db	111
   218  00118A  72                 	db	114
   219  00118B  61                 	db	97
   220  00118C  20                 	db	32
   221  00118D  79                 	db	121
   222  00118E  20                 	db	32
   223  00118F  46                 	db	70
   224  001190  65                 	db	101
   225  001191  63                 	db	99
   226  001192  68                 	db	104
   227  001193  61                 	db	97
   228  001194  0D                 	db	13
   229  001195  00                 	db	0
   230                           
   231                           ;initializer for OFF_LAMPARAS@F3204
   232  001196  42                 	db	66
   233  001197  6F                 	db	111
   234  001198  6D                 	db	109
   235  001199  62                 	db	98
   236  00119A  69                 	db	105
   237  00119B  6C                 	db	108
   238  00119C  6C                 	db	108
   239  00119D  61                 	db	97
   240  00119E  73                 	db	115
   241  00119F  20                 	db	32
   242  0011A0  41                 	db	65
   243  0011A1  70                 	db	112
   244  0011A2  61                 	db	97
   245  0011A3  67                 	db	103
   246  0011A4  61                 	db	97
   247  0011A5  64                 	db	100
   248  0011A6  61                 	db	97
   249  0011A7  73                 	db	115
   250  0011A8  20                 	db	32
   251  0011A9  0D                 	db	13
   252  0011AA  00                 	db	0
   253                           
   254                           ;initializer for ON_LAMPARAS@F3218
   255  0011AB  54                 	db	84
   256  0011AC  65                 	db	101
   257  0011AD  6D                 	db	109
   258  0011AE  70                 	db	112
   259  0011AF  65                 	db	101
   260  0011B0  72                 	db	114
   261  0011B1  61                 	db	97
   262  0011B2  74                 	db	116
   263  0011B3  75                 	db	117
   264  0011B4  72                 	db	114
   265  0011B5  61                 	db	97
   266  0011B6  20                 	db	32
   267  0011B7  41                 	db	65
   268  0011B8  6C                 	db	108
   269  0011B9  74                 	db	116
   270  0011BA  61                 	db	97
   271  0011BB  20                 	db	32
   272  0011BC  0D                 	db	13
   273  0011BD  00                 	db	0
   274                           
   275                           ;initializer for ON_LEDS@F3201
   276  0011BE  54                 	db	84
   277  0011BF  65                 	db	101
   278  0011C0  6D                 	db	109
   279  0011C1  70                 	db	112
   280  0011C2  65                 	db	101
   281  0011C3  72                 	db	114
   282  0011C4  61                 	db	97
   283  0011C5  74                 	db	116
   284  0011C6  75                 	db	117
   285  0011C7  72                 	db	114
   286  0011C8  61                 	db	97
   287  0011C9  20                 	db	32
   288  0011CA  49                 	db	73
   289  0011CB  64                 	db	100
   290  0011CC  65                 	db	101
   291  0011CD  61                 	db	97
   292  0011CE  6C                 	db	108
   293  0011CF  0D                 	db	13
   294  0011D0  00                 	db	0
   295                           
   296                           ;initializer for OFF_LEDS@F3196
   297  0011D1  41                 	db	65
   298  0011D2  70                 	db	112
   299  0011D3  61                 	db	97
   300  0011D4  67                 	db	103
   301  0011D5  61                 	db	97
   302  0011D6  6E                 	db	110
   303  0011D7  64                 	db	100
   304  0011D8  6F                 	db	111
   305  0011D9  20                 	db	32
   306  0011DA  4C                 	db	76
   307  0011DB  45                 	db	69
   308  0011DC  44                 	db	68
   309  0011DD  53                 	db	83
   310  0011DE  0D                 	db	13
   311  0011DF  00                 	db	0
   312                           
   313                           ;initializer for _days
   314  0011E0  53                 	db	83
   315  0011E1  4D                 	db	77
   316  0011E2  54                 	db	84
   317  0011E3  57                 	db	87
   318  0011E4  74                 	db	116
   319  0011E5  46                 	db	70
   320  0011E6  73                 	db	115
   321                           
   322                           ;initializer for _alert
   323  0011E7  00                 	db	0
   324  0011E8  1B                 	db	27
   325  0011E9  1B                 	db	27
   326  0011EA  00                 	db	0
   327  0011EB  0E                 	db	14
   328  0011EC  11                 	db	17
   329  0011ED  11                 	db	17
   330  0011EE  00                 	db	0
   331                           
   332                           ;initializer for _good
   333  0011EF  00                 	db	0
   334  0011F0  1B                 	db	27
   335  0011F1  1B                 	db	27
   336  0011F2  00                 	db	0
   337  0011F3  11                 	db	17
   338  0011F4  11                 	db	17
   339  0011F5  0E                 	db	14
   340  0011F6  00                 	db	0
   341                           
   342                           	psect	idataBANK2
   343  00163C                     __pidataBANK2:
   344                           	callstack 0
   345                           
   346                           ;initializer for main@F3188
   347  00163C  4E                 	db	78
   348  00163D  6F                 	db	111
   349  00163E  20                 	db	32
   350  00163F  73                 	db	115
   351  001640  65                 	db	101
   352  001641  20                 	db	32
   353  001642  68                 	db	104
   354  001643  61                 	db	97
   355  001644  20                 	db	32
   356  001645  70                 	db	112
   357  001646  72                 	db	114
   358  001647  65                 	db	101
   359  001648  6E                 	db	110
   360  001649  64                 	db	100
   361  00164A  69                 	db	105
   362  00164B  64                 	db	100
   363  00164C  6F                 	db	111
   364  00164D  20                 	db	32
   365  00164E  6E                 	db	110
   366  00164F  69                 	db	105
   367  001650  6E                 	db	110
   368  001651  67                 	db	103
   369  001652  75                 	db	117
   370  001653  6E                 	db	110
   371  001654  61                 	db	97
   372  001655  20                 	db	32
   373  001656  62                 	db	98
   374  001657  6F                 	db	111
   375  001658  6D                 	db	109
   376  001659  62                 	db	98
   377  00165A  69                 	db	105
   378  00165B  6C                 	db	108
   379  00165C  6C                 	db	108
   380  00165D  61                 	db	97
   381  00165E  0D                 	db	13
   382  00165F  00                 	db	0
   383                           
   384                           	psect	smallconst
   385  000800                     __psmallconst:
   386                           	callstack 0
   387  000800  00                 	db	0
   388  000801                     _dpowers:
   389                           	callstack 0
   390  000801  0001               	dw	1
   391  000803  000A               	dw	10
   392  000805  0064               	dw	100
   393  000807  03E8               	dw	1000
   394  000809  2710               	dw	10000
   395  00080B                     __end_of_dpowers:
   396                           	callstack 0
   397  00080B                     _hexpowers:
   398                           	callstack 0
   399  00080B  0001               	dw	1
   400  00080D  0010               	dw	16
   401  00080F  0100               	dw	256
   402  000811  1000               	dw	4096
   403  000813                     __end_of_hexpowers:
   404                           	callstack 0
   405  0000                     _PORTCbits	set	3970
   406  0000                     _TXREG	set	4013
   407  0000                     _ADCON1	set	4033
   408  0000                     _OSCCON	set	4051
   409  0000                     _SPBRG	set	4015
   410  0000                     _RCSTAbits	set	4011
   411  0000                     _BAUDCONbits	set	4024
   412  0000                     _TXSTAbits	set	4012
   413  0000                     _TRISCbits	set	3988
   414  0000                     _PORTBbits	set	3969
   415  0000                     _PORTAbits	set	3968
   416  0000                     _TRISA	set	3986
   417  0000                     _SSPCON2bits	set	4037
   418  0000                     _SSPADD	set	4040
   419  0000                     _SSPCON2	set	4037
   420  0000                     _SSPCON1	set	4038
   421  0000                     _SSPSTAT	set	4039
   422  0000                     _SSPBUF	set	4041
   423  0000                     _SSPSTATbits	set	4039
   424  0000                     _LATD	set	3980
   425  0000                     _TRISC	set	3988
   426  0000                     _TRISD	set	3989
   427  0000                     _LATC2	set	31834
   428  0000                     _ACKEN	set	32300
   429  0000                     _ACKDT	set	32301
   430  0000                     _PEN	set	32298
   431  0000                     _RSEN	set	32297
   432  0000                     _ACKSTAT	set	32302
   433  0000                     _SSPIF	set	31987
   434  0000                     _SSPIE	set	31979
   435  0000                     _TRISB1	set	31897
   436  0000                     _TRISB0	set	31896
   437  0000                     _RCEN	set	32299
   438  0000                     _LATC1	set	31833
   439  0000                     _LATC0	set	31832
   440  000813                     STR_25:
   441  000813  30                 	db	48	;'0'
   442  000814  31                 	db	49	;'1'
   443  000815  32                 	db	50	;'2'
   444  000816  33                 	db	51	;'3'
   445  000817  34                 	db	52	;'4'
   446  000818  35                 	db	53	;'5'
   447  000819  36                 	db	54	;'6'
   448  00081A  37                 	db	55	;'7'
   449  00081B  38                 	db	56	;'8'
   450  00081C  39                 	db	57	;'9'
   451  00081D  61                 	db	97	;'a'
   452  00081E  62                 	db	98	;'b'
   453  00081F  63                 	db	99	;'c'
   454  000820  64                 	db	100	;'d'
   455  000821  65                 	db	101	;'e'
   456  000822  66                 	db	102	;'f'
   457  000823  00                 	db	0
   458  000824                     STR_15:
   459  000824  20                 	db	32
   460  000825  44                 	db	68	;'D'
   461  000826  69                 	db	105	;'i'
   462  000827  61                 	db	97	;'a'
   463  000828  20                 	db	32
   464  000829  25                 	db	37
   465  00082A  78                 	db	120	;'x'
   466  00082B  2D                 	db	45
   467  00082C  00                 	db	0
   468  00082D                     STR_11:
   469  00082D  54                 	db	84	;'T'
   470  00082E  69                 	db	105	;'i'
   471  00082F  6D                 	db	109	;'m'
   472  000830  3A                 	db	58	;':'
   473  000831  25                 	db	37
   474  000832  78                 	db	120	;'x'
   475  000833  3A                 	db	58	;':'
   476  000834  00                 	db	0
   477  000835                     STR_2:
   478  000835  2E                 	db	46
   479  000836  25                 	db	37
   480  000837  64                 	db	100	;'d'
   481  000838  20                 	db	32
   482  000839  00                 	db	0
   483  00083A                     STR_9:
   484  00083A  25                 	db	37
   485  00083B  78                 	db	120	;'x'
   486  00083C  20                 	db	32
   487  00083D  00                 	db	0
   488  00083E                     STR_4:
   489  00083E  2E                 	db	46
   490  00083F  25                 	db	37
   491  000840  64                 	db	100	;'d'
   492  000841  00                 	db	0
   493  000842                     STR_21:
   494  000842  57                 	db	87	;'W'
   495  000843  65                 	db	101	;'e'
   496  000844  64                 	db	100	;'d'
   497  000845  00                 	db	0
   498  000846                     STR_20:
   499  000846  54                 	db	84	;'T'
   500  000847  75                 	db	117	;'u'
   501  000848  65                 	db	101	;'e'
   502  000849  00                 	db	0
   503  00084A                     STR_23:
   504  00084A  46                 	db	70	;'F'
   505  00084B  72                 	db	114	;'r'
   506  00084C  69                 	db	105	;'i'
   507  00084D  00                 	db	0
   508  00084E                     STR_19:
   509  00084E  4D                 	db	77	;'M'
   510  00084F  6F                 	db	111	;'o'
   511  000850  6E                 	db	110	;'n'
   512  000851  00                 	db	0
   513  000852                     STR_18:
   514  000852  53                 	db	83	;'S'
   515  000853  75                 	db	117	;'u'
   516  000854  6E                 	db	110	;'n'
   517  000855  00                 	db	0
   518  000856                     STR_24:
   519  000856  53                 	db	83	;'S'
   520  000857  61                 	db	97	;'a'
   521  000858  74                 	db	116	;'t'
   522  000859  00                 	db	0
   523  00085A                     STR_22:
   524  00085A  54                 	db	84	;'T'
   525  00085B  68                 	db	104	;'h'
   526  00085C  75                 	db	117	;'u'
   527  00085D  00                 	db	0
   528  00085E                     STR_8:
   529  00085E  41                 	db	65	;'A'
   530  00085F  4D                 	db	77	;'M'
   531  000860  00                 	db	0
   532  000861                     STR_7:
   533  000861  50                 	db	80	;'P'
   534  000862  4D                 	db	77	;'M'
   535  000863  00                 	db	0
   536  000864                     STR_6:
   537  000864  48                 	db	72	;'H'
   538  000865  00                 	db	0
   539  000866                     STR_5:
   540  000866  54                 	db	84	;'T'
   541  000867  00                 	db	0
   542  000868  00                 	db	0	; dummy byte at the end
   543  0000                     
   544                           ; #config settings
   545                           
   546                           	psect	cinit
   547  0012A0                     __pcinit:
   548                           	callstack 0
   549  0012A0                     start_initialization:
   550                           	callstack 0
   551  0012A0                     __initialization:
   552                           	callstack 0
   553                           
   554                           ; Initialize objects allocated to BANK2 (36 bytes)
   555                           ; load TBLPTR registers with __pidataBANK2
   556  0012A0  0E3C               	movlw	low __pidataBANK2
   557  0012A2  6EF6               	movwf	tblptrl,c
   558  0012A4  0E16               	movlw	high __pidataBANK2
   559  0012A6  6EF7               	movwf	tblptrh,c
   560  0012A8  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   561  0012AA  6EF8               	movwf	tblptru,c
   562  0012AC  EE02  F026         	lfsr	0,__pdataBANK2
   563  0012B0  EE10 F024          	lfsr	1,36
   564  0012B4                     copy_data0:
   565  0012B4  0009               	tblrd		*+
   566  0012B6  CFF5 FFEE          	movff	tablat,postinc0
   567  0012BA  50E5               	movf	postdec1,w,c
   568  0012BC  50E1               	movf	fsr1l,w,c
   569  0012BE  E1FA               	bnz	copy_data0
   570                           
   571                           ; Initialize objects allocated to BANK1 (205 bytes)
   572                           ; load TBLPTR registers with __pidataBANK1
   573  0012C0  0E2A               	movlw	low __pidataBANK1
   574  0012C2  6EF6               	movwf	tblptrl,c
   575  0012C4  0E11               	movlw	high __pidataBANK1
   576  0012C6  6EF7               	movwf	tblptrh,c
   577  0012C8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   578  0012CA  6EF8               	movwf	tblptru,c
   579  0012CC  EE01  F000         	lfsr	0,__pdataBANK1
   580  0012D0  EE10 F0CD          	lfsr	1,205
   581  0012D4                     copy_data1:
   582  0012D4  0009               	tblrd		*+
   583  0012D6  CFF5 FFEE          	movff	tablat,postinc0
   584  0012DA  50E5               	movf	postdec1,w,c
   585  0012DC  50E1               	movf	fsr1l,w,c
   586  0012DE  E1FA               	bnz	copy_data1
   587                           
   588                           ; Initialize objects allocated to BANK0 (10 bytes)
   589                           ; load TBLPTR registers with __pidataBANK0
   590  0012E0  0E46               	movlw	low __pidataBANK0
   591  0012E2  6EF6               	movwf	tblptrl,c
   592  0012E4  0E17               	movlw	high __pidataBANK0
   593  0012E6  6EF7               	movwf	tblptrh,c
   594  0012E8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   595  0012EA  6EF8               	movwf	tblptru,c
   596  0012EC  EE00  F0F3         	lfsr	0,__pdataBANK0
   597  0012F0  EE10 F00A          	lfsr	1,10
   598  0012F4                     copy_data2:
   599  0012F4  0009               	tblrd		*+
   600  0012F6  CFF5 FFEE          	movff	tablat,postinc0
   601  0012FA  50E5               	movf	postdec1,w,c
   602  0012FC  50E1               	movf	fsr1l,w,c
   603  0012FE  E1FA               	bnz	copy_data2
   604                           
   605                           ; Clear objects allocated to BANK1 (50 bytes)
   606  001300  EE01  F0CD         	lfsr	0,__pbssBANK1
   607  001304  0E32               	movlw	50
   608  001306                     clear_0:
   609  001306  6AEE               	clrf	postinc0,c
   610  001308  06E8               	decf	wreg,f,c
   611  00130A  E1FD               	bnz	clear_0
   612                           
   613                           ; Clear objects allocated to BANK0 (37 bytes)
   614  00130C  EE00  F0CE         	lfsr	0,__pbssBANK0
   615  001310  0E25               	movlw	37
   616  001312                     clear_1:
   617  001312  6AEE               	clrf	postinc0,c
   618  001314  06E8               	decf	wreg,f,c
   619  001316  E1FD               	bnz	clear_1
   620                           
   621                           ; Clear objects allocated to COMRAM (5 bytes)
   622  001318  6A3A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   623  00131A  6A39               	clrf	(__pbssCOMRAM+3)& (0+255),c
   624  00131C  6A38               	clrf	(__pbssCOMRAM+2)& (0+255),c
   625  00131E  6A37               	clrf	(__pbssCOMRAM+1)& (0+255),c
   626  001320  6A36               	clrf	__pbssCOMRAM& (0+255),c
   627  001322                     end_of_initialization:
   628                           	callstack 0
   629  001322                     __end_of__initialization:
   630                           	callstack 0
   631  001322  0E00               	movlw	low (__Lmediumconst shr (0+16))
   632  001324  6EF8               	movwf	tblptru,c
   633  001326  0100               	movlb	0
   634  001328  EF15  F008         	goto	_main	;jump to C main() function
   635                           
   636                           	psect	bssCOMRAM
   637  000036                     __pbssCOMRAM:
   638                           	callstack 0
   639  000036                     _hour:
   640                           	callstack 0
   641  000036                     	ds	2
   642  000038                     _var_T_Integral:
   643                           	callstack 0
   644  000038                     	ds	1
   645  000039                     _var_RH_Integral:
   646                           	callstack 0
   647  000039                     	ds	1
   648  00003A                     _var_RH_Decimal:
   649                           	callstack 0
   650  00003A                     	ds	1
   651                           
   652                           	psect	bssBANK0
   653  0000CE                     __pbssBANK0:
   654                           	callstack 0
   655  0000CE                     _Year:
   656                           	callstack 0
   657  0000CE                     	ds	2
   658  0000D0                     _Month:
   659                           	callstack 0
   660  0000D0                     	ds	2
   661  0000D2                     _Date:
   662                           	callstack 0
   663  0000D2                     	ds	2
   664  0000D4                     _Day:
   665                           	callstack 0
   666  0000D4                     	ds	2
   667  0000D6                     _min:
   668                           	callstack 0
   669  0000D6                     	ds	2
   670  0000D8                     _sec:
   671                           	callstack 0
   672  0000D8                     	ds	2
   673  0000DA                     _acumBom:
   674                           	callstack 0
   675  0000DA                     	ds	2
   676  0000DC                     _banAgregar:
   677                           	callstack 0
   678  0000DC                     	ds	2
   679  0000DE                     _var_T_Decimal:
   680                           	callstack 0
   681  0000DE                     	ds	1
   682  0000DF                     _secs:
   683                           	callstack 0
   684  0000DF                     	ds	10
   685  0000E9                     _vec_value:
   686                           	callstack 0
   687  0000E9                     	ds	10
   688                           
   689                           	psect	dataBANK0
   690  0000F3                     __pdataBANK0:
   691                           	callstack 0
   692  0000F3                     _AM_PM:
   693                           	callstack 0
   694  0000F3                     	ds	1
   695  0000F4                     _Clock_type:
   696                           	callstack 0
   697  0000F4                     	ds	1
   698  0000F5                     _bombillaCar0:
   699                           	callstack 0
   700  0000F5                     	ds	8
   701                           
   702                           	psect	bssBANK1
   703  0001CD                     __pbssBANK1:
   704                           	callstack 0
   705  0001CD                     _year:
   706                           	callstack 0
   707  0001CD                     	ds	10
   708  0001D7                     _month:
   709                           	callstack 0
   710  0001D7                     	ds	10
   711  0001E1                     _date:
   712                           	callstack 0
   713  0001E1                     	ds	10
   714  0001EB                     _hours:
   715                           	callstack 0
   716  0001EB                     	ds	10
   717  0001F5                     _mins:
   718                           	callstack 0
   719  0001F5                     	ds	10
   720                           
   721                           	psect	dataBANK1
   722  000100                     __pdataBANK1:
   723                           	callstack 0
   724  000100                     ON_LAMPARAS@F3209:
   725                           	callstack 0
   726  000100                     	ds	28
   727  00011C                     ON_LAMPARAS@F3215:
   728                           	callstack 0
   729  00011C                     	ds	27
   730  000137                     ON_LAMPARAS@F3212:
   731                           	callstack 0
   732  000137                     	ds	27
   733  000152                     Mostrar_Fecha@F3226:
   734                           	callstack 0
   735  000152                     	ds	26
   736  00016C                     OFF_LAMPARAS@F3204:
   737                           	callstack 0
   738  00016C                     	ds	21
   739  000181                     ON_LAMPARAS@F3218:
   740                           	callstack 0
   741  000181                     	ds	19
   742  000194                     ON_LEDS@F3201:
   743                           	callstack 0
   744  000194                     	ds	19
   745  0001A7                     OFF_LEDS@F3196:
   746                           	callstack 0
   747  0001A7                     	ds	15
   748  0001B6                     _days:
   749                           	callstack 0
   750  0001B6                     	ds	7
   751  0001BD                     _alert:
   752                           	callstack 0
   753  0001BD                     	ds	8
   754  0001C5                     _good:
   755                           	callstack 0
   756  0001C5                     	ds	8
   757                           
   758                           	psect	dataBANK2
   759  000226                     __pdataBANK2:
   760                           	callstack 0
   761  000226                     main@F3188:
   762                           	callstack 0
   763  000226                     	ds	36
   764                           
   765                           	psect	cstackBANK2
   766  000200                     __pcstackBANK2:
   767                           	callstack 0
   768  000200                     main@buffer_TX:
   769                           	callstack 0
   770                           
   771                           ; 36 bytes @ 0x0
   772  000200                     	ds	36
   773  000224                     main@i:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x24
   777  000224                     	ds	2
   778                           
   779                           	psect	cstackBANK0
   780  000060                     __pcstackBANK0:
   781                           	callstack 0
   782  000060                     ON_LAMPARAS@buffer_TX:
   783                           	callstack 0
   784                           
   785                           ; 28 bytes @ 0x0
   786  000060                     	ds	28
   787  00007C                     ON_LAMPARAS@buffer_TX_837:
   788                           	callstack 0
   789                           
   790                           ; 27 bytes @ 0x1C
   791  00007C                     	ds	27
   792  000097                     ON_LAMPARAS@buffer_TX_840:
   793                           	callstack 0
   794                           
   795                           ; 27 bytes @ 0x37
   796  000097                     	ds	27
   797  0000B2                     ON_LAMPARAS@buffer_TX_843:
   798                           	callstack 0
   799                           
   800                           ; 19 bytes @ 0x52
   801  0000B2                     	ds	19
   802  0000C5                     ON_LAMPARAS@i:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x65
   806  0000C5                     	ds	2
   807  0000C7                     ON_LAMPARAS@i_838:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x67
   811  0000C7                     	ds	2
   812  0000C9                     ON_LAMPARAS@i_841:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x69
   816  0000C9                     	ds	2
   817  0000CB                     ON_LAMPARAS@i_844:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x6B
   821  0000CB                     	ds	2
   822  0000CD                     ON_LAMPARAS@i_845:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x6D
   826  0000CD                     	ds	1
   827                           
   828                           	psect	cstackCOMRAM
   829  000001                     __pcstackCOMRAM:
   830                           	callstack 0
   831  000001                     ??_DHT11_Start:
   832  000001                     ?___lwdiv:
   833                           	callstack 0
   834  000001                     I2C_Read@flag:
   835                           	callstack 0
   836  000001                     I2C_Write@data:
   837                           	callstack 0
   838  000001                     DHT11_ReadData@i:
   839                           	callstack 0
   840  000001                     MSdelay@val:
   841                           	callstack 0
   842  000001                     ___lwdiv@dividend:
   843                           	callstack 0
   844  000001                     OFF_LEDS@buffer_TX:
   845                           	callstack 0
   846  000001                     OFF_LAMPARAS@buffer_TX:
   847                           	callstack 0
   848                           
   849                           ; 21 bytes @ 0x0
   850  000001                     	ds	1
   851  000002                     I2C_Read@buffer:
   852                           	callstack 0
   853  000002                     I2C_Start@slave_write_address:
   854                           	callstack 0
   855  000002                     I2C_Repeated_Start@slave_read_address:
   856                           	callstack 0
   857  000002                     DHT11_ReadData@data:
   858                           	callstack 0
   859                           
   860                           ; 1 bytes @ 0x1
   861  000002                     	ds	1
   862  000003                     ??_RTC_Read_Clock:
   863  000003                     ??_RTC_Read_Calendar:
   864  000003                     MSdelay@i:
   865                           	callstack 0
   866  000003                     ___lwdiv@divisor:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x2
   870  000003                     	ds	1
   871  000004                     RTC_Read_Clock@read_clock_address:
   872                           	callstack 0
   873  000004                     RTC_Read_Calendar@read_calendar_address:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x3
   877  000004                     	ds	1
   878  000005                     ___lwdiv@counter:
   879                           	callstack 0
   880  000005                     MSdelay@j:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x4
   884  000005                     	ds	1
   885  000006                     ___lwdiv@quotient:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x5
   889  000006                     	ds	1
   890  000007                     LCD_Command@cmd:
   891                           	callstack 0
   892  000007                     LCD_Char@dat:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x6
   896  000007                     	ds	1
   897  000008                     ?___lwmod:
   898                           	callstack 0
   899  000008                     LCD_Custom_Char@msg:
   900                           	callstack 0
   901  000008                     LCD_String@msg:
   902                           	callstack 0
   903  000008                     ___lwmod@dividend:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x7
   907  000008                     	ds	2
   908  00000A                     LCD_Custom_Char@loc:
   909                           	callstack 0
   910  00000A                     LCD_String_xy@pos:
   911                           	callstack 0
   912  00000A                     ___lwmod@divisor:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x9
   916  00000A                     	ds	1
   917  00000B                     LCD_Custom_Char@i:
   918                           	callstack 0
   919  00000B                     LCD_String_xy@msg:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0xA
   923  00000B                     	ds	1
   924  00000C                     ___lwmod@counter:
   925                           	callstack 0
   926  00000C                     ON_LEDS@buffer_TX:
   927                           	callstack 0
   928                           
   929                           ; 19 bytes @ 0xB
   930  00000C                     	ds	1
   931  00000D                     ?_sprintf:
   932                           	callstack 0
   933  00000D                     LCD_String_xy@row:
   934                           	callstack 0
   935  00000D                     sprintf@sp:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0xC
   939  00000D                     	ds	1
   940  00000E                     LCD_String_xy@location:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0xD
   944  00000E                     	ds	1
   945  00000F                     sprintf@f:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0xE
   949  00000F                     	ds	1
   950  000010                     OFF_LEDS@i:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0xF
   954  000010                     	ds	2
   955  000012                     ??_sprintf:
   956                           
   957                           ; 1 bytes @ 0x11
   958  000012                     	ds	1
   959  000013                     sprintf@idx:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x12
   963  000013                     	ds	1
   964  000014                     sprintf@ap:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x13
   968  000014                     	ds	1
   969  000015                     sprintf@prec:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x14
   973  000015                     	ds	1
   974  000016                     sprintf@flag:
   975                           	callstack 0
   976  000016                     OFF_LAMPARAS@i:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x15
   980  000016                     	ds	1
   981  000017                     sprintf@val:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x16
   985  000017                     	ds	2
   986  000019                     sprintf@c:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x18
   990  000019                     	ds	1
   991  00001A                     ??_printTempHumedad:
   992  00001A                     Mostrar_Fecha@buffer_TX:
   993                           	callstack 0
   994                           
   995                           ; 26 bytes @ 0x19
   996  00001A                     	ds	5
   997  00001F                     ON_LEDS@T_Integral:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x1E
  1001  00001F                     	ds	1
  1002  000020                     ON_LEDS@valor:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x1F
  1006  000020                     	ds	2
  1007  000022                     ON_LEDS@i:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x21
  1011  000022                     	ds	2
  1012  000024                     
  1013                           ; 1 bytes @ 0x23
  1014  000024                     	ds	16
  1015  000034                     Mostrar_Fecha@i:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x33
  1019  000034                     	ds	2
  1020  000036                     
  1021                           ; 1 bytes @ 0x35
  1022 ;;
  1023 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1024 ;;
  1025 ;; *************** function _main *****************
  1026 ;; Defined at:
  1027 ;;		line 94 in file "Sistema.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  i               2   36[BANK2 ] int 
  1032 ;;  buffer_TX      36    0[BANK2 ] unsigned char [36]
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         0       0       0       0       0       0       0       0       0
  1043 ;;      Locals:         0       0       0      38       0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1045 ;;      Totals:         0       0       0      38       0       0       0       0       0
  1046 ;;Total ram usage:       38 bytes
  1047 ;; Hardware stack levels required when called: 5
  1048 ;; This function calls:
  1049 ;;		_DHT11_CheckResponse
  1050 ;;		_DHT11_ReadData
  1051 ;;		_DHT11_Start
  1052 ;;		_I2C_Init
  1053 ;;		_LCD_Init
  1054 ;;		_MSdelay
  1055 ;;		_Mostrar_Fecha
  1056 ;;		_OFF_LAMPARAS
  1057 ;;		_OFF_LEDS
  1058 ;;		_ON_LAMPARAS
  1059 ;;		_printTempHumedad
  1060 ;; This function is called by:
  1061 ;;		Startup code after reset
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text0
  1066  00102A                     __ptext0:
  1067                           	callstack 0
  1068  00102A                     _main:
  1069                           	callstack 26
  1070                           
  1071                           ;Sistema.c: 95: TRISA = 0;
  1072                           
  1073                           ;incstack = 0
  1074  00102A  0E00               	movlw	0
  1075  00102C  6E92               	movwf	146,c	;volatile
  1076                           
  1077                           ;Sistema.c: 98: PORTAbits.RA0 = 0;
  1078  00102E  9080               	bcf	128,0,c	;volatile
  1079                           
  1080                           ;Sistema.c: 99: PORTAbits.RA1 = 0;
  1081  001030  9280               	bcf	128,1,c	;volatile
  1082                           
  1083                           ;Sistema.c: 100: PORTAbits.RA2 = 0;
  1084  001032  9480               	bcf	128,2,c	;volatile
  1085                           
  1086                           ;Sistema.c: 102: PORTBbits.RB6 = 0;
  1087  001034  9C81               	bcf	129,6,c	;volatile
  1088                           
  1089                           ;Sistema.c: 105: TRISCbits.RC6 = 0;
  1090  001036  9C94               	bcf	148,6,c	;volatile
  1091                           
  1092                           ;Sistema.c: 106: TXSTAbits.TX9 = 0;
  1093  001038  9CAC               	bcf	172,6,c	;volatile
  1094                           
  1095                           ;Sistema.c: 107: TXSTAbits.TXEN = 1;
  1096  00103A  8AAC               	bsf	172,5,c	;volatile
  1097                           
  1098                           ;Sistema.c: 108: TXSTAbits.SYNC = 0;
  1099  00103C  98AC               	bcf	172,4,c	;volatile
  1100                           
  1101                           ;Sistema.c: 109: TXSTAbits.BRGH = 0;
  1102  00103E  94AC               	bcf	172,2,c	;volatile
  1103                           
  1104                           ;Sistema.c: 110: BAUDCONbits.BRG16 = 0;
  1105  001040  96B8               	bcf	184,3,c	;volatile
  1106                           
  1107                           ;Sistema.c: 111: RCSTAbits.SPEN = 1;
  1108  001042  8EAB               	bsf	171,7,c	;volatile
  1109                           
  1110                           ;Sistema.c: 112: SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
  1111  001044  0E0C               	movlw	12
  1112  001046  6EAF               	movwf	175,c	;volatile
  1113                           
  1114                           ;Sistema.c: 114: OSCCON = 0x72;
  1115  001048  0E72               	movlw	114
  1116  00104A  6ED3               	movwf	211,c	;volatile
  1117                           
  1118                           ;Sistema.c: 117: ADCON1 = 0x0F;
  1119  00104C  0E0F               	movlw	15
  1120  00104E  6EC1               	movwf	193,c	;volatile
  1121  001050                     l3328:
  1122                           
  1123                           ;Sistema.c: 120: LCD_Init();
  1124  001050  EC07  F00B         	call	_LCD_Init	;wreg free
  1125                           
  1126                           ;Sistema.c: 121: I2C_Init();
  1127  001054  EC6E  F00B         	call	_I2C_Init	;wreg free
  1128                           
  1129                           ;Sistema.c: 122: MSdelay(10);
  1130  001058  0E00               	movlw	0
  1131  00105A  6E02               	movwf	(MSdelay@val+1)^0,c
  1132  00105C  0E0A               	movlw	10
  1133  00105E  6E01               	movwf	MSdelay@val^0,c
  1134  001060  ECD4  F00A         	call	_MSdelay	;wreg free
  1135                           
  1136                           ;Sistema.c: 124: DHT11_Start();
  1137  001064  EC42  F00B         	call	_DHT11_Start	;wreg free
  1138                           
  1139                           ;Sistema.c: 125: DHT11_CheckResponse();
  1140  001068  EC9C  F00B         	call	_DHT11_CheckResponse	;wreg free
  1141                           
  1142                           ;Sistema.c: 128: var_RH_Integral = DHT11_ReadData();
  1143  00106C  ECEE  F00A         	call	_DHT11_ReadData	;wreg free
  1144  001070  6E39               	movwf	_var_RH_Integral^0,c
  1145                           
  1146                           ;Sistema.c: 129: var_RH_Decimal = DHT11_ReadData();
  1147  001072  ECEE  F00A         	call	_DHT11_ReadData	;wreg free
  1148  001076  6E3A               	movwf	_var_RH_Decimal^0,c
  1149                           
  1150                           ;Sistema.c: 130: var_T_Integral = DHT11_ReadData();
  1151  001078  ECEE  F00A         	call	_DHT11_ReadData	;wreg free
  1152  00107C  6E38               	movwf	_var_T_Integral^0,c
  1153                           
  1154                           ;Sistema.c: 131: var_T_Decimal = DHT11_ReadData();
  1155  00107E  ECEE  F00A         	call	_DHT11_ReadData	;wreg free
  1156  001082  0100               	movlb	0	; () banked
  1157  001084  6FDE               	movwf	_var_T_Decimal& (0+255),b
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;Sistema.c: 133: printTempHumedad();
  1161  001086  EC91  F007         	call	_printTempHumedad	;wreg free
  1162                           
  1163                           ;Sistema.c: 135: char buffer_TX[] = "No se ha prendido ninguna bombilla\r";
  1164  00108A  EE22  F026         	lfsr	2,main@F3188
  1165  00108E  EE12  F000         	lfsr	1,main@buffer_TX
  1166  001092  0E23               	movlw	35
  1167  001094                     u2521:
  1168  001094  CFDB FFE3          	movff	plusw2,plusw1
  1169  001098  06E8               	decf	wreg,f,c
  1170  00109A  E2FC               	bc	u2521
  1171                           
  1172                           ;Sistema.c: 136: for (int i = 0; i < 35; i++) {
  1173  00109C  0E00               	movlw	0
  1174  00109E  0102               	movlb	2	; () banked
  1175  0010A0  6F25               	movwf	(main@i+1)& (0+255),b
  1176  0010A2  0E00               	movlw	0
  1177  0010A4  6F24               	movwf	main@i& (0+255),b
  1178  0010A6                     l289:
  1179  0010A6  A2AC               	btfss	172,1,c	;volatile
  1180  0010A8  D7FE               	goto	l289
  1181                           
  1182                           ;Sistema.c: 139: };Sistema.c: 141: TXREG = buffer_TX[i];
  1183  0010AA  0E00               	movlw	low main@buffer_TX
  1184  0010AC  0102               	movlb	2	; () banked
  1185  0010AE  2524               	addwf	main@i& (0+255),w,b
  1186  0010B0  6ED9               	movwf	fsr2l,c
  1187  0010B2  0E02               	movlw	high main@buffer_TX
  1188  0010B4  2125               	addwfc	(main@i+1)& (0+255),w,b
  1189  0010B6  6EDA               	movwf	fsr2h,c
  1190  0010B8  50DF               	movf	indf2,w,c
  1191  0010BA  6EAD               	movwf	173,c	;volatile
  1192                           
  1193                           ; BSR set to: 2
  1194  0010BC  4B24               	infsnz	main@i& (0+255),f,b
  1195  0010BE  2B25               	incf	(main@i+1)& (0+255),f,b
  1196                           
  1197                           ; BSR set to: 2
  1198  0010C0  BF25               	btfsc	(main@i+1)& (0+255),7,b
  1199  0010C2  D7F1               	goto	l289
  1200  0010C4  5125               	movf	(main@i+1)& (0+255),w,b
  1201  0010C6  E104               	bnz	u2540
  1202  0010C8  0E23               	movlw	35
  1203  0010CA  5D24               	subwf	main@i& (0+255),w,b
  1204  0010CC  A0D8               	btfss	status,0,c
  1205  0010CE  D7EB               	goto	l289
  1206  0010D0                     u2540:
  1207                           
  1208                           ;Sistema.c: 142: };Sistema.c: 143: MSdelay(1000);
  1209  0010D0  0E03               	movlw	3
  1210  0010D2  6E02               	movwf	(MSdelay@val+1)^0,c
  1211  0010D4  0EE8               	movlw	232
  1212  0010D6  6E01               	movwf	MSdelay@val^0,c
  1213  0010D8  ECD4  F00A         	call	_MSdelay	;wreg free
  1214                           
  1215                           ;Sistema.c: 145: while (banAgregar == 0) {
  1216  0010DC  D005               	goto	l3370
  1217  0010DE                     l3364:
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;Sistema.c: 147: ON_LAMPARAS();
  1221  0010DE  EC86  F005         	call	_ON_LAMPARAS	;wreg free
  1222                           
  1223                           ;Sistema.c: 148: printTempHumedad();
  1224  0010E2  EC91  F007         	call	_printTempHumedad	;wreg free
  1225  0010E6  D7F4               	goto	u2540
  1226  0010E8                     l3370:
  1227  0010E8  0100               	movlb	0	; () banked
  1228  0010EA  51DC               	movf	_banAgregar& (0+255),w,b
  1229  0010EC  11DD               	iorwf	(_banAgregar+1)& (0+255),w,b
  1230  0010EE  B4D8               	btfsc	status,2,c
  1231  0010F0  D7F6               	goto	l3364
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;Sistema.c: 151: };Sistema.c: 152: Mostrar_Fecha();
  1235  0010F2  EC35  F004         	call	_Mostrar_Fecha	;wreg free
  1236                           
  1237                           ;Sistema.c: 153: MSdelay(1000);
  1238  0010F6  0E03               	movlw	3
  1239  0010F8  6E02               	movwf	(MSdelay@val+1)^0,c
  1240  0010FA  0EE8               	movlw	232
  1241  0010FC  6E01               	movwf	MSdelay@val^0,c
  1242  0010FE  ECD4  F00A         	call	_MSdelay	;wreg free
  1243                           
  1244                           ;Sistema.c: 154: banAgregar = 0;
  1245  001102  0E00               	movlw	0
  1246  001104  0100               	movlb	0	; () banked
  1247  001106  6FDD               	movwf	(_banAgregar+1)& (0+255),b
  1248  001108  0E00               	movlw	0
  1249  00110A  6FDC               	movwf	_banAgregar& (0+255),b
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;Sistema.c: 155: acumBom = 0;
  1253  00110C  0E00               	movlw	0
  1254  00110E  6FDB               	movwf	(_acumBom+1)& (0+255),b
  1255  001110  0E00               	movlw	0
  1256  001112  6FDA               	movwf	_acumBom& (0+255),b
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;Sistema.c: 156: OFF_LAMPARAS();
  1260  001114  EC39  F00A         	call	_OFF_LAMPARAS	;wreg free
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;Sistema.c: 157: OFF_LEDS();
  1264  001118  EC15  F00A         	call	_OFF_LEDS	;wreg free
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;Sistema.c: 158: MSdelay(2000);
  1268  00111C  0E07               	movlw	7
  1269  00111E  6E02               	movwf	(MSdelay@val+1)^0,c
  1270  001120  0ED0               	movlw	208
  1271  001122  6E01               	movwf	MSdelay@val^0,c
  1272  001124  ECD4  F00A         	call	_MSdelay	;wreg free
  1273  001128  D793               	goto	l3328
  1274  00112A                     __end_of_main:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _printTempHumedad *****************
  1278 ;; Defined at:
  1279 ;;		line 262 in file "Sistema.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1295 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1296 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1297 ;;Total ram usage:        2 bytes
  1298 ;; Hardware stack levels used: 1
  1299 ;; Hardware stack levels required when called: 4
  1300 ;; This function calls:
  1301 ;;		_LCD_Char
  1302 ;;		_LCD_String
  1303 ;;		_LCD_String_xy
  1304 ;;		_sprintf
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text1
  1311  000F22                     __ptext1:
  1312                           	callstack 0
  1313  000F22                     _printTempHumedad:
  1314                           	callstack 26
  1315                           
  1316                           ;Sistema.c: 264: sprintf(vec_value, "%d", var_RH_Integral);
  1317                           
  1318                           ;incstack = 0
  1319  000F22  0EE9               	movlw	low _vec_value
  1320  000F24  6E0D               	movwf	sprintf@sp^0,c
  1321  000F26  6A0E               	clrf	(sprintf@sp+1)^0,c
  1322  000F28  0E3F               	movlw	low (STR_4+1)
  1323  000F2A  6E0F               	movwf	sprintf@f^0,c
  1324  000F2C  C039  F010         	movff	_var_RH_Integral,?_sprintf+3
  1325  000F30  6A11               	clrf	(?_sprintf+4)^0,c
  1326  000F32  EC8D  F006         	call	_sprintf	;wreg free
  1327                           
  1328                           ;Sistema.c: 265: LCD_String_xy(0, 9, vec_value);
  1329  000F36  0E09               	movlw	9
  1330  000F38  6E0A               	movwf	LCD_String_xy@pos^0,c
  1331  000F3A  0EE9               	movlw	low _vec_value
  1332  000F3C  6E0B               	movwf	LCD_String_xy@msg^0,c
  1333  000F3E  6A0C               	clrf	(LCD_String_xy@msg+1)^0,c
  1334  000F40  0E00               	movlw	0
  1335  000F42  ECBA  F00A         	call	_LCD_String_xy
  1336                           
  1337                           ;Sistema.c: 266: sprintf(vec_value, ".%d ", var_RH_Decimal);
  1338  000F46  0EE9               	movlw	low _vec_value
  1339  000F48  6E0D               	movwf	sprintf@sp^0,c
  1340  000F4A  6A0E               	clrf	(sprintf@sp+1)^0,c
  1341  000F4C  0E35               	movlw	low STR_2
  1342  000F4E  6E0F               	movwf	sprintf@f^0,c
  1343  000F50  C03A  F010         	movff	_var_RH_Decimal,?_sprintf+3
  1344  000F54  6A11               	clrf	(?_sprintf+4)^0,c
  1345  000F56  EC8D  F006         	call	_sprintf	;wreg free
  1346                           
  1347                           ;Sistema.c: 267: LCD_String(vec_value);
  1348  000F5A  0EE9               	movlw	low _vec_value
  1349  000F5C  6E08               	movwf	LCD_String@msg^0,c
  1350  000F5E  6A09               	clrf	(LCD_String@msg+1)^0,c
  1351  000F60  ECEC  F009         	call	_LCD_String	;wreg free
  1352                           
  1353                           ;Sistema.c: 268: LCD_Char('%');
  1354  000F64  0E25               	movlw	37
  1355  000F66  EC52  F00B         	call	_LCD_Char
  1356                           
  1357                           ;Sistema.c: 269: if(var_RH_Integral<80){
  1358  000F6A  0E50               	movlw	80
  1359  000F6C  6039               	cpfslt	_var_RH_Integral^0,c
  1360  000F6E  D01B               	goto	l3050
  1361                           
  1362                           ;Sistema.c: 270: PORTBbits.RB6 = 1;
  1363  000F70  8C81               	bsf	129,6,c	;volatile
  1364                           
  1365                           ;Sistema.c: 271: _delay((unsigned long)((100)*(8000000L/4000.0)));
  1366  000F72  0E02               	movlw	2
  1367  000F74  6E1B               	movwf	(??_printTempHumedad+1)^0,c
  1368  000F76  0E04               	movlw	4
  1369  000F78  6E1A               	movwf	??_printTempHumedad^0,c
  1370  000F7A  0EBA               	movlw	186
  1371  000F7C                     u2567:
  1372  000F7C  2EE8               	decfsz	wreg,f,c
  1373  000F7E  D7FE               	bra	u2567
  1374  000F80  2E1A               	decfsz	??_printTempHumedad^0,f,c
  1375  000F82  D7FC               	bra	u2567
  1376  000F84  2E1B               	decfsz	(??_printTempHumedad+1)^0,f,c
  1377  000F86  D7FA               	bra	u2567
  1378  000F88  D000               	nop2	
  1379                           
  1380                           ;Sistema.c: 272: PORTBbits.RB6 = 0;
  1381  000F8A  9C81               	bcf	129,6,c	;volatile
  1382                           
  1383                           ;Sistema.c: 273: _delay((unsigned long)((100)*(8000000L/4000.0)));
  1384  000F8C  0E02               	movlw	2
  1385  000F8E  6E1B               	movwf	(??_printTempHumedad+1)^0,c
  1386  000F90  0E04               	movlw	4
  1387  000F92  6E1A               	movwf	??_printTempHumedad^0,c
  1388  000F94  0EBA               	movlw	186
  1389  000F96                     u2577:
  1390  000F96  2EE8               	decfsz	wreg,f,c
  1391  000F98  D7FE               	bra	u2577
  1392  000F9A  2E1A               	decfsz	??_printTempHumedad^0,f,c
  1393  000F9C  D7FC               	bra	u2577
  1394  000F9E  2E1B               	decfsz	(??_printTempHumedad+1)^0,f,c
  1395  000FA0  D7FA               	bra	u2577
  1396  000FA2  D000               	nop2	
  1397                           
  1398                           ;Sistema.c: 282: }else if(var_RH_Integral>80){
  1399  000FA4  D004               	goto	l3054
  1400  000FA6                     l3050:
  1401  000FA6  0E50               	movlw	80
  1402  000FA8  6439               	cpfsgt	_var_RH_Integral^0,c
  1403  000FAA  D000               	goto	u2201
  1404  000FAC                     u2201:
  1405                           
  1406                           ;Sistema.c: 294: PORTBbits.RB6 = 0;
  1407                           
  1408                           ;Sistema.c: 293: }else
  1409                           
  1410                           ;Sistema.c: 283: PORTBbits.RB6 = 0;
  1411  000FAC  9C81               	bcf	129,6,c	;volatile
  1412  000FAE                     l3054:
  1413                           
  1414                           ;Sistema.c: 297: sprintf(vec_value, "%d", var_T_Integral);
  1415  000FAE  0EE9               	movlw	low _vec_value
  1416  000FB0  6E0D               	movwf	sprintf@sp^0,c
  1417  000FB2  6A0E               	clrf	(sprintf@sp+1)^0,c
  1418  000FB4  0E3F               	movlw	low (STR_4+1)
  1419  000FB6  6E0F               	movwf	sprintf@f^0,c
  1420  000FB8  C038  F010         	movff	_var_T_Integral,?_sprintf+3
  1421  000FBC  6A11               	clrf	(?_sprintf+4)^0,c
  1422  000FBE  EC8D  F006         	call	_sprintf	;wreg free
  1423                           
  1424                           ;Sistema.c: 298: LCD_String_xy(0, 0, vec_value);
  1425  000FC2  0E00               	movlw	0
  1426  000FC4  6E0A               	movwf	LCD_String_xy@pos^0,c
  1427  000FC6  0EE9               	movlw	low _vec_value
  1428  000FC8  6E0B               	movwf	LCD_String_xy@msg^0,c
  1429  000FCA  6A0C               	clrf	(LCD_String_xy@msg+1)^0,c
  1430  000FCC  0E00               	movlw	0
  1431  000FCE  ECBA  F00A         	call	_LCD_String_xy
  1432                           
  1433                           ;Sistema.c: 299: sprintf(vec_value, ".%d", var_T_Decimal);
  1434  000FD2  0EE9               	movlw	low _vec_value
  1435  000FD4  6E0D               	movwf	sprintf@sp^0,c
  1436  000FD6  6A0E               	clrf	(sprintf@sp+1)^0,c
  1437  000FD8  0E3E               	movlw	low STR_4
  1438  000FDA  6E0F               	movwf	sprintf@f^0,c
  1439  000FDC  C0DE  F010         	movff	_var_T_Decimal,?_sprintf+3
  1440  000FE0  6A11               	clrf	(?_sprintf+4)^0,c
  1441  000FE2  EC8D  F006         	call	_sprintf	;wreg free
  1442                           
  1443                           ;Sistema.c: 300: LCD_String(vec_value);
  1444  000FE6  0EE9               	movlw	low _vec_value
  1445  000FE8  6E08               	movwf	LCD_String@msg^0,c
  1446  000FEA  6A09               	clrf	(LCD_String@msg+1)^0,c
  1447  000FEC  ECEC  F009         	call	_LCD_String	;wreg free
  1448                           
  1449                           ;Sistema.c: 301: LCD_Char(0xdf);
  1450  000FF0  0EDF               	movlw	223
  1451  000FF2  EC52  F00B         	call	_LCD_Char
  1452                           
  1453                           ;Sistema.c: 302: LCD_Char('C');
  1454  000FF6  0E43               	movlw	67
  1455  000FF8  EC52  F00B         	call	_LCD_Char
  1456                           
  1457                           ;Sistema.c: 304: LCD_String_xy(0, 6, "T");
  1458  000FFC  0E06               	movlw	6
  1459  000FFE  6E0A               	movwf	LCD_String_xy@pos^0,c
  1460  001000  0E66               	movlw	low STR_5
  1461  001002  6E0B               	movwf	LCD_String_xy@msg^0,c
  1462  001004  500B               	movf	LCD_String_xy@msg^0,w,c
  1463  001006  A4D8               	btfss	status,2,c
  1464  001008  0E08               	movlw	high __smallconst
  1465  00100A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1466  00100C  0E00               	movlw	0
  1467  00100E  ECBA  F00A         	call	_LCD_String_xy
  1468                           
  1469                           ;Sistema.c: 305: LCD_String_xy(0, 15, "H");
  1470  001012  0E0F               	movlw	15
  1471  001014  6E0A               	movwf	LCD_String_xy@pos^0,c
  1472  001016  0E64               	movlw	low STR_6
  1473  001018  6E0B               	movwf	LCD_String_xy@msg^0,c
  1474  00101A  500B               	movf	LCD_String_xy@msg^0,w,c
  1475  00101C  A4D8               	btfss	status,2,c
  1476  00101E  0E08               	movlw	high __smallconst
  1477  001020  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1478  001022  0E00               	movlw	0
  1479  001024  ECBA  F00A         	call	_LCD_String_xy
  1480  001028  0012               	return		;funcret
  1481  00102A                     __end_of_printTempHumedad:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _ON_LAMPARAS *****************
  1485 ;; Defined at:
  1486 ;;		line 309 in file "Sistema.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  i               1  109[BANK0 ] unsigned char 
  1491 ;;  i               2  107[BANK0 ] int 
  1492 ;;  i               2  105[BANK0 ] int 
  1493 ;;  i               2  103[BANK0 ] int 
  1494 ;;  i               2  101[BANK0 ] int 
  1495 ;;  buffer_TX      19   82[BANK0 ] unsigned char [19]
  1496 ;;  buffer_TX      27   55[BANK0 ] unsigned char [27]
  1497 ;;  buffer_TX      27   28[BANK0 ] unsigned char [27]
  1498 ;;  buffer_TX      28    0[BANK0 ] unsigned char [28]
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1508 ;;      Params:         0       0       0       0       0       0       0       0       0
  1509 ;;      Locals:         0     110       0       0       0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1511 ;;      Totals:         0     110       0       0       0       0       0       0       0
  1512 ;;Total ram usage:      110 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 4
  1515 ;; This function calls:
  1516 ;;		_LCD_Char
  1517 ;;		_LCD_Command
  1518 ;;		_LCD_Custom_Char
  1519 ;;		_MSdelay
  1520 ;;		_ON_LEDS
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text2
  1527  000B0C                     __ptext2:
  1528                           	callstack 0
  1529  000B0C                     _ON_LAMPARAS:
  1530                           	callstack 26
  1531                           
  1532                           ;Sistema.c: 310: LCD_Custom_Char(0, bombillaCar0);
  1533                           
  1534                           ;incstack = 0
  1535  000B0C  0EF5               	movlw	low _bombillaCar0
  1536  000B0E  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1537  000B10  6A09               	clrf	(LCD_Custom_Char@msg+1)^0,c
  1538  000B12  0E00               	movlw	0
  1539  000B14  ECA0  F00A         	call	_LCD_Custom_Char
  1540                           
  1541                           ;Sistema.c: 311: LCD_Custom_Char(1, bombillaCar0);
  1542  000B18  0EF5               	movlw	low _bombillaCar0
  1543  000B1A  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1544  000B1C  6A09               	clrf	(LCD_Custom_Char@msg+1)^0,c
  1545  000B1E  0E01               	movlw	1
  1546  000B20  ECA0  F00A         	call	_LCD_Custom_Char
  1547                           
  1548                           ;Sistema.c: 312: LCD_Custom_Char(2, bombillaCar0);
  1549  000B24  0EF5               	movlw	low _bombillaCar0
  1550  000B26  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1551  000B28  6A09               	clrf	(LCD_Custom_Char@msg+1)^0,c
  1552  000B2A  0E02               	movlw	2
  1553  000B2C  ECA0  F00A         	call	_LCD_Custom_Char
  1554                           
  1555                           ;Sistema.c: 313: LCD_Custom_Char(3, alert);
  1556  000B30  0EBD               	movlw	low _alert
  1557  000B32  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1558  000B34  0E01               	movlw	high _alert
  1559  000B36  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1560  000B38  0E03               	movlw	3
  1561  000B3A  ECA0  F00A         	call	_LCD_Custom_Char
  1562                           
  1563                           ;Sistema.c: 315: ON_LEDS(var_T_Integral);
  1564  000B3E  5038               	movf	_var_T_Integral^0,w,c
  1565  000B40  ECFC  F008         	call	_ON_LEDS
  1566                           
  1567                           ;Sistema.c: 316: if (var_T_Integral < 30 && acumBom == 0) {
  1568  000B44  0E1E               	movlw	30
  1569  000B46  6038               	cpfslt	_var_T_Integral^0,c
  1570  000B48  D033               	goto	l3094
  1571  000B4A  0100               	movlb	0	; () banked
  1572  000B4C  51DA               	movf	_acumBom& (0+255),w,b
  1573  000B4E  11DB               	iorwf	(_acumBom+1)& (0+255),w,b
  1574  000B50  A4D8               	btfss	status,2,c
  1575  000B52  D02E               	goto	l3094
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;Sistema.c: 317: PORTAbits.RA0 = 1;
  1579  000B54  8080               	bsf	128,0,c	;volatile
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;Sistema.c: 318: char buffer_TX[] = "Se encendio la ;bombilla 1\r";
  1583  000B56  EE21  F000         	lfsr	2,ON_LAMPARAS@F3209
  1584  000B5A  EE10  F060         	lfsr	1,ON_LAMPARAS@buffer_TX
  1585  000B5E  0E1B               	movlw	27
  1586  000B60                     u2231:
  1587  000B60  CFDB FFE3          	movff	plusw2,plusw1
  1588  000B64  06E8               	decf	wreg,f,c
  1589  000B66  E2FC               	bc	u2231
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;Sistema.c: 319: for (int i = 0; i < 27; i++) {
  1593  000B68  0E00               	movlw	0
  1594  000B6A  6FC6               	movwf	(ON_LAMPARAS@i+1)& (0+255),b
  1595  000B6C  0E00               	movlw	0
  1596  000B6E  6FC5               	movwf	ON_LAMPARAS@i& (0+255),b
  1597  000B70                     l374:
  1598                           
  1599                           ; BSR set to: 0
  1600  000B70  A2AC               	btfss	172,1,c	;volatile
  1601  000B72  D7FE               	goto	l374
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;Sistema.c: 322: };Sistema.c: 324: TXREG = buffer_TX[i];
  1605  000B74  51C5               	movf	ON_LAMPARAS@i& (0+255),w,b
  1606  000B76  0F60               	addlw	low ON_LAMPARAS@buffer_TX
  1607  000B78  6ED9               	movwf	fsr2l,c
  1608  000B7A  6ADA               	clrf	fsr2h,c
  1609  000B7C  50DF               	movf	indf2,w,c
  1610  000B7E  6EAD               	movwf	173,c	;volatile
  1611                           
  1612                           ; BSR set to: 0
  1613  000B80  4BC5               	infsnz	ON_LAMPARAS@i& (0+255),f,b
  1614  000B82  2BC6               	incf	(ON_LAMPARAS@i+1)& (0+255),f,b
  1615                           
  1616                           ; BSR set to: 0
  1617  000B84  BFC6               	btfsc	(ON_LAMPARAS@i+1)& (0+255),7,b
  1618  000B86  D7F4               	goto	l374
  1619  000B88  51C6               	movf	(ON_LAMPARAS@i+1)& (0+255),w,b
  1620  000B8A  E104               	bnz	u2250
  1621  000B8C  0E1B               	movlw	27
  1622  000B8E  5DC5               	subwf	ON_LAMPARAS@i& (0+255),w,b
  1623  000B90  A0D8               	btfss	status,0,c
  1624  000B92  D7EE               	goto	l374
  1625  000B94                     u2250:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;Sistema.c: 325: };Sistema.c: 327: LCD_Command(0xc0 | (0));
  1629  000B94  0EC0               	movlw	192
  1630  000B96  EC60  F00B         	call	_LCD_Command
  1631                           
  1632                           ;Sistema.c: 328: LCD_Char(0);
  1633  000B9A  0E00               	movlw	0
  1634  000B9C  EC52  F00B         	call	_LCD_Char
  1635                           
  1636                           ;Sistema.c: 331: var_T_Integral = var_T_Integral + 6;
  1637  000BA0  5038               	movf	_var_T_Integral^0,w,c
  1638  000BA2  0F06               	addlw	6
  1639  000BA4  6E38               	movwf	_var_T_Integral^0,c
  1640                           
  1641                           ;Sistema.c: 332: acumBom = 6;
  1642  000BA6  0E00               	movlw	0
  1643  000BA8  0100               	movlb	0	; () banked
  1644  000BAA  6FDB               	movwf	(_acumBom+1)& (0+255),b
  1645  000BAC  0E06               	movlw	6
  1646  000BAE  D036               	goto	L1
  1647  000BB0                     l3094:
  1648  000BB0  0E1E               	movlw	30
  1649  000BB2  6038               	cpfslt	_var_T_Integral^0,c
  1650  000BB4  D035               	goto	l3120
  1651  000BB6  0E06               	movlw	6
  1652  000BB8  0100               	movlb	0	; () banked
  1653  000BBA  19DA               	xorwf	_acumBom& (0+255),w,b
  1654  000BBC  11DB               	iorwf	(_acumBom+1)& (0+255),w,b
  1655  000BBE  A4D8               	btfss	status,2,c
  1656  000BC0  D02F               	goto	l3120
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;Sistema.c: 335: PORTAbits.RA1 = 1;
  1660  000BC2  8280               	bsf	128,1,c	;volatile
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;Sistema.c: 337: char buffer_TX[] = "Se encendio la bombilla 2\r";
  1664  000BC4  EE21  F037         	lfsr	2,ON_LAMPARAS@F3212
  1665  000BC8  EE10  F07C         	lfsr	1,ON_LAMPARAS@buffer_TX_837
  1666  000BCC  0E1A               	movlw	26
  1667  000BCE                     u2281:
  1668  000BCE  CFDB FFE3          	movff	plusw2,plusw1
  1669  000BD2  06E8               	decf	wreg,f,c
  1670  000BD4  E2FC               	bc	u2281
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;Sistema.c: 338: for (int i = 0; i < 27; i++) {
  1674  000BD6  0E00               	movlw	0
  1675  000BD8  6FC8               	movwf	(ON_LAMPARAS@i_838+1)& (0+255),b
  1676  000BDA  0E00               	movlw	0
  1677  000BDC  6FC7               	movwf	ON_LAMPARAS@i_838& (0+255),b
  1678  000BDE                     l383:
  1679                           
  1680                           ; BSR set to: 0
  1681  000BDE  A2AC               	btfss	172,1,c	;volatile
  1682  000BE0  D7FE               	goto	l383
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;Sistema.c: 341: };Sistema.c: 343: TXREG = buffer_TX[i];
  1686  000BE2  51C7               	movf	ON_LAMPARAS@i_838& (0+255),w,b
  1687  000BE4  0F7C               	addlw	low ON_LAMPARAS@buffer_TX_837
  1688  000BE6  6ED9               	movwf	fsr2l,c
  1689  000BE8  6ADA               	clrf	fsr2h,c
  1690  000BEA  50DF               	movf	indf2,w,c
  1691  000BEC  6EAD               	movwf	173,c	;volatile
  1692                           
  1693                           ; BSR set to: 0
  1694  000BEE  4BC7               	infsnz	ON_LAMPARAS@i_838& (0+255),f,b
  1695  000BF0  2BC8               	incf	(ON_LAMPARAS@i_838+1)& (0+255),f,b
  1696                           
  1697                           ; BSR set to: 0
  1698  000BF2  BFC8               	btfsc	(ON_LAMPARAS@i_838+1)& (0+255),7,b
  1699  000BF4  D7F4               	goto	l383
  1700  000BF6  51C8               	movf	(ON_LAMPARAS@i_838+1)& (0+255),w,b
  1701  000BF8  E104               	bnz	u2300
  1702  000BFA  0E1B               	movlw	27
  1703  000BFC  5DC7               	subwf	ON_LAMPARAS@i_838& (0+255),w,b
  1704  000BFE  A0D8               	btfss	status,0,c
  1705  000C00  D7EE               	goto	l383
  1706  000C02                     u2300:
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;Sistema.c: 344: };Sistema.c: 346: LCD_Command(0xc0 | (3));
  1710  000C02  0EC3               	movlw	195
  1711  000C04  EC60  F00B         	call	_LCD_Command
  1712                           
  1713                           ;Sistema.c: 347: LCD_Char(1);
  1714  000C08  0E01               	movlw	1
  1715  000C0A  EC52  F00B         	call	_LCD_Char
  1716                           
  1717                           ;Sistema.c: 349: var_T_Integral = var_T_Integral + 6;
  1718  000C0E  5038               	movf	_var_T_Integral^0,w,c
  1719  000C10  0F06               	addlw	6
  1720  000C12  6E38               	movwf	_var_T_Integral^0,c
  1721                           
  1722                           ;Sistema.c: 350: acumBom = 12;
  1723  000C14  0E00               	movlw	0
  1724  000C16  0100               	movlb	0	; () banked
  1725  000C18  6FDB               	movwf	(_acumBom+1)& (0+255),b
  1726  000C1A  0E0C               	movlw	12
  1727  000C1C                     L1:
  1728  000C1C  6FDA               	movwf	_acumBom& (0+255),b
  1729                           
  1730                           ;Sistema.c: 351: } else if (var_T_Integral < 30 && acumBom == 12) {
  1731  000C1E  D076               	goto	l3180
  1732  000C20                     l3120:
  1733  000C20  0E1E               	movlw	30
  1734  000C22  6038               	cpfslt	_var_T_Integral^0,c
  1735  000C24  D030               	goto	l3144
  1736  000C26  0E0C               	movlw	12
  1737  000C28  0100               	movlb	0	; () banked
  1738  000C2A  19DA               	xorwf	_acumBom& (0+255),w,b
  1739  000C2C  11DB               	iorwf	(_acumBom+1)& (0+255),w,b
  1740  000C2E  A4D8               	btfss	status,2,c
  1741  000C30  D02A               	goto	l3144
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;Sistema.c: 352: PORTAbits.RA2 = 1;
  1745  000C32  8480               	bsf	128,2,c	;volatile
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;Sistema.c: 354: char buffer_TX[] = "Se encendio la bombilla 3\r";
  1749  000C34  EE21  F01C         	lfsr	2,ON_LAMPARAS@F3215
  1750  000C38  EE10  F097         	lfsr	1,ON_LAMPARAS@buffer_TX_840
  1751  000C3C  0E1A               	movlw	26
  1752  000C3E                     u2331:
  1753  000C3E  CFDB FFE3          	movff	plusw2,plusw1
  1754  000C42  06E8               	decf	wreg,f,c
  1755  000C44  E2FC               	bc	u2331
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;Sistema.c: 355: for (int i = 0; i < 27; i++) {
  1759  000C46  0E00               	movlw	0
  1760  000C48  6FCA               	movwf	(ON_LAMPARAS@i_841+1)& (0+255),b
  1761  000C4A  0E00               	movlw	0
  1762  000C4C  6FC9               	movwf	ON_LAMPARAS@i_841& (0+255),b
  1763  000C4E                     l392:
  1764                           
  1765                           ; BSR set to: 0
  1766  000C4E  A2AC               	btfss	172,1,c	;volatile
  1767  000C50  D7FE               	goto	l392
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;Sistema.c: 358: };Sistema.c: 360: TXREG = buffer_TX[i];
  1771  000C52  51C9               	movf	ON_LAMPARAS@i_841& (0+255),w,b
  1772  000C54  0F97               	addlw	low ON_LAMPARAS@buffer_TX_840
  1773  000C56  6ED9               	movwf	fsr2l,c
  1774  000C58  6ADA               	clrf	fsr2h,c
  1775  000C5A  50DF               	movf	indf2,w,c
  1776  000C5C  6EAD               	movwf	173,c	;volatile
  1777                           
  1778                           ; BSR set to: 0
  1779  000C5E  4BC9               	infsnz	ON_LAMPARAS@i_841& (0+255),f,b
  1780  000C60  2BCA               	incf	(ON_LAMPARAS@i_841+1)& (0+255),f,b
  1781                           
  1782                           ; BSR set to: 0
  1783  000C62  BFCA               	btfsc	(ON_LAMPARAS@i_841+1)& (0+255),7,b
  1784  000C64  D7F4               	goto	l392
  1785  000C66  51CA               	movf	(ON_LAMPARAS@i_841+1)& (0+255),w,b
  1786  000C68  E104               	bnz	u2350
  1787  000C6A  0E1B               	movlw	27
  1788  000C6C  5DC9               	subwf	ON_LAMPARAS@i_841& (0+255),w,b
  1789  000C6E  A0D8               	btfss	status,0,c
  1790  000C70  D7EE               	goto	l392
  1791  000C72                     u2350:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;Sistema.c: 361: };Sistema.c: 364: LCD_Command(0xc0 | (6));
  1795  000C72  0EC6               	movlw	198
  1796  000C74  EC60  F00B         	call	_LCD_Command
  1797                           
  1798                           ;Sistema.c: 365: LCD_Char(2);
  1799  000C78  0E02               	movlw	2
  1800  000C7A  EC52  F00B         	call	_LCD_Char
  1801                           
  1802                           ;Sistema.c: 367: var_T_Integral = var_T_Integral + 6;
  1803  000C7E  5038               	movf	_var_T_Integral^0,w,c
  1804  000C80  0F06               	addlw	6
  1805  000C82  6E38               	movwf	_var_T_Integral^0,c
  1806                           
  1807                           ;Sistema.c: 368: } else if (var_T_Integral > 35) {
  1808  000C84  D043               	goto	l3180
  1809  000C86                     l3144:
  1810  000C86  0E23               	movlw	35
  1811  000C88  6438               	cpfsgt	_var_T_Integral^0,c
  1812  000C8A  D03B               	goto	l3178
  1813                           
  1814                           ;Sistema.c: 369: banAgregar = 1;
  1815  000C8C  0E00               	movlw	0
  1816  000C8E  0100               	movlb	0	; () banked
  1817  000C90  6FDD               	movwf	(_banAgregar+1)& (0+255),b
  1818  000C92  0E01               	movlw	1
  1819  000C94  6FDC               	movwf	_banAgregar& (0+255),b
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;Sistema.c: 371: char buffer_TX[] = "Temperatura Alta \r";
  1823  000C96  EE21  F081         	lfsr	2,ON_LAMPARAS@F3218
  1824  000C9A  EE10  F0B2         	lfsr	1,ON_LAMPARAS@buffer_TX_843
  1825  000C9E  0E12               	movlw	18
  1826  000CA0                     u2371:
  1827  000CA0  CFDB FFE3          	movff	plusw2,plusw1
  1828  000CA4  06E8               	decf	wreg,f,c
  1829  000CA6  E2FC               	bc	u2371
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;Sistema.c: 372: for (int i = 0; i < 19; i++) {
  1833  000CA8  0E00               	movlw	0
  1834  000CAA  6FCC               	movwf	(ON_LAMPARAS@i_844+1)& (0+255),b
  1835  000CAC  0E00               	movlw	0
  1836  000CAE  6FCB               	movwf	ON_LAMPARAS@i_844& (0+255),b
  1837  000CB0                     l401:
  1838                           
  1839                           ; BSR set to: 0
  1840  000CB0  A2AC               	btfss	172,1,c	;volatile
  1841  000CB2  D7FE               	goto	l401
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;Sistema.c: 375: };Sistema.c: 377: TXREG = buffer_TX[i];
  1845  000CB4  51CB               	movf	ON_LAMPARAS@i_844& (0+255),w,b
  1846  000CB6  0FB2               	addlw	low ON_LAMPARAS@buffer_TX_843
  1847  000CB8  6ED9               	movwf	fsr2l,c
  1848  000CBA  6ADA               	clrf	fsr2h,c
  1849  000CBC  50DF               	movf	indf2,w,c
  1850  000CBE  6EAD               	movwf	173,c	;volatile
  1851                           
  1852                           ; BSR set to: 0
  1853  000CC0  4BCB               	infsnz	ON_LAMPARAS@i_844& (0+255),f,b
  1854  000CC2  2BCC               	incf	(ON_LAMPARAS@i_844+1)& (0+255),f,b
  1855                           
  1856                           ; BSR set to: 0
  1857  000CC4  BFCC               	btfsc	(ON_LAMPARAS@i_844+1)& (0+255),7,b
  1858  000CC6  D7F4               	goto	l401
  1859  000CC8  51CC               	movf	(ON_LAMPARAS@i_844+1)& (0+255),w,b
  1860  000CCA  E104               	bnz	u2390
  1861  000CCC  0E13               	movlw	19
  1862  000CCE  5DCB               	subwf	ON_LAMPARAS@i_844& (0+255),w,b
  1863  000CD0  A0D8               	btfss	status,0,c
  1864  000CD2  D7EE               	goto	l401
  1865  000CD4                     u2390:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;Sistema.c: 378: };Sistema.c: 380: for (char i = 0; i <= 5; i++) {
  1869  000CD4  0E00               	movlw	0
  1870  000CD6  6FCD               	movwf	ON_LAMPARAS@i_845& (0+255),b
  1871  000CD8                     l3168:
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;Sistema.c: 381: LCD_Command(0xc0 | (i*3));
  1875  000CD8  51CD               	movf	ON_LAMPARAS@i_845& (0+255),w,b
  1876  000CDA  0D03               	mullw	3
  1877  000CDC  50F3               	movf	243,w,c
  1878  000CDE  09C0               	iorlw	192
  1879  000CE0  EC60  F00B         	call	_LCD_Command
  1880                           
  1881                           ;Sistema.c: 382: LCD_Char(6);
  1882  000CE4  0E06               	movlw	6
  1883  000CE6  EC52  F00B         	call	_LCD_Char
  1884  000CEA  0100               	movlb	0	; () banked
  1885  000CEC  2BCD               	incf	ON_LAMPARAS@i_845& (0+255),f,b
  1886                           
  1887                           ; BSR set to: 0
  1888  000CEE  0E05               	movlw	5
  1889  000CF0  65CD               	cpfsgt	ON_LAMPARAS@i_845& (0+255),b
  1890  000CF2  D7F2               	goto	l3168
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;Sistema.c: 384: };Sistema.c: 385: MSdelay(100);
  1894  000CF4  0E00               	movlw	0
  1895  000CF6  6E02               	movwf	(MSdelay@val+1)^0,c
  1896  000CF8  0E64               	movlw	100
  1897  000CFA  6E01               	movwf	MSdelay@val^0,c
  1898  000CFC  ECD4  F00A         	call	_MSdelay	;wreg free
  1899                           
  1900                           ;Sistema.c: 386: } else
  1901  000D00  D005               	goto	l3180
  1902  000D02                     l3178:
  1903                           
  1904                           ;Sistema.c: 387: banAgregar = 1;
  1905  000D02  0E00               	movlw	0
  1906  000D04  0100               	movlb	0	; () banked
  1907  000D06  6FDD               	movwf	(_banAgregar+1)& (0+255),b
  1908  000D08  0E01               	movlw	1
  1909  000D0A  6FDC               	movwf	_banAgregar& (0+255),b
  1910  000D0C                     l3180:
  1911                           
  1912                           ;Sistema.c: 388: MSdelay(1000);
  1913  000D0C  0E03               	movlw	3
  1914  000D0E  6E02               	movwf	(MSdelay@val+1)^0,c
  1915  000D10  0EE8               	movlw	232
  1916  000D12  6E01               	movwf	MSdelay@val^0,c
  1917  000D14  ECD4  F00A         	call	_MSdelay	;wreg free
  1918  000D18  0012               	return		;funcret
  1919  000D1A                     __end_of_ON_LAMPARAS:
  1920                           	callstack 0
  1921                           
  1922 ;; *************** function _ON_LEDS *****************
  1923 ;; Defined at:
  1924 ;;		line 214 in file "Sistema.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  T_Integral      1    wreg     unsigned char 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  T_Integral      1   30[COMRAM] unsigned char 
  1929 ;;  i               2   33[COMRAM] int 
  1930 ;;  buffer_TX      19   11[COMRAM] unsigned char [19]
  1931 ;;  valor           2   31[COMRAM] int 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1941 ;;      Params:         0       0       0       0       0       0       0       0       0
  1942 ;;      Locals:        24       0       0       0       0       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1944 ;;      Totals:        24       0       0       0       0       0       0       0       0
  1945 ;;Total ram usage:       24 bytes
  1946 ;; Hardware stack levels used: 1
  1947 ;; Hardware stack levels required when called: 3
  1948 ;; This function calls:
  1949 ;;		_LCD_Char
  1950 ;;		_LCD_Command
  1951 ;;		_LCD_Custom_Char
  1952 ;; This function is called by:
  1953 ;;		_ON_LAMPARAS
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text3
  1958  0011F8                     __ptext3:
  1959                           	callstack 0
  1960  0011F8                     _ON_LEDS:
  1961                           	callstack 26
  1962                           
  1963                           ;incstack = 0
  1964                           ;ON_LEDS@T_Integral stored from wreg
  1965  0011F8  6E1F               	movwf	ON_LEDS@T_Integral^0,c
  1966                           
  1967                           ;Sistema.c: 215: LCD_Custom_Char(5, good);
  1968  0011FA  0EC5               	movlw	low _good
  1969  0011FC  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1970  0011FE  0E01               	movlw	high _good
  1971  001200  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1972  001202  0E05               	movlw	5
  1973  001204  ECA0  F00A         	call	_LCD_Custom_Char
  1974                           
  1975                           ;Sistema.c: 217: int valor = T_Integral;
  1976  001208  C01F  F020         	movff	ON_LEDS@T_Integral,ON_LEDS@valor
  1977  00120C  6A21               	clrf	(ON_LEDS@valor+1)^0,c
  1978                           
  1979                           ;Sistema.c: 218: if (valor < 30) {
  1980  00120E  BE21               	btfsc	(ON_LEDS@valor+1)^0,7,c
  1981  001210  D006               	goto	u1960
  1982  001212  5021               	movf	(ON_LEDS@valor+1)^0,w,c
  1983  001214  E108               	bnz	l2860
  1984  001216  0E1E               	movlw	30
  1985  001218  5C20               	subwf	ON_LEDS@valor^0,w,c
  1986  00121A  B0D8               	btfsc	status,0,c
  1987  00121C  D004               	goto	l2860
  1988  00121E                     u1960:
  1989                           
  1990                           ;Sistema.c: 219: PORTAbits.RA4 = 1;
  1991  00121E  8880               	bsf	128,4,c	;volatile
  1992                           
  1993                           ;Sistema.c: 220: PORTAbits.RA3 = 0;
  1994  001220  9680               	bcf	128,3,c	;volatile
  1995                           
  1996                           ;Sistema.c: 221: PORTAbits.RA5 = 0;
  1997  001222  9A80               	bcf	128,5,c	;volatile
  1998                           
  1999                           ;Sistema.c: 222: } else if (valor >= 30 && valor <= 35) {
  2000  001224  0012               	return	
  2001  001226                     l2860:
  2002  001226  BE21               	btfsc	(ON_LEDS@valor+1)^0,7,c
  2003  001228  D037               	goto	l340
  2004  00122A  5021               	movf	(ON_LEDS@valor+1)^0,w,c
  2005  00122C  E104               	bnz	u1970
  2006  00122E  0E1E               	movlw	30
  2007  001230  5C20               	subwf	ON_LEDS@valor^0,w,c
  2008  001232  A0D8               	btfss	status,0,c
  2009  001234  D031               	goto	l340
  2010  001236                     u1970:
  2011  001236  BE21               	btfsc	(ON_LEDS@valor+1)^0,7,c
  2012  001238  D006               	goto	u1980
  2013  00123A  5021               	movf	(ON_LEDS@valor+1)^0,w,c
  2014  00123C  E12D               	bnz	l340
  2015  00123E  0E24               	movlw	36
  2016  001240  5C20               	subwf	ON_LEDS@valor^0,w,c
  2017  001242  B0D8               	btfsc	status,0,c
  2018  001244  D029               	goto	l340
  2019  001246                     u1980:
  2020                           
  2021                           ;Sistema.c: 223: PORTAbits.RA4 = 0;
  2022  001246  9880               	bcf	128,4,c	;volatile
  2023                           
  2024                           ;Sistema.c: 224: PORTAbits.RA3 = 1;
  2025  001248  8680               	bsf	128,3,c	;volatile
  2026                           
  2027                           ;Sistema.c: 225: PORTAbits.RA5 = 0;
  2028  00124A  9A80               	bcf	128,5,c	;volatile
  2029                           
  2030                           ;Sistema.c: 227: LCD_Command(0xc0 | (15));
  2031  00124C  0ECF               	movlw	207
  2032  00124E  EC60  F00B         	call	_LCD_Command
  2033                           
  2034                           ;Sistema.c: 228: LCD_Char(5);
  2035  001252  0E05               	movlw	5
  2036  001254  EC52  F00B         	call	_LCD_Char
  2037                           
  2038                           ;Sistema.c: 230: char buffer_TX[] = "Temperatura Ideal\r";
  2039  001258  EE21  F094         	lfsr	2,ON_LEDS@F3201
  2040  00125C  EE10  F00C         	lfsr	1,ON_LEDS@buffer_TX
  2041  001260  0E12               	movlw	18
  2042  001262                     u1991:
  2043  001262  CFDB FFE3          	movff	plusw2,plusw1
  2044  001266  06E8               	decf	wreg,f,c
  2045  001268  E2FC               	bc	u1991
  2046                           
  2047                           ;Sistema.c: 231: for (int i = 0; i < 19; i++) {
  2048  00126A  0E00               	movlw	0
  2049  00126C  6E23               	movwf	(ON_LEDS@i+1)^0,c
  2050  00126E  0E00               	movlw	0
  2051  001270  6E22               	movwf	ON_LEDS@i^0,c
  2052  001272                     l345:
  2053  001272  A2AC               	btfss	172,1,c	;volatile
  2054  001274  D7FE               	goto	l345
  2055                           
  2056                           ;Sistema.c: 234: };Sistema.c: 236: TXREG = buffer_TX[i];
  2057  001276  5022               	movf	ON_LEDS@i^0,w,c
  2058  001278  0F0C               	addlw	low ON_LEDS@buffer_TX
  2059  00127A  6ED9               	movwf	fsr2l,c
  2060  00127C  6ADA               	clrf	fsr2h,c
  2061  00127E  50DF               	movf	indf2,w,c
  2062  001280  6EAD               	movwf	173,c	;volatile
  2063  001282  4A22               	infsnz	ON_LEDS@i^0,f,c
  2064  001284  2A23               	incf	(ON_LEDS@i+1)^0,f,c
  2065  001286  BE23               	btfsc	(ON_LEDS@i+1)^0,7,c
  2066  001288  D7F4               	goto	l345
  2067  00128A  5023               	movf	(ON_LEDS@i+1)^0,w,c
  2068  00128C  E108               	bnz	l349
  2069  00128E  0E13               	movlw	19
  2070  001290  5C22               	subwf	ON_LEDS@i^0,w,c
  2071  001292  B0D8               	btfsc	status,0,c
  2072  001294  0012               	return	
  2073  001296  D7ED               	goto	l345
  2074  001298                     l340:
  2075                           
  2076                           ;Sistema.c: 239: else {;Sistema.c: 240: PORTAbits.RA4 = 0;
  2077  001298  9880               	bcf	128,4,c	;volatile
  2078                           
  2079                           ;Sistema.c: 241: PORTAbits.RA3 = 0;
  2080  00129A  9680               	bcf	128,3,c	;volatile
  2081                           
  2082                           ;Sistema.c: 242: PORTAbits.RA5 = 1;
  2083  00129C  8A80               	bsf	128,5,c	;volatile
  2084  00129E                     l349:
  2085  00129E  0012               	return		;funcret
  2086  0012A0                     __end_of_ON_LEDS:
  2087                           	callstack 0
  2088                           
  2089 ;; *************** function _LCD_Custom_Char *****************
  2090 ;; Defined at:
  2091 ;;		line 49 in file "LCD_16x2.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  loc             1    wreg     unsigned char 
  2094 ;;  msg             2    7[COMRAM] PTR unsigned char 
  2095 ;;		 -> alert(8), bombillaCar0(8), good(8), 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  loc             1    9[COMRAM] unsigned char 
  2098 ;;  i               1   10[COMRAM] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2108 ;;      Params:         2       0       0       0       0       0       0       0       0
  2109 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2111 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2112 ;;Total ram usage:        4 bytes
  2113 ;; Hardware stack levels used: 1
  2114 ;; Hardware stack levels required when called: 2
  2115 ;; This function calls:
  2116 ;;		_LCD_Char
  2117 ;;		_LCD_Command
  2118 ;; This function is called by:
  2119 ;;		_ON_LEDS
  2120 ;;		_ON_LAMPARAS
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text4
  2125  001540                     __ptext4:
  2126                           	callstack 0
  2127  001540                     _LCD_Custom_Char:
  2128                           	callstack 26
  2129                           
  2130                           ;incstack = 0
  2131                           ;LCD_Custom_Char@loc stored from wreg
  2132  001540  6E0A               	movwf	LCD_Custom_Char@loc^0,c
  2133                           
  2134                           ;LCD_16x2.c: 51: unsigned char i;;LCD_16x2.c: 52: if(loc<8)
  2135  001542  0E08               	movlw	8
  2136  001544  600A               	cpfslt	LCD_Custom_Char@loc^0,c
  2137  001546  0012               	return	
  2138                           
  2139                           ;LCD_16x2.c: 53: {;LCD_16x2.c: 54: LCD_Command(0x40+(loc*8));
  2140  001548  500A               	movf	LCD_Custom_Char@loc^0,w,c
  2141  00154A  0D08               	mullw	8
  2142  00154C  50F3               	movf	243,w,c
  2143  00154E  0F40               	addlw	64
  2144  001550  EC60  F00B         	call	_LCD_Command
  2145                           
  2146                           ;LCD_16x2.c: 55: for(i=0;i<8;i++)
  2147  001554  0E00               	movlw	0
  2148  001556  6E0B               	movwf	LCD_Custom_Char@i^0,c
  2149  001558                     l2740:
  2150                           
  2151                           ;LCD_16x2.c: 56: LCD_Char(msg[i]);
  2152  001558  500B               	movf	LCD_Custom_Char@i^0,w,c
  2153  00155A  2408               	addwf	LCD_Custom_Char@msg^0,w,c
  2154  00155C  6ED9               	movwf	fsr2l,c
  2155  00155E  0E00               	movlw	0
  2156  001560  2009               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
  2157  001562  6EDA               	movwf	fsr2h,c
  2158  001564  50DF               	movf	indf2,w,c
  2159  001566  EC52  F00B         	call	_LCD_Char
  2160  00156A  2A0B               	incf	LCD_Custom_Char@i^0,f,c
  2161  00156C  0E07               	movlw	7
  2162  00156E  640B               	cpfsgt	LCD_Custom_Char@i^0,c
  2163  001570  D7F3               	goto	l2740
  2164  001572  0012               	return	
  2165  001574                     __end_of_LCD_Custom_Char:
  2166                           	callstack 0
  2167                           
  2168 ;; *************** function _OFF_LEDS *****************
  2169 ;; Defined at:
  2170 ;;		line 199 in file "Sistema.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  i               2   15[COMRAM] int 
  2175 ;;  buffer_TX      15    0[COMRAM] unsigned char [15]
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 3F/0
  2182 ;;		On exit  : 3F/0
  2183 ;;		Unchanged: 3F/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2185 ;;      Params:         0       0       0       0       0       0       0       0       0
  2186 ;;      Locals:        17       0       0       0       0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2188 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2189 ;;Total ram usage:       17 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text5
  2199  00142A                     __ptext5:
  2200                           	callstack 0
  2201  00142A                     _OFF_LEDS:
  2202                           	callstack 30
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;Sistema.c: 200: PORTAbits.RA4 = 0;
  2206                           
  2207                           ;incstack = 0
  2208  00142A  9880               	bcf	128,4,c	;volatile
  2209                           
  2210                           ;Sistema.c: 201: PORTAbits.RA3 = 0;
  2211  00142C  9680               	bcf	128,3,c	;volatile
  2212                           
  2213                           ;Sistema.c: 202: PORTAbits.RA5 = 0;
  2214  00142E  9A80               	bcf	128,5,c	;volatile
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;Sistema.c: 204: char buffer_TX[] = "Apagando LEDS\r";
  2218  001430  EE21  F0A7         	lfsr	2,OFF_LEDS@F3196
  2219  001434  EE10  F001         	lfsr	1,OFF_LEDS@buffer_TX
  2220  001438  0E0E               	movlw	14
  2221  00143A                     u2491:
  2222  00143A  CFDB FFE3          	movff	plusw2,plusw1
  2223  00143E  06E8               	decf	wreg,f,c
  2224  001440  E2FC               	bc	u2491
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;Sistema.c: 205: for (int i = 0; i < 15; i++) {
  2228  001442  0E00               	movlw	0
  2229  001444  6E11               	movwf	(OFF_LEDS@i+1)^0,c
  2230  001446  0E00               	movlw	0
  2231  001448  6E10               	movwf	OFF_LEDS@i^0,c
  2232  00144A                     l332:
  2233                           
  2234                           ; BSR set to: 0
  2235  00144A  A2AC               	btfss	172,1,c	;volatile
  2236  00144C  D7FE               	goto	l332
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;Sistema.c: 208: };Sistema.c: 210: TXREG = buffer_TX[i];
  2240  00144E  5010               	movf	OFF_LEDS@i^0,w,c
  2241  001450  0F01               	addlw	low OFF_LEDS@buffer_TX
  2242  001452  6ED9               	movwf	fsr2l,c
  2243  001454  6ADA               	clrf	fsr2h,c
  2244  001456  50DF               	movf	indf2,w,c
  2245  001458  6EAD               	movwf	173,c	;volatile
  2246                           
  2247                           ; BSR set to: 0
  2248  00145A  4A10               	infsnz	OFF_LEDS@i^0,f,c
  2249  00145C  2A11               	incf	(OFF_LEDS@i+1)^0,f,c
  2250                           
  2251                           ; BSR set to: 0
  2252  00145E  BE11               	btfsc	(OFF_LEDS@i+1)^0,7,c
  2253  001460  D7F4               	goto	l332
  2254  001462  5011               	movf	(OFF_LEDS@i+1)^0,w,c
  2255  001464  E105               	bnz	u2510
  2256  001466  0E0F               	movlw	15
  2257  001468  5C10               	subwf	OFF_LEDS@i^0,w,c
  2258  00146A  B0D8               	btfsc	status,0,c
  2259  00146C  0012               	return	
  2260  00146E  D7ED               	goto	l332
  2261  001470                     u2510:
  2262                           
  2263                           ; BSR set to: 0
  2264  001470  0012               	return		;funcret
  2265  001472                     __end_of_OFF_LEDS:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _OFF_LAMPARAS *****************
  2269 ;; Defined at:
  2270 ;;		line 246 in file "Sistema.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  i               2   21[COMRAM] int 
  2275 ;;  buffer_TX      21    0[COMRAM] unsigned char [21]
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2280 ;; Tracked objects:
  2281 ;;		On entry : 3F/0
  2282 ;;		On exit  : 3F/0
  2283 ;;		Unchanged: 3F/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2285 ;;      Params:         0       0       0       0       0       0       0       0       0
  2286 ;;      Locals:        23       0       0       0       0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2288 ;;      Totals:        23       0       0       0       0       0       0       0       0
  2289 ;;Total ram usage:       23 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text6
  2299  001472                     __ptext6:
  2300                           	callstack 0
  2301  001472                     _OFF_LAMPARAS:
  2302                           	callstack 30
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;Sistema.c: 247: PORTAbits.RA0 = 0;
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;incstack = 0
  2309  001472  9080               	bcf	128,0,c	;volatile
  2310                           
  2311                           ;Sistema.c: 248: PORTAbits.RA1 = 0;
  2312  001474  9280               	bcf	128,1,c	;volatile
  2313                           
  2314                           ;Sistema.c: 249: PORTAbits.RA2 = 0;
  2315  001476  9480               	bcf	128,2,c	;volatile
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;Sistema.c: 251: char buffer_TX[] = "Bombillas Apagadas \r";
  2319  001478  EE21  F06C         	lfsr	2,OFF_LAMPARAS@F3204
  2320  00147C  EE10  F001         	lfsr	1,OFF_LAMPARAS@buffer_TX
  2321  001480  0E14               	movlw	20
  2322  001482                     u2461:
  2323  001482  CFDB FFE3          	movff	plusw2,plusw1
  2324  001486  06E8               	decf	wreg,f,c
  2325  001488  E2FC               	bc	u2461
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;Sistema.c: 252: for (int i = 0; i < 20; i++) {
  2329  00148A  0E00               	movlw	0
  2330  00148C  6E17               	movwf	(OFF_LAMPARAS@i+1)^0,c
  2331  00148E  0E00               	movlw	0
  2332  001490  6E16               	movwf	OFF_LAMPARAS@i^0,c
  2333  001492                     l356:
  2334                           
  2335                           ; BSR set to: 0
  2336  001492  A2AC               	btfss	172,1,c	;volatile
  2337  001494  D7FE               	goto	l356
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;Sistema.c: 255: };Sistema.c: 257: TXREG = buffer_TX[i];
  2341  001496  5016               	movf	OFF_LAMPARAS@i^0,w,c
  2342  001498  0F01               	addlw	low OFF_LAMPARAS@buffer_TX
  2343  00149A  6ED9               	movwf	fsr2l,c
  2344  00149C  6ADA               	clrf	fsr2h,c
  2345  00149E  50DF               	movf	indf2,w,c
  2346  0014A0  6EAD               	movwf	173,c	;volatile
  2347                           
  2348                           ; BSR set to: 0
  2349  0014A2  4A16               	infsnz	OFF_LAMPARAS@i^0,f,c
  2350  0014A4  2A17               	incf	(OFF_LAMPARAS@i+1)^0,f,c
  2351                           
  2352                           ; BSR set to: 0
  2353  0014A6  BE17               	btfsc	(OFF_LAMPARAS@i+1)^0,7,c
  2354  0014A8  D7F4               	goto	l356
  2355  0014AA  5017               	movf	(OFF_LAMPARAS@i+1)^0,w,c
  2356  0014AC  E105               	bnz	u2480
  2357  0014AE  0E14               	movlw	20
  2358  0014B0  5C16               	subwf	OFF_LAMPARAS@i^0,w,c
  2359  0014B2  B0D8               	btfsc	status,0,c
  2360  0014B4  0012               	return	
  2361  0014B6  D7ED               	goto	l356
  2362  0014B8                     u2480:
  2363                           
  2364                           ; BSR set to: 0
  2365  0014B8  0012               	return		;funcret
  2366  0014BA                     __end_of_OFF_LAMPARAS:
  2367                           	callstack 0
  2368                           
  2369 ;; *************** function _Mostrar_Fecha *****************
  2370 ;; Defined at:
  2371 ;;		line 415 in file "Sistema.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  i               2   51[COMRAM] int 
  2376 ;;  buffer_TX      26   25[COMRAM] unsigned char [26]
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 3F/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2386 ;;      Params:         0       0       0       0       0       0       0       0       0
  2387 ;;      Locals:        28       0       0       0       0       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2389 ;;      Totals:        28       0       0       0       0       0       0       0       0
  2390 ;;Total ram usage:       28 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 4
  2393 ;; This function calls:
  2394 ;;		_I2C_Stop
  2395 ;;		_LCD_Init
  2396 ;;		_LCD_String
  2397 ;;		_LCD_String_xy
  2398 ;;		_MSdelay
  2399 ;;		_RTC_Read_Calendar
  2400 ;;		_RTC_Read_Clock
  2401 ;;		_sprintf
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text7
  2408  00086A                     __ptext7:
  2409                           	callstack 0
  2410  00086A                     _Mostrar_Fecha:
  2411                           	callstack 26
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;Sistema.c: 416: LCD_Init();
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;incstack = 0
  2418  00086A  EC07  F00B         	call	_LCD_Init	;wreg free
  2419                           
  2420                           ;Sistema.c: 417: RTC_Read_Clock(0);
  2421  00086E  0E00               	movlw	0
  2422  000870  EC5D  F00A         	call	_RTC_Read_Clock
  2423                           
  2424                           ;Sistema.c: 418: I2C_Stop();
  2425  000874  ECA8  F00B         	call	_I2C_Stop	;wreg free
  2426                           
  2427                           ;Sistema.c: 419: MSdelay(1000);
  2428  000878  0E03               	movlw	3
  2429  00087A  6E02               	movwf	(MSdelay@val+1)^0,c
  2430  00087C  0EE8               	movlw	232
  2431  00087E  6E01               	movwf	MSdelay@val^0,c
  2432  000880  ECD4  F00A         	call	_MSdelay	;wreg free
  2433                           
  2434                           ;Sistema.c: 420: if (hour & (1 << Clock_type)) {
  2435  000884  AC36               	btfss	_hour^0,6,c
  2436  000886  D055               	goto	l3210
  2437                           
  2438                           ;Sistema.c: 422: if (hour & (1 << AM_PM)) {
  2439  000888  AA36               	btfss	_hour^0,5,c
  2440  00088A  D00C               	goto	l3194
  2441                           
  2442                           ;Sistema.c: 423: LCD_String_xy(1, 14, "PM");
  2443  00088C  0E0E               	movlw	14
  2444  00088E  6E0A               	movwf	LCD_String_xy@pos^0,c
  2445  000890  0E61               	movlw	low STR_7
  2446  000892  6E0B               	movwf	LCD_String_xy@msg^0,c
  2447  000894  500B               	movf	LCD_String_xy@msg^0,w,c
  2448  000896  A4D8               	btfss	status,2,c
  2449  000898  0E08               	movlw	high __smallconst
  2450  00089A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2451  00089C  0E01               	movlw	1
  2452  00089E  ECBA  F00A         	call	_LCD_String_xy
  2453                           
  2454                           ;Sistema.c: 424: } else {
  2455  0008A2  D00B               	goto	l3196
  2456  0008A4                     l3194:
  2457                           
  2458                           ;Sistema.c: 425: LCD_String_xy(1, 14, "AM");
  2459  0008A4  0E0E               	movlw	14
  2460  0008A6  6E0A               	movwf	LCD_String_xy@pos^0,c
  2461  0008A8  0E5E               	movlw	low STR_8
  2462  0008AA  6E0B               	movwf	LCD_String_xy@msg^0,c
  2463  0008AC  500B               	movf	LCD_String_xy@msg^0,w,c
  2464  0008AE  A4D8               	btfss	status,2,c
  2465  0008B0  0E08               	movlw	high __smallconst
  2466  0008B2  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2467  0008B4  0E01               	movlw	1
  2468  0008B6  ECBA  F00A         	call	_LCD_String_xy
  2469  0008BA                     l3196:
  2470                           
  2471                           ;Sistema.c: 426: };Sistema.c: 428: hour = hour & (0x1f);
  2472  0008BA  0E1F               	movlw	31
  2473  0008BC  1436               	andwf	_hour^0,w,c
  2474  0008BE  6E36               	movwf	_hour^0,c
  2475  0008C0  6A37               	clrf	(_hour+1)^0,c
  2476                           
  2477                           ;Sistema.c: 429: sprintf(secs, "%x ", sec);
  2478  0008C2  0EDF               	movlw	low _secs
  2479  0008C4  6E0D               	movwf	sprintf@sp^0,c
  2480  0008C6  6A0E               	clrf	(sprintf@sp+1)^0,c
  2481  0008C8  0E3A               	movlw	low STR_9
  2482  0008CA  6E0F               	movwf	sprintf@f^0,c
  2483  0008CC  C0D8  F010         	movff	_sec,?_sprintf+3
  2484  0008D0  C0D9  F011         	movff	_sec+1,?_sprintf+4
  2485  0008D4  EC8D  F006         	call	_sprintf	;wreg free
  2486                           
  2487                           ;Sistema.c: 430: sprintf(mins, "%x:", min);
  2488  0008D8  0EF5               	movlw	low _mins
  2489  0008DA  6E0D               	movwf	sprintf@sp^0,c
  2490  0008DC  0E01               	movlw	high _mins
  2491  0008DE  6E0E               	movwf	(sprintf@sp+1)^0,c
  2492  0008E0  0E31               	movlw	low (STR_11+4)
  2493  0008E2  6E0F               	movwf	sprintf@f^0,c
  2494  0008E4  C0D6  F010         	movff	_min,?_sprintf+3
  2495  0008E8  C0D7  F011         	movff	_min+1,?_sprintf+4
  2496  0008EC  EC8D  F006         	call	_sprintf	;wreg free
  2497                           
  2498                           ;Sistema.c: 431: sprintf(hours, "Tim:%x:", hour);
  2499  0008F0  0EEB               	movlw	low _hours
  2500  0008F2  6E0D               	movwf	sprintf@sp^0,c
  2501  0008F4  0E01               	movlw	high _hours
  2502  0008F6  6E0E               	movwf	(sprintf@sp+1)^0,c
  2503  0008F8  0E2D               	movlw	low STR_11
  2504  0008FA  6E0F               	movwf	sprintf@f^0,c
  2505  0008FC  C036  F010         	movff	_hour,?_sprintf+3
  2506  000900  C037  F011         	movff	_hour+1,?_sprintf+4
  2507  000904  EC8D  F006         	call	_sprintf	;wreg free
  2508                           
  2509                           ;Sistema.c: 432: LCD_String_xy(0, 0, hours);
  2510  000908  0E00               	movlw	0
  2511  00090A  6E0A               	movwf	LCD_String_xy@pos^0,c
  2512  00090C  0EEB               	movlw	low _hours
  2513  00090E  6E0B               	movwf	LCD_String_xy@msg^0,c
  2514  000910  0E01               	movlw	high _hours
  2515  000912  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2516  000914  0E00               	movlw	0
  2517  000916  ECBA  F00A         	call	_LCD_String_xy
  2518  00091A                     l3206:
  2519                           
  2520                           ;Sistema.c: 433: LCD_String(mins);
  2521  00091A  0EF5               	movlw	low _mins
  2522  00091C  6E08               	movwf	LCD_String@msg^0,c
  2523  00091E  0E01               	movlw	high _mins
  2524  000920  6E09               	movwf	(LCD_String@msg+1)^0,c
  2525  000922  ECEC  F009         	call	_LCD_String	;wreg free
  2526                           
  2527                           ;Sistema.c: 434: LCD_String(secs);
  2528  000926  0EDF               	movlw	low _secs
  2529  000928  6E08               	movwf	LCD_String@msg^0,c
  2530  00092A  6A09               	clrf	(LCD_String@msg+1)^0,c
  2531  00092C  ECEC  F009         	call	_LCD_String	;wreg free
  2532                           
  2533                           ;Sistema.c: 435: } else {
  2534  000930  D031               	goto	l3224
  2535  000932                     l3210:
  2536                           
  2537                           ;Sistema.c: 437: hour = hour & (0x3f);
  2538  000932  0E3F               	movlw	63
  2539  000934  1436               	andwf	_hour^0,w,c
  2540  000936  6E36               	movwf	_hour^0,c
  2541  000938  6A37               	clrf	(_hour+1)^0,c
  2542                           
  2543                           ;Sistema.c: 438: sprintf(secs, "%x ", sec);
  2544  00093A  0EDF               	movlw	low _secs
  2545  00093C  6E0D               	movwf	sprintf@sp^0,c
  2546  00093E  6A0E               	clrf	(sprintf@sp+1)^0,c
  2547  000940  0E3A               	movlw	low STR_9
  2548  000942  6E0F               	movwf	sprintf@f^0,c
  2549  000944  C0D8  F010         	movff	_sec,?_sprintf+3
  2550  000948  C0D9  F011         	movff	_sec+1,?_sprintf+4
  2551  00094C  EC8D  F006         	call	_sprintf	;wreg free
  2552                           
  2553                           ;Sistema.c: 439: sprintf(mins, "%x:", min);
  2554  000950  0EF5               	movlw	low _mins
  2555  000952  6E0D               	movwf	sprintf@sp^0,c
  2556  000954  0E01               	movlw	high _mins
  2557  000956  6E0E               	movwf	(sprintf@sp+1)^0,c
  2558  000958  0E31               	movlw	low (STR_11+4)
  2559  00095A  6E0F               	movwf	sprintf@f^0,c
  2560  00095C  C0D6  F010         	movff	_min,?_sprintf+3
  2561  000960  C0D7  F011         	movff	_min+1,?_sprintf+4
  2562  000964  EC8D  F006         	call	_sprintf	;wreg free
  2563                           
  2564                           ;Sistema.c: 440: sprintf(hours, "Tim:%x:", hour);
  2565  000968  0EEB               	movlw	low _hours
  2566  00096A  6E0D               	movwf	sprintf@sp^0,c
  2567  00096C  0E01               	movlw	high _hours
  2568  00096E  6E0E               	movwf	(sprintf@sp+1)^0,c
  2569  000970  0E2D               	movlw	low STR_11
  2570  000972  6E0F               	movwf	sprintf@f^0,c
  2571  000974  C036  F010         	movff	_hour,?_sprintf+3
  2572  000978  C037  F011         	movff	_hour+1,?_sprintf+4
  2573  00097C  EC8D  F006         	call	_sprintf	;wreg free
  2574                           
  2575                           ;Sistema.c: 441: LCD_String_xy(0, 0, hours);
  2576  000980  0E00               	movlw	0
  2577  000982  6E0A               	movwf	LCD_String_xy@pos^0,c
  2578  000984  0EEB               	movlw	low _hours
  2579  000986  6E0B               	movwf	LCD_String_xy@msg^0,c
  2580  000988  0E01               	movlw	high _hours
  2581  00098A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2582  00098C  0E00               	movlw	0
  2583  00098E  ECBA  F00A         	call	_LCD_String_xy
  2584  000992  D7C3               	goto	l3206
  2585  000994                     l3224:
  2586                           
  2587                           ;Sistema.c: 444: };Sistema.c: 446: RTC_Read_Calendar(3);
  2588  000994  0E03               	movlw	3
  2589  000996  EC96  F009         	call	_RTC_Read_Calendar
  2590                           
  2591                           ;Sistema.c: 447: I2C_Stop();
  2592  00099A  ECA8  F00B         	call	_I2C_Stop	;wreg free
  2593                           
  2594                           ;Sistema.c: 448: sprintf(date, " Dia %x-", Date);
  2595  00099E  0EE1               	movlw	low _date
  2596  0009A0  6E0D               	movwf	sprintf@sp^0,c
  2597  0009A2  0E01               	movlw	high _date
  2598  0009A4  6E0E               	movwf	(sprintf@sp+1)^0,c
  2599  0009A6  0E24               	movlw	low STR_15
  2600  0009A8  6E0F               	movwf	sprintf@f^0,c
  2601  0009AA  C0D2  F010         	movff	_Date,?_sprintf+3
  2602  0009AE  C0D3  F011         	movff	_Date+1,?_sprintf+4
  2603  0009B2  EC8D  F006         	call	_sprintf	;wreg free
  2604                           
  2605                           ;Sistema.c: 449: sprintf(month, "%x-", Month);
  2606  0009B6  0ED7               	movlw	low _month
  2607  0009B8  6E0D               	movwf	sprintf@sp^0,c
  2608  0009BA  0E01               	movlw	high _month
  2609  0009BC  6E0E               	movwf	(sprintf@sp+1)^0,c
  2610  0009BE  0E29               	movlw	low (STR_15+5)
  2611  0009C0  6E0F               	movwf	sprintf@f^0,c
  2612  0009C2  C0D0  F010         	movff	_Month,?_sprintf+3
  2613  0009C6  C0D1  F011         	movff	_Month+1,?_sprintf+4
  2614  0009CA  EC8D  F006         	call	_sprintf	;wreg free
  2615                           
  2616                           ;Sistema.c: 450: sprintf(year, "%x ", Year);
  2617  0009CE  0ECD               	movlw	low _year
  2618  0009D0  6E0D               	movwf	sprintf@sp^0,c
  2619  0009D2  0E01               	movlw	high _year
  2620  0009D4  6E0E               	movwf	(sprintf@sp+1)^0,c
  2621  0009D6  0E3A               	movlw	low STR_9
  2622  0009D8  6E0F               	movwf	sprintf@f^0,c
  2623  0009DA  C0CE  F010         	movff	_Year,?_sprintf+3
  2624  0009DE  C0CF  F011         	movff	_Year+1,?_sprintf+4
  2625  0009E2  EC8D  F006         	call	_sprintf	;wreg free
  2626                           
  2627                           ;Sistema.c: 451: LCD_String_xy(2, 0, date);
  2628  0009E6  0E00               	movlw	0
  2629  0009E8  6E0A               	movwf	LCD_String_xy@pos^0,c
  2630  0009EA  0EE1               	movlw	low _date
  2631  0009EC  6E0B               	movwf	LCD_String_xy@msg^0,c
  2632  0009EE  0E01               	movlw	high _date
  2633  0009F0  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2634  0009F2  0E02               	movlw	2
  2635  0009F4  ECBA  F00A         	call	_LCD_String_xy
  2636                           
  2637                           ;Sistema.c: 452: LCD_String(month);
  2638  0009F8  0ED7               	movlw	low _month
  2639  0009FA  6E08               	movwf	LCD_String@msg^0,c
  2640  0009FC  0E01               	movlw	high _month
  2641  0009FE  6E09               	movwf	(LCD_String@msg+1)^0,c
  2642  000A00  ECEC  F009         	call	_LCD_String	;wreg free
  2643                           
  2644                           ;Sistema.c: 453: LCD_String(year);
  2645  000A04  0ECD               	movlw	low _year
  2646  000A06  6E08               	movwf	LCD_String@msg^0,c
  2647  000A08  0E01               	movlw	high _year
  2648  000A0A  6E09               	movwf	(LCD_String@msg+1)^0,c
  2649  000A0C  ECEC  F009         	call	_LCD_String	;wreg free
  2650                           
  2651                           ;Sistema.c: 456: switch (days[Day]) {
  2652  000A10  D03F               	goto	l3256
  2653  000A12                     l3240:
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;Sistema.c: 458: LCD_String("Sun");
  2657  000A12  0E52               	movlw	low STR_18
  2658  000A14  6E08               	movwf	LCD_String@msg^0,c
  2659  000A16  5008               	movf	LCD_String@msg^0,w,c
  2660  000A18  A4D8               	btfss	status,2,c
  2661  000A1A  0E08               	movlw	high __smallconst
  2662  000A1C  6E09               	movwf	(LCD_String@msg+1)^0,c
  2663  000A1E  ECEC  F009         	call	_LCD_String	;wreg free
  2664                           
  2665                           ;Sistema.c: 459: break;
  2666  000A22  D053               	goto	l3258
  2667  000A24                     l3242:
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;Sistema.c: 461: LCD_String("Mon");
  2671  000A24  0E4E               	movlw	low STR_19
  2672  000A26  6E08               	movwf	LCD_String@msg^0,c
  2673  000A28  5008               	movf	LCD_String@msg^0,w,c
  2674  000A2A  A4D8               	btfss	status,2,c
  2675  000A2C  0E08               	movlw	high __smallconst
  2676  000A2E  6E09               	movwf	(LCD_String@msg+1)^0,c
  2677  000A30  ECEC  F009         	call	_LCD_String	;wreg free
  2678                           
  2679                           ;Sistema.c: 462: break;
  2680  000A34  D04A               	goto	l3258
  2681  000A36                     l3244:
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;Sistema.c: 464: LCD_String("Tue");
  2685  000A36  0E46               	movlw	low STR_20
  2686  000A38  6E08               	movwf	LCD_String@msg^0,c
  2687  000A3A  5008               	movf	LCD_String@msg^0,w,c
  2688  000A3C  A4D8               	btfss	status,2,c
  2689  000A3E  0E08               	movlw	high __smallconst
  2690  000A40  6E09               	movwf	(LCD_String@msg+1)^0,c
  2691  000A42  ECEC  F009         	call	_LCD_String	;wreg free
  2692                           
  2693                           ;Sistema.c: 465: break;
  2694  000A46  D041               	goto	l3258
  2695  000A48                     l3246:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;Sistema.c: 467: LCD_String("Wed");
  2699  000A48  0E42               	movlw	low STR_21
  2700  000A4A  6E08               	movwf	LCD_String@msg^0,c
  2701  000A4C  5008               	movf	LCD_String@msg^0,w,c
  2702  000A4E  A4D8               	btfss	status,2,c
  2703  000A50  0E08               	movlw	high __smallconst
  2704  000A52  6E09               	movwf	(LCD_String@msg+1)^0,c
  2705  000A54  ECEC  F009         	call	_LCD_String	;wreg free
  2706                           
  2707                           ;Sistema.c: 468: break;
  2708  000A58  D038               	goto	l3258
  2709  000A5A                     l3248:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;Sistema.c: 470: LCD_String("Thu");
  2713  000A5A  0E5A               	movlw	low STR_22
  2714  000A5C  6E08               	movwf	LCD_String@msg^0,c
  2715  000A5E  5008               	movf	LCD_String@msg^0,w,c
  2716  000A60  A4D8               	btfss	status,2,c
  2717  000A62  0E08               	movlw	high __smallconst
  2718  000A64  6E09               	movwf	(LCD_String@msg+1)^0,c
  2719  000A66  ECEC  F009         	call	_LCD_String	;wreg free
  2720                           
  2721                           ;Sistema.c: 471: break;
  2722  000A6A  D02F               	goto	l3258
  2723  000A6C                     l3250:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;Sistema.c: 473: LCD_String("Fri");
  2727  000A6C  0E4A               	movlw	low STR_23
  2728  000A6E  6E08               	movwf	LCD_String@msg^0,c
  2729  000A70  5008               	movf	LCD_String@msg^0,w,c
  2730  000A72  A4D8               	btfss	status,2,c
  2731  000A74  0E08               	movlw	high __smallconst
  2732  000A76  6E09               	movwf	(LCD_String@msg+1)^0,c
  2733  000A78  ECEC  F009         	call	_LCD_String	;wreg free
  2734                           
  2735                           ;Sistema.c: 474: break;
  2736  000A7C  D026               	goto	l3258
  2737  000A7E                     l3252:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;Sistema.c: 476: LCD_String("Sat");
  2741  000A7E  0E56               	movlw	low STR_24
  2742  000A80  6E08               	movwf	LCD_String@msg^0,c
  2743  000A82  5008               	movf	LCD_String@msg^0,w,c
  2744  000A84  A4D8               	btfss	status,2,c
  2745  000A86  0E08               	movlw	high __smallconst
  2746  000A88  6E09               	movwf	(LCD_String@msg+1)^0,c
  2747  000A8A  ECEC  F009         	call	_LCD_String	;wreg free
  2748                           
  2749                           ;Sistema.c: 477: break;
  2750  000A8E  D01D               	goto	l3258
  2751  000A90                     l3256:
  2752  000A90  0EB6               	movlw	low _days
  2753  000A92  0100               	movlb	0	; () banked
  2754  000A94  25D4               	addwf	_Day& (0+255),w,b
  2755  000A96  6ED9               	movwf	fsr2l,c
  2756  000A98  0E01               	movlw	high _days
  2757  000A9A  21D5               	addwfc	(_Day+1)& (0+255),w,b
  2758  000A9C  6EDA               	movwf	fsr2h,c
  2759  000A9E  50DF               	movf	indf2,w,c
  2760                           
  2761                           ; Switch size 1, requested type "simple"
  2762                           ; Number of cases is 7, Range of values is 70 to 116
  2763                           ; switch strategies available:
  2764                           ; Name         Instructions Cycles
  2765                           ; simple_byte           22    12 (average)
  2766                           ;	Chosen strategy is simple_byte
  2767  000AA0  0A46               	xorlw	70	; case 70
  2768  000AA2  B4D8               	btfsc	status,2,c
  2769  000AA4  D7E3               	goto	l3250
  2770  000AA6  0A0B               	xorlw	11	; case 77
  2771  000AA8  B4D8               	btfsc	status,2,c
  2772  000AAA  D7BC               	goto	l3242
  2773  000AAC  0A1E               	xorlw	30	; case 83
  2774  000AAE  B4D8               	btfsc	status,2,c
  2775  000AB0  D7B0               	goto	l3240
  2776  000AB2  0A07               	xorlw	7	; case 84
  2777  000AB4  B4D8               	btfsc	status,2,c
  2778  000AB6  D7BF               	goto	l3244
  2779  000AB8  0A03               	xorlw	3	; case 87
  2780  000ABA  B4D8               	btfsc	status,2,c
  2781  000ABC  D7C5               	goto	l3246
  2782  000ABE  0A24               	xorlw	36	; case 115
  2783  000AC0  B4D8               	btfsc	status,2,c
  2784  000AC2  D7DD               	goto	l3252
  2785  000AC4  0A07               	xorlw	7	; case 116
  2786  000AC6  B4D8               	btfsc	status,2,c
  2787  000AC8  D7C8               	goto	l3248
  2788  000ACA                     l3258:
  2789                           
  2790                           ;Sistema.c: 482: char buffer_TX[] = "Registrando Hora y Fecha\r";
  2791  000ACA  EE21  F052         	lfsr	2,Mostrar_Fecha@F3226
  2792  000ACE  EE10  F01A         	lfsr	1,Mostrar_Fecha@buffer_TX
  2793  000AD2  0E19               	movlw	25
  2794  000AD4                     u2431:
  2795  000AD4  CFDB FFE3          	movff	plusw2,plusw1
  2796  000AD8  06E8               	decf	wreg,f,c
  2797  000ADA  E2FC               	bc	u2431
  2798                           
  2799                           ;Sistema.c: 483: for (int i = 0; i < 25; i++) {
  2800  000ADC  0E00               	movlw	0
  2801  000ADE  6E35               	movwf	(Mostrar_Fecha@i+1)^0,c
  2802  000AE0  0E00               	movlw	0
  2803  000AE2  6E34               	movwf	Mostrar_Fecha@i^0,c
  2804  000AE4                     l434:
  2805  000AE4  A2AC               	btfss	172,1,c	;volatile
  2806  000AE6  D7FE               	goto	l434
  2807                           
  2808                           ;Sistema.c: 486: };Sistema.c: 488: TXREG = buffer_TX[i];
  2809  000AE8  5034               	movf	Mostrar_Fecha@i^0,w,c
  2810  000AEA  0F1A               	addlw	low Mostrar_Fecha@buffer_TX
  2811  000AEC  6ED9               	movwf	fsr2l,c
  2812  000AEE  6ADA               	clrf	fsr2h,c
  2813  000AF0  50DF               	movf	indf2,w,c
  2814  000AF2  6EAD               	movwf	173,c	;volatile
  2815  000AF4  4A34               	infsnz	Mostrar_Fecha@i^0,f,c
  2816  000AF6  2A35               	incf	(Mostrar_Fecha@i+1)^0,f,c
  2817  000AF8  BE35               	btfsc	(Mostrar_Fecha@i+1)^0,7,c
  2818  000AFA  D7F4               	goto	l434
  2819  000AFC  5035               	movf	(Mostrar_Fecha@i+1)^0,w,c
  2820  000AFE  E105               	bnz	u2450
  2821  000B00  0E19               	movlw	25
  2822  000B02  5C34               	subwf	Mostrar_Fecha@i^0,w,c
  2823  000B04  B0D8               	btfsc	status,0,c
  2824  000B06  0012               	return	
  2825  000B08  D7ED               	goto	l434
  2826  000B0A                     u2450:
  2827  000B0A  0012               	return		;funcret
  2828  000B0C                     __end_of_Mostrar_Fecha:
  2829                           	callstack 0
  2830                           
  2831 ;; *************** function _sprintf *****************
  2832 ;; Defined at:
  2833 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  sp              2   12[COMRAM] PTR unsigned char 
  2836 ;;		 -> year(10), month(10), date(10), hours(10), 
  2837 ;;		 -> mins(10), secs(10), vec_value(10), 
  2838 ;;  f               1   14[COMRAM] PTR const unsigned char 
  2839 ;;		 -> STR_17(4), STR_16(4), STR_15(9), STR_14(8), 
  2840 ;;		 -> STR_13(4), STR_12(4), STR_11(8), STR_10(4), 
  2841 ;;		 -> STR_9(4), STR_4(4), STR_3(3), STR_2(5), 
  2842 ;;		 -> STR_1(3), 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  idx             1   18[COMRAM] unsigned char 
  2845 ;;  tmpval          4    0        struct .
  2846 ;;  cp              3    0        PTR const unsigned char 
  2847 ;;  val             2   22[COMRAM] unsigned int 
  2848 ;;  len             2    0        unsigned int 
  2849 ;;  c               1   24[COMRAM] unsigned char 
  2850 ;;  flag            1   21[COMRAM] unsigned char 
  2851 ;;  prec            1   20[COMRAM] char 
  2852 ;;  ap              1   19[COMRAM] PTR void [1]
  2853 ;;		 -> ?_sprintf(2), 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  2   12[COMRAM] int 
  2856 ;; Registers used:
  2857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2863 ;;      Params:         5       0       0       0       0       0       0       0       0
  2864 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2865 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2866 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2867 ;;Total ram usage:       13 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 1
  2870 ;; This function calls:
  2871 ;;		___lwdiv
  2872 ;;		___lwmod
  2873 ;; This function is called by:
  2874 ;;		_printTempHumedad
  2875 ;;		_Mostrar_Fecha
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text8
  2880  000D1A                     __ptext8:
  2881                           	callstack 0
  2882  000D1A                     _sprintf:
  2883                           	callstack 28
  2884                           
  2885                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2886                           
  2887                           ;incstack = 0
  2888  000D1A  0E10               	movlw	low (?_sprintf+3)
  2889  000D1C  6E14               	movwf	sprintf@ap^0,c
  2890                           
  2891                           ;doprnt.c: 553: while((c = *f++)) {
  2892  000D1E  D0ED               	goto	u2100
  2893  000D20                     l2884:
  2894                           
  2895                           ;doprnt.c: 555: if(c != '%')
  2896  000D20  0E25               	movlw	37
  2897  000D22  1819               	xorwf	sprintf@c^0,w,c
  2898  000D24  B4D8               	btfsc	status,2,c
  2899  000D26  D009               	goto	l2890
  2900                           
  2901                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2902  000D28  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2903  000D2C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2904  000D30  C019  FFDF         	movff	sprintf@c,indf2
  2905  000D34  4A0D               	infsnz	sprintf@sp^0,f,c
  2906  000D36  2A0E               	incf	(sprintf@sp+1)^0,f,c
  2907                           
  2908                           ;doprnt.c: 559: continue;
  2909  000D38  D0E0               	goto	u2100
  2910  000D3A                     l2890:
  2911                           
  2912                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2913  000D3A  0E00               	movlw	0
  2914  000D3C  6E16               	movwf	sprintf@flag^0,c
  2915                           
  2916                           ;doprnt.c: 661: switch(c = *f++) {
  2917  000D3E  D002               	goto	l2896
  2918  000D40                     l2892:
  2919                           
  2920                           ;doprnt.c: 747: flag |= 0x80;
  2921  000D40  8E16               	bsf	sprintf@flag^0,7,c
  2922                           
  2923                           ;doprnt.c: 749: break;
  2924  000D42  D018               	goto	l459
  2925  000D44                     l2896:
  2926  000D44  2A0F               	incf	sprintf@f^0,f,c
  2927  000D46  040F               	decf	sprintf@f^0,w,c
  2928  000D48  6E12               	movwf	??_sprintf^0,c
  2929  000D4A  C012  FFF6         	movff	??_sprintf,tblptrl
  2930  000D4E                     	if	1	;There is more than 1 active tblptr byte
  2931  000D4E  0E08               	movlw	high __smallconst
  2932  000D50  6EF7               	movwf	tblptrh,c
  2933  000D52                     	endif
  2934  000D52                     	if	0	;tblptru may be non-zero
  2935  000D52                     	endif
  2936  000D52                     	if	0	;tblptru may be non-zero
  2937  000D52                     	endif
  2938  000D52  0008               	tblrd		*
  2939  000D54  CFF5 F019          	movff	tablat,sprintf@c
  2940  000D58  5019               	movf	sprintf@c^0,w,c
  2941                           
  2942                           ; Switch size 1, requested type "simple"
  2943                           ; Number of cases is 4, Range of values is 0 to 120
  2944                           ; switch strategies available:
  2945                           ; Name         Instructions Cycles
  2946                           ; simple_byte           13     7 (average)
  2947                           ;	Chosen strategy is simple_byte
  2948  000D5A  0A00               	xorlw	0	; case 0
  2949  000D5C  B4D8               	btfsc	status,2,c
  2950  000D5E  D0DA               	goto	u2110
  2951  000D60  0A64               	xorlw	100	; case 100
  2952  000D62  B4D8               	btfsc	status,2,c
  2953  000D64  D007               	goto	l459
  2954  000D66  0A0D               	xorlw	13	; case 105
  2955  000D68  B4D8               	btfsc	status,2,c
  2956  000D6A  D004               	goto	l459
  2957  000D6C  0A11               	xorlw	17	; case 120
  2958  000D6E  B4D8               	btfsc	status,2,c
  2959  000D70  D7E7               	goto	l2892
  2960  000D72  D0C3               	goto	u2100
  2961  000D74                     l459:
  2962                           
  2963                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
  2964  000D74  BE16               	btfsc	sprintf@flag^0,7,c
  2965  000D76  D012               	goto	l2908
  2966                           
  2967                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2968  000D78  5014               	movf	sprintf@ap^0,w,c
  2969  000D7A  6ED9               	movwf	fsr2l,c
  2970  000D7C  6ADA               	clrf	fsr2h,c
  2971  000D7E  CFDE F017          	movff	postinc2,sprintf@val
  2972  000D82  CFDD F018          	movff	postdec2,sprintf@val+1
  2973  000D86  0E02               	movlw	2
  2974  000D88  2614               	addwf	sprintf@ap^0,f,c
  2975                           
  2976                           ;doprnt.c: 1287: if((int)val < 0) {
  2977  000D8A  AE18               	btfss	(sprintf@val+1)^0,7,c
  2978  000D8C  D043               	goto	l2942
  2979                           
  2980                           ;doprnt.c: 1288: flag |= 0x03;
  2981  000D8E  0E03               	movlw	3
  2982  000D90  1216               	iorwf	sprintf@flag^0,f,c
  2983                           
  2984                           ;doprnt.c: 1289: val = -val;
  2985  000D92  6C17               	negf	sprintf@val^0,c
  2986  000D94  1E18               	comf	(sprintf@val+1)^0,f,c
  2987  000D96  B0D8               	btfsc	status,0,c
  2988  000D98  2A18               	incf	(sprintf@val+1)^0,f,c
  2989  000D9A  D03C               	goto	l2942
  2990  000D9C                     l2908:
  2991                           
  2992                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  2993  000D9C  5014               	movf	sprintf@ap^0,w,c
  2994  000D9E  6ED9               	movwf	fsr2l,c
  2995  000DA0  6ADA               	clrf	fsr2h,c
  2996  000DA2  CFDE F017          	movff	postinc2,sprintf@val
  2997  000DA6  CFDD F018          	movff	postdec2,sprintf@val+1
  2998  000DAA  0E02               	movlw	2
  2999  000DAC  2614               	addwf	sprintf@ap^0,f,c
  3000  000DAE  D032               	goto	l2942
  3001  000DB0                     l2912:
  3002                           
  3003                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3004  000DB0  0E01               	movlw	1
  3005  000DB2  6E19               	movwf	sprintf@c^0,c
  3006  000DB4                     l2918:
  3007                           
  3008                           ;doprnt.c: 1332: if(val < dpowers[c])
  3009  000DB4  5019               	movf	sprintf@c^0,w,c
  3010  000DB6  0D02               	mullw	2
  3011  000DB8  50F3               	movf	243,w,c
  3012  000DBA  0F01               	addlw	low _dpowers
  3013  000DBC  6E12               	movwf	??_sprintf^0,c
  3014  000DBE  C012  FFF6         	movff	??_sprintf,tblptrl
  3015  000DC2                     	if	1	;There is more than 1 active tblptr byte
  3016  000DC2  0E08               	movlw	high __smallconst
  3017  000DC4  6EF7               	movwf	tblptrh,c
  3018  000DC6                     	endif
  3019  000DC6                     	if	0	;tblptru may be non-zero
  3020  000DC6                     	endif
  3021  000DC6                     	if	0	;tblptru may be non-zero
  3022  000DC6                     	endif
  3023  000DC6  0009               	tblrd		*+
  3024  000DC8  50F5               	movf	tablat,w,c
  3025  000DCA  5C17               	subwf	sprintf@val^0,w,c
  3026  000DCC  0009               	tblrd		*+
  3027  000DCE  50F5               	movf	tablat,w,c
  3028  000DD0  5818               	subwfb	(sprintf@val+1)^0,w,c
  3029  000DD2  A0D8               	btfss	status,0,c
  3030  000DD4  D027               	goto	l2944
  3031  000DD6  2A19               	incf	sprintf@c^0,f,c
  3032  000DD8  0E05               	movlw	5
  3033  000DDA  1819               	xorwf	sprintf@c^0,w,c
  3034  000DDC  B4D8               	btfsc	status,2,c
  3035  000DDE  D022               	goto	l2944
  3036  000DE0  D7E9               	goto	l2918
  3037  000DE2                     l2926:
  3038                           
  3039                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3040  000DE2  0E01               	movlw	1
  3041  000DE4  6E19               	movwf	sprintf@c^0,c
  3042  000DE6                     l2932:
  3043                           
  3044                           ;doprnt.c: 1343: if(val < hexpowers[c])
  3045  000DE6  5019               	movf	sprintf@c^0,w,c
  3046  000DE8  0D02               	mullw	2
  3047  000DEA  50F3               	movf	243,w,c
  3048  000DEC  0F0B               	addlw	low _hexpowers
  3049  000DEE  6E12               	movwf	??_sprintf^0,c
  3050  000DF0  C012  FFF6         	movff	??_sprintf,tblptrl
  3051  000DF4                     	if	1	;There is more than 1 active tblptr byte
  3052  000DF4  0E08               	movlw	high __smallconst
  3053  000DF6  6EF7               	movwf	tblptrh,c
  3054  000DF8                     	endif
  3055  000DF8                     	if	0	;tblptru may be non-zero
  3056  000DF8                     	endif
  3057  000DF8                     	if	0	;tblptru may be non-zero
  3058  000DF8                     	endif
  3059  000DF8  0009               	tblrd		*+
  3060  000DFA  50F5               	movf	tablat,w,c
  3061  000DFC  5C17               	subwf	sprintf@val^0,w,c
  3062  000DFE  0009               	tblrd		*+
  3063  000E00  50F5               	movf	tablat,w,c
  3064  000E02  5818               	subwfb	(sprintf@val+1)^0,w,c
  3065  000E04  A0D8               	btfss	status,0,c
  3066  000E06  D00E               	goto	l2944
  3067  000E08  2A19               	incf	sprintf@c^0,f,c
  3068  000E0A  0E04               	movlw	4
  3069  000E0C  1819               	xorwf	sprintf@c^0,w,c
  3070  000E0E  B4D8               	btfsc	status,2,c
  3071  000E10  D009               	goto	l2944
  3072  000E12  D7E9               	goto	l2932
  3073  000E14                     l2942:
  3074  000E14  5016               	movf	sprintf@flag^0,w,c
  3075  000E16  0B80               	andlw	128
  3076                           
  3077                           ; Switch size 1, requested type "simple"
  3078                           ; Number of cases is 2, Range of values is 0 to 128
  3079                           ; switch strategies available:
  3080                           ; Name         Instructions Cycles
  3081                           ; simple_byte            7     4 (average)
  3082                           ;	Chosen strategy is simple_byte
  3083  000E18  0A00               	xorlw	0	; case 0
  3084  000E1A  B4D8               	btfsc	status,2,c
  3085  000E1C  D7C9               	goto	l2912
  3086  000E1E  0A80               	xorlw	128	; case 128
  3087  000E20  B4D8               	btfsc	status,2,c
  3088  000E22  D7DF               	goto	l2926
  3089  000E24                     l2944:
  3090                           
  3091                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3092  000E24  C016  F012         	movff	sprintf@flag,??_sprintf
  3093  000E28  0E03               	movlw	3
  3094  000E2A  1612               	andwf	??_sprintf^0,f,c
  3095  000E2C  B4D8               	btfsc	status,2,c
  3096  000E2E  D008               	goto	l2950
  3097                           
  3098                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3099  000E30  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3100  000E34  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3101  000E38  0E2D               	movlw	45
  3102  000E3A  6EDF               	movwf	indf2,c
  3103  000E3C  4A0D               	infsnz	sprintf@sp^0,f,c
  3104  000E3E  2A0E               	incf	(sprintf@sp+1)^0,f,c
  3105  000E40                     l2950:
  3106                           
  3107                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3108  000E40  C019  F015         	movff	sprintf@c,sprintf@prec
  3109                           
  3110                           ;doprnt.c: 1500: while(prec--) {
  3111  000E44  D056               	goto	l2966
  3112  000E46                     l2952:
  3113                           
  3114                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3115  000E46  5015               	movf	sprintf@prec^0,w,c
  3116  000E48  0D02               	mullw	2
  3117  000E4A  50F3               	movf	243,w,c
  3118  000E4C  0F01               	addlw	low _dpowers
  3119  000E4E  6E12               	movwf	??_sprintf^0,c
  3120  000E50  C012  FFF6         	movff	??_sprintf,tblptrl
  3121  000E54                     	if	1	;There is more than 1 active tblptr byte
  3122  000E54  0E08               	movlw	high __smallconst
  3123  000E56  6EF7               	movwf	tblptrh,c
  3124  000E58                     	endif
  3125  000E58                     	if	0	;tblptru may be non-zero
  3126  000E58                     	endif
  3127  000E58                     	if	0	;tblptru may be non-zero
  3128  000E58                     	endif
  3129  000E58  0009               	tblrd		*+
  3130  000E5A  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3131  000E5E  000A               	tblrd		*-
  3132  000E60  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3133  000E64  C017  F001         	movff	sprintf@val,___lwdiv@dividend
  3134  000E68  C018  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3135  000E6C  ECC3  F009         	call	___lwdiv	;wreg free
  3136  000E70  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3137  000E74  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3138  000E78  0E00               	movlw	0
  3139  000E7A  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3140  000E7C  0E0A               	movlw	10
  3141  000E7E  6E0A               	movwf	___lwmod@divisor^0,c
  3142  000E80  EC7F  F00A         	call	___lwmod	;wreg free
  3143  000E84  5008               	movf	?___lwmod^0,w,c
  3144  000E86  0F30               	addlw	48
  3145  000E88  6E19               	movwf	sprintf@c^0,c
  3146                           
  3147                           ;doprnt.c: 1517: break;
  3148  000E8A  D02B               	goto	l2962
  3149  000E8C                     l2954:
  3150                           
  3151                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
  3152  000E8C  C017  F001         	movff	sprintf@val,___lwdiv@dividend
  3153  000E90  C018  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3154  000E94  5015               	movf	sprintf@prec^0,w,c
  3155  000E96  0D02               	mullw	2
  3156  000E98  50F3               	movf	243,w,c
  3157  000E9A  0F0B               	addlw	low _hexpowers
  3158  000E9C  6E12               	movwf	??_sprintf^0,c
  3159  000E9E  C012  FFF6         	movff	??_sprintf,tblptrl
  3160  000EA2                     	if	1	;There is more than 1 active tblptr byte
  3161  000EA2  0E08               	movlw	high __smallconst
  3162  000EA4  6EF7               	movwf	tblptrh,c
  3163  000EA6                     	endif
  3164  000EA6                     	if	0	;tblptru may be non-zero
  3165  000EA6                     	endif
  3166  000EA6                     	if	0	;tblptru may be non-zero
  3167  000EA6                     	endif
  3168  000EA6  0009               	tblrd		*+
  3169  000EA8  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3170  000EAC  000A               	tblrd		*-
  3171  000EAE  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3172  000EB2  ECC3  F009         	call	___lwdiv	;wreg free
  3173  000EB6  5001               	movf	?___lwdiv^0,w,c
  3174  000EB8  0B0F               	andlw	15
  3175  000EBA  6E13               	movwf	sprintf@idx^0,c
  3176                           
  3177                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  3178  000EBC  5013               	movf	sprintf@idx^0,w,c
  3179  000EBE  0F13               	addlw	low STR_25
  3180  000EC0  6E12               	movwf	??_sprintf^0,c
  3181  000EC2  C012  FFF6         	movff	??_sprintf,tblptrl
  3182  000EC6                     	if	1	;There is more than 1 active tblptr byte
  3183  000EC6  0E08               	movlw	high __smallconst
  3184  000EC8  6EF7               	movwf	tblptrh,c
  3185  000ECA                     	endif
  3186  000ECA                     	if	0	;tblptru may be non-zero
  3187  000ECA                     	endif
  3188  000ECA                     	if	0	;tblptru may be non-zero
  3189  000ECA                     	endif
  3190  000ECA  0008               	tblrd		*
  3191  000ECC  CFF5 F019          	movff	tablat,sprintf@c
  3192                           
  3193                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  3194  000ED0  D008               	goto	l2962
  3195  000ED2                     l2960:
  3196  000ED2  5016               	movf	sprintf@flag^0,w,c
  3197  000ED4  0B80               	andlw	128
  3198                           
  3199                           ; Switch size 1, requested type "simple"
  3200                           ; Number of cases is 2, Range of values is 0 to 128
  3201                           ; switch strategies available:
  3202                           ; Name         Instructions Cycles
  3203                           ; simple_byte            7     4 (average)
  3204                           ;	Chosen strategy is simple_byte
  3205  000ED6  0A00               	xorlw	0	; case 0
  3206  000ED8  B4D8               	btfsc	status,2,c
  3207  000EDA  D7B5               	goto	l2952
  3208  000EDC  0A80               	xorlw	128	; case 128
  3209  000EDE  B4D8               	btfsc	status,2,c
  3210  000EE0  D7D5               	goto	l2954
  3211  000EE2                     l2962:
  3212                           
  3213                           ;doprnt.c: 1550: ((*sp++ = (c)));
  3214  000EE2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3215  000EE6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3216  000EEA  C019  FFDF         	movff	sprintf@c,indf2
  3217  000EEE  4A0D               	infsnz	sprintf@sp^0,f,c
  3218  000EF0  2A0E               	incf	(sprintf@sp+1)^0,f,c
  3219  000EF2                     l2966:
  3220  000EF2  0615               	decf	sprintf@prec^0,f,c
  3221  000EF4  2815               	incf	sprintf@prec^0,w,c
  3222  000EF6  A4D8               	btfss	status,2,c
  3223  000EF8  D7EC               	goto	l2960
  3224  000EFA                     u2100:
  3225  000EFA  2A0F               	incf	sprintf@f^0,f,c
  3226  000EFC  040F               	decf	sprintf@f^0,w,c
  3227  000EFE  6E12               	movwf	??_sprintf^0,c
  3228  000F00  C012  FFF6         	movff	??_sprintf,tblptrl
  3229  000F04                     	if	1	;There is more than 1 active tblptr byte
  3230  000F04  0E08               	movlw	high __smallconst
  3231  000F06  6EF7               	movwf	tblptrh,c
  3232  000F08                     	endif
  3233  000F08                     	if	0	;tblptru may be non-zero
  3234  000F08                     	endif
  3235  000F08                     	if	0	;tblptru may be non-zero
  3236  000F08                     	endif
  3237  000F08  0008               	tblrd		*
  3238  000F0A  CFF5 F019          	movff	tablat,sprintf@c
  3239  000F0E  5019               	movf	sprintf@c^0,w,c
  3240  000F10  A4D8               	btfss	status,2,c
  3241  000F12  D706               	goto	l2884
  3242  000F14                     u2110:
  3243                           
  3244                           ;doprnt.c: 1564: *sp = 0;
  3245  000F14  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3246  000F18  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3247  000F1C  0E00               	movlw	0
  3248  000F1E  6EDF               	movwf	indf2,c
  3249  000F20  0012               	return		;funcret
  3250  000F22                     __end_of_sprintf:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function ___lwmod *****************
  3254 ;; Defined at:
  3255 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  dividend        2    7[COMRAM] unsigned int 
  3258 ;;  divisor         2    9[COMRAM] unsigned int 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  counter         1   11[COMRAM] unsigned char 
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  2    7[COMRAM] unsigned int 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3270 ;;      Params:         4       0       0       0       0       0       0       0       0
  3271 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3273 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3274 ;;Total ram usage:        5 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_sprintf
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text9
  3284  0014FE                     __ptext9:
  3285                           	callstack 0
  3286  0014FE                     ___lwmod:
  3287                           	callstack 28
  3288                           
  3289                           ;incstack = 0
  3290  0014FE  500A               	movf	___lwmod@divisor^0,w,c
  3291  001500  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  3292  001502  B4D8               	btfsc	status,2,c
  3293  001504  D018               	goto	l976
  3294  001506  0E01               	movlw	1
  3295  001508  6E0C               	movwf	___lwmod@counter^0,c
  3296  00150A  D004               	goto	l2816
  3297  00150C                     l2814:
  3298  00150C  90D8               	bcf	status,0,c
  3299  00150E  360A               	rlcf	___lwmod@divisor^0,f,c
  3300  001510  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  3301  001512  2A0C               	incf	___lwmod@counter^0,f,c
  3302  001514                     l2816:
  3303  001514  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  3304  001516  D7FA               	goto	l2814
  3305  001518                     u1930:
  3306  001518  500A               	movf	___lwmod@divisor^0,w,c
  3307  00151A  5C08               	subwf	___lwmod@dividend^0,w,c
  3308  00151C  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3309  00151E  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  3310  001520  A0D8               	btfss	status,0,c
  3311  001522  D004               	goto	l2822
  3312  001524  500A               	movf	___lwmod@divisor^0,w,c
  3313  001526  5E08               	subwf	___lwmod@dividend^0,f,c
  3314  001528  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3315  00152A  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  3316  00152C                     l2822:
  3317  00152C  90D8               	bcf	status,0,c
  3318  00152E  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  3319  001530  320A               	rrcf	___lwmod@divisor^0,f,c
  3320  001532  2E0C               	decfsz	___lwmod@counter^0,f,c
  3321  001534  D7F1               	goto	u1930
  3322  001536                     l976:
  3323  001536  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3324  00153A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3325  00153E  0012               	return		;funcret
  3326  001540                     __end_of___lwmod:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function ___lwdiv *****************
  3330 ;; Defined at:
  3331 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  dividend        2    0[COMRAM] unsigned int 
  3334 ;;  divisor         2    2[COMRAM] unsigned int 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  quotient        2    5[COMRAM] unsigned int 
  3337 ;;  counter         1    4[COMRAM] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  2    0[COMRAM] unsigned int 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3347 ;;      Params:         4       0       0       0       0       0       0       0       0
  3348 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3350 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3351 ;;Total ram usage:        7 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_sprintf
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text10
  3361  001386                     __ptext10:
  3362                           	callstack 0
  3363  001386                     ___lwdiv:
  3364                           	callstack 28
  3365                           
  3366                           ;incstack = 0
  3367  001386  0E00               	movlw	0
  3368  001388  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  3369  00138A  0E00               	movlw	0
  3370  00138C  6E06               	movwf	___lwdiv@quotient^0,c
  3371  00138E  5003               	movf	___lwdiv@divisor^0,w,c
  3372  001390  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3373  001392  B4D8               	btfsc	status,2,c
  3374  001394  D01C               	goto	l966
  3375  001396  0E01               	movlw	1
  3376  001398  6E05               	movwf	___lwdiv@counter^0,c
  3377  00139A  D004               	goto	l2796
  3378  00139C                     l2794:
  3379  00139C  90D8               	bcf	status,0,c
  3380  00139E  3603               	rlcf	___lwdiv@divisor^0,f,c
  3381  0013A0  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3382  0013A2  2A05               	incf	___lwdiv@counter^0,f,c
  3383  0013A4                     l2796:
  3384  0013A4  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3385  0013A6  D7FA               	goto	l2794
  3386  0013A8                     u1900:
  3387  0013A8  90D8               	bcf	status,0,c
  3388  0013AA  3606               	rlcf	___lwdiv@quotient^0,f,c
  3389  0013AC  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3390  0013AE  5003               	movf	___lwdiv@divisor^0,w,c
  3391  0013B0  5C01               	subwf	___lwdiv@dividend^0,w,c
  3392  0013B2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3393  0013B4  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3394  0013B6  A0D8               	btfss	status,0,c
  3395  0013B8  D005               	goto	l2806
  3396  0013BA  5003               	movf	___lwdiv@divisor^0,w,c
  3397  0013BC  5E01               	subwf	___lwdiv@dividend^0,f,c
  3398  0013BE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3399  0013C0  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3400  0013C2  8006               	bsf	___lwdiv@quotient^0,0,c
  3401  0013C4                     l2806:
  3402  0013C4  90D8               	bcf	status,0,c
  3403  0013C6  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3404  0013C8  3203               	rrcf	___lwdiv@divisor^0,f,c
  3405  0013CA  2E05               	decfsz	___lwdiv@counter^0,f,c
  3406  0013CC  D7ED               	goto	u1900
  3407  0013CE                     l966:
  3408  0013CE  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
  3409  0013D2  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3410  0013D6  0012               	return		;funcret
  3411  0013D8                     __end_of___lwdiv:
  3412                           	callstack 0
  3413                           
  3414 ;; *************** function _RTC_Read_Clock *****************
  3415 ;; Defined at:
  3416 ;;		line 393 in file "Sistema.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  read_clock_a    1    wreg     unsigned char 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3430 ;;      Params:         0       0       0       0       0       0       0       0       0
  3431 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3432 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3433 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3434 ;;Total ram usage:        2 bytes
  3435 ;; Hardware stack levels used: 1
  3436 ;; Hardware stack levels required when called: 3
  3437 ;; This function calls:
  3438 ;;		_I2C_Read
  3439 ;;		_I2C_Repeated_Start
  3440 ;;		_I2C_Start
  3441 ;;		_I2C_Write
  3442 ;; This function is called by:
  3443 ;;		_Mostrar_Fecha
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text11
  3448  0014BA                     __ptext11:
  3449                           	callstack 0
  3450  0014BA                     _RTC_Read_Clock:
  3451                           	callstack 26
  3452                           
  3453                           ;incstack = 0
  3454                           ;RTC_Read_Clock@read_clock_address stored from wreg
  3455  0014BA  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  3456                           
  3457                           ;Sistema.c: 394: I2C_Start(0xD0);
  3458  0014BC  0ED0               	movlw	208
  3459  0014BE  EC7B  F00B         	call	_I2C_Start
  3460                           
  3461                           ;Sistema.c: 395: I2C_Write(read_clock_address);
  3462  0014C2  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  3463  0014C4  EC91  F00B         	call	_I2C_Write
  3464                           
  3465                           ;Sistema.c: 396: I2C_Repeated_Start(0xD1);
  3466  0014C8  0ED1               	movlw	209
  3467  0014CA  EC86  F00B         	call	_I2C_Repeated_Start
  3468                           
  3469                           ;Sistema.c: 397: sec = I2C_Read(0);
  3470  0014CE  0E00               	movlw	0
  3471  0014D0  EC30  F00B         	call	_I2C_Read
  3472  0014D4  6E03               	movwf	??_RTC_Read_Clock^0,c
  3473  0014D6  5003               	movf	??_RTC_Read_Clock^0,w,c
  3474  0014D8  0100               	movlb	0	; () banked
  3475  0014DA  6FD8               	movwf	_sec& (0+255),b
  3476  0014DC  6BD9               	clrf	(_sec+1)& (0+255),b
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;Sistema.c: 398: min = I2C_Read(0);
  3480  0014DE  0E00               	movlw	0
  3481  0014E0  EC30  F00B         	call	_I2C_Read
  3482  0014E4  6E03               	movwf	??_RTC_Read_Clock^0,c
  3483  0014E6  5003               	movf	??_RTC_Read_Clock^0,w,c
  3484  0014E8  0100               	movlb	0	; () banked
  3485  0014EA  6FD6               	movwf	_min& (0+255),b
  3486  0014EC  6BD7               	clrf	(_min+1)& (0+255),b
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;Sistema.c: 399: hour = I2C_Read(1);
  3490  0014EE  0E01               	movlw	1
  3491  0014F0  EC30  F00B         	call	_I2C_Read
  3492  0014F4  6E03               	movwf	??_RTC_Read_Clock^0,c
  3493  0014F6  5003               	movf	??_RTC_Read_Clock^0,w,c
  3494  0014F8  6E36               	movwf	_hour^0,c
  3495  0014FA  6A37               	clrf	(_hour+1)^0,c
  3496  0014FC  0012               	return		;funcret
  3497  0014FE                     __end_of_RTC_Read_Clock:
  3498                           	callstack 0
  3499                           
  3500 ;; *************** function _RTC_Read_Calendar *****************
  3501 ;; Defined at:
  3502 ;;		line 403 in file "Sistema.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  read_calenda    1    wreg     unsigned char 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  read_calenda    1    3[COMRAM] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3516 ;;      Params:         0       0       0       0       0       0       0       0       0
  3517 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3518 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3519 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3520 ;;Total ram usage:        2 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; Hardware stack levels required when called: 3
  3523 ;; This function calls:
  3524 ;;		_I2C_Read
  3525 ;;		_I2C_Repeated_Start
  3526 ;;		_I2C_Start
  3527 ;;		_I2C_Stop
  3528 ;;		_I2C_Write
  3529 ;; This function is called by:
  3530 ;;		_Mostrar_Fecha
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text12
  3535  00132C                     __ptext12:
  3536                           	callstack 0
  3537  00132C                     _RTC_Read_Calendar:
  3538                           	callstack 26
  3539                           
  3540                           ;incstack = 0
  3541                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  3542  00132C  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  3543                           
  3544                           ;Sistema.c: 404: I2C_Start(0xD0);
  3545  00132E  0ED0               	movlw	208
  3546  001330  EC7B  F00B         	call	_I2C_Start
  3547                           
  3548                           ;Sistema.c: 405: I2C_Write(read_calendar_address);
  3549  001334  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  3550  001336  EC91  F00B         	call	_I2C_Write
  3551                           
  3552                           ;Sistema.c: 406: I2C_Repeated_Start(0xD1);
  3553  00133A  0ED1               	movlw	209
  3554  00133C  EC86  F00B         	call	_I2C_Repeated_Start
  3555                           
  3556                           ;Sistema.c: 407: Day = I2C_Read(0);
  3557  001340  0E00               	movlw	0
  3558  001342  EC30  F00B         	call	_I2C_Read
  3559  001346  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3560  001348  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3561  00134A  0100               	movlb	0	; () banked
  3562  00134C  6FD4               	movwf	_Day& (0+255),b
  3563  00134E  6BD5               	clrf	(_Day+1)& (0+255),b
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;Sistema.c: 408: Date = I2C_Read(0);
  3567  001350  0E00               	movlw	0
  3568  001352  EC30  F00B         	call	_I2C_Read
  3569  001356  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3570  001358  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3571  00135A  0100               	movlb	0	; () banked
  3572  00135C  6FD2               	movwf	_Date& (0+255),b
  3573  00135E  6BD3               	clrf	(_Date+1)& (0+255),b
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;Sistema.c: 409: Month = I2C_Read(0);
  3577  001360  0E00               	movlw	0
  3578  001362  EC30  F00B         	call	_I2C_Read
  3579  001366  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3580  001368  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3581  00136A  0100               	movlb	0	; () banked
  3582  00136C  6FD0               	movwf	_Month& (0+255),b
  3583  00136E  6BD1               	clrf	(_Month+1)& (0+255),b
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;Sistema.c: 410: Year = I2C_Read(1);
  3587  001370  0E01               	movlw	1
  3588  001372  EC30  F00B         	call	_I2C_Read
  3589  001376  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3590  001378  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3591  00137A  0100               	movlb	0	; () banked
  3592  00137C  6FCE               	movwf	_Year& (0+255),b
  3593  00137E  6BCF               	clrf	(_Year+1)& (0+255),b
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;Sistema.c: 411: I2C_Stop();
  3597  001380  ECA8  F00B         	call	_I2C_Stop	;wreg free
  3598  001384  0012               	return		;funcret
  3599  001386                     __end_of_RTC_Read_Calendar:
  3600                           	callstack 0
  3601                           
  3602 ;; *************** function _I2C_Stop *****************
  3603 ;; Defined at:
  3604 ;;		line 140 in file "I2C_Master_File.h"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;		None
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;		None
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      unsigned char 
  3611 ;; Registers used:
  3612 ;;		wreg
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3618 ;;      Params:         0       0       0       0       0       0       0       0       0
  3619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3621 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3622 ;;Total ram usage:        0 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_RTC_Read_Calendar
  3628 ;;		_Mostrar_Fecha
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text13
  3633  001750                     __ptext13:
  3634                           	callstack 0
  3635  001750                     _I2C_Stop:
  3636                           	callstack 28
  3637                           
  3638                           ;I2C_Master_File.h: 142: PEN = 1;
  3639                           
  3640                           ;incstack = 0
  3641  001750  84C5               	bsf	4037,2,c	;volatile
  3642  001752                     l206:
  3643  001752  B4C5               	btfsc	4037,2,c	;volatile
  3644  001754  D7FE               	goto	l206
  3645                           
  3646                           ;I2C_Master_File.h: 144: if(!SSPSTATbits.P);
  3647  001756  50C7               	movf	199,w,c	;volatile
  3648  001758  0012               	return		;funcret
  3649  00175A                     __end_of_I2C_Stop:
  3650                           	callstack 0
  3651                           
  3652 ;; *************** function _I2C_Start *****************
  3653 ;; Defined at:
  3654 ;;		line 115 in file "I2C_Master_File.h"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  slave_write_    1    wreg     unsigned char 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  slave_write_    1    1[COMRAM] unsigned char 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      unsigned char 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3668 ;;      Params:         0       0       0       0       0       0       0       0       0
  3669 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3671 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3672 ;;Total ram usage:        1 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 2
  3675 ;; This function calls:
  3676 ;;		_I2C_Write
  3677 ;; This function is called by:
  3678 ;;		_RTC_Read_Clock
  3679 ;;		_RTC_Read_Calendar
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text14
  3684  0016F6                     __ptext14:
  3685                           	callstack 0
  3686  0016F6                     _I2C_Start:
  3687                           	callstack 26
  3688                           
  3689                           ;incstack = 0
  3690                           ;I2C_Start@slave_write_address stored from wreg
  3691  0016F6  6E02               	movwf	I2C_Start@slave_write_address^0,c
  3692                           
  3693                           ;I2C_Master_File.h: 117: SSPCON2bits.SEN=1;
  3694  0016F8  80C5               	bsf	197,0,c	;volatile
  3695  0016FA                     l190:
  3696  0016FA  B0C5               	btfsc	197,0,c	;volatile
  3697  0016FC  D7FE               	goto	l190
  3698                           
  3699                           ;I2C_Master_File.h: 119: SSPIF=0;
  3700  0016FE  969E               	bcf	3998,3,c	;volatile
  3701                           
  3702                           ;I2C_Master_File.h: 120: if(!SSPSTATbits.S)
  3703  001700  A6C7               	btfss	199,3,c	;volatile
  3704  001702  0012               	return	
  3705                           
  3706                           ;I2C_Master_File.h: 122: return (I2C_Write(slave_write_address));;	Return value of _I2C_
      +                          Start is never used
  3707  001704  5002               	movf	I2C_Start@slave_write_address^0,w,c
  3708  001706  EC91  F00B         	call	_I2C_Write
  3709  00170A  0012               	return		;funcret
  3710  00170C                     __end_of_I2C_Start:
  3711                           	callstack 0
  3712                           
  3713 ;; *************** function _I2C_Repeated_Start *****************
  3714 ;; Defined at:
  3715 ;;		line 126 in file "I2C_Master_File.h"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  slave_read_a    1    wreg     unsigned char 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      unsigned char 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3729 ;;      Params:         0       0       0       0       0       0       0       0       0
  3730 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3732 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3733 ;;Total ram usage:        1 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; Hardware stack levels required when called: 2
  3736 ;; This function calls:
  3737 ;;		_I2C_Write
  3738 ;; This function is called by:
  3739 ;;		_RTC_Read_Clock
  3740 ;;		_RTC_Read_Calendar
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text15
  3745  00170C                     __ptext15:
  3746                           	callstack 0
  3747  00170C                     _I2C_Repeated_Start:
  3748                           	callstack 26
  3749                           
  3750                           ;incstack = 0
  3751                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  3752  00170C  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  3753                           
  3754                           ;I2C_Master_File.h: 128: RSEN = 1;
  3755  00170E  82C5               	bsf	4037,1,c	;volatile
  3756  001710                     l197:
  3757  001710  B2C5               	btfsc	4037,1,c	;volatile
  3758  001712  D7FE               	goto	l197
  3759                           
  3760                           ;I2C_Master_File.h: 130: SSPIF = 0;
  3761  001714  969E               	bcf	3998,3,c	;volatile
  3762                           
  3763                           ;I2C_Master_File.h: 131: if(!SSPSTATbits.S)
  3764  001716  A6C7               	btfss	199,3,c	;volatile
  3765  001718  0012               	return	
  3766                           
  3767                           ;I2C_Master_File.h: 133: I2C_Write(slave_read_address);
  3768  00171A  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  3769  00171C  EC91  F00B         	call	_I2C_Write
  3770                           
  3771                           ;I2C_Master_File.h: 134: if (ACKSTAT)
  3772  001720  0012               	return		;funcret
  3773  001722                     __end_of_I2C_Repeated_Start:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function _I2C_Write *****************
  3777 ;; Defined at:
  3778 ;;		line 148 in file "I2C_Master_File.h"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  data            1    wreg     unsigned char 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  data            1    0[COMRAM] unsigned char 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      unsigned char 
  3785 ;; Registers used:
  3786 ;;		wreg, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0
  3793 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3795 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3796 ;;Total ram usage:        1 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 1
  3799 ;; This function calls:
  3800 ;;		_I2C_Ready
  3801 ;; This function is called by:
  3802 ;;		_I2C_Start
  3803 ;;		_I2C_Repeated_Start
  3804 ;;		_RTC_Read_Clock
  3805 ;;		_RTC_Read_Calendar
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text16
  3810  001722                     __ptext16:
  3811                           	callstack 0
  3812  001722                     _I2C_Write:
  3813                           	callstack 27
  3814                           
  3815                           ;incstack = 0
  3816                           ;I2C_Write@data stored from wreg
  3817  001722  6E01               	movwf	I2C_Write@data^0,c
  3818                           
  3819                           ;I2C_Master_File.h: 150: SSPBUF = data;
  3820  001724  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  3821                           
  3822                           ;I2C_Master_File.h: 151: I2C_Ready();
  3823  001728  ECB7  F00B         	call	_I2C_Ready	;wreg free
  3824                           
  3825                           ;I2C_Master_File.h: 152: if (ACKSTAT)
  3826  00172C  ACC5               	btfss	4037,6,c	;volatile
  3827  00172E  D002               	goto	l2726
  3828                           
  3829                           ;I2C_Master_File.h: 153: return 1;
  3830  001730  0E01               	movlw	1
  3831  001732  0012               	return	
  3832  001734                     l2726:
  3833                           
  3834                           ;I2C_Master_File.h: 154: else;I2C_Master_File.h: 155: return 2;
  3835  001734  0E02               	movlw	2
  3836  001736  0012               	return		;funcret
  3837  001738                     __end_of_I2C_Write:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _I2C_Read *****************
  3841 ;; Defined at:
  3842 ;;		line 59 in file "I2C_Master_File.h"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  flag            1    wreg     unsigned char 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  flag            1    0[COMRAM] unsigned char 
  3847 ;;  buffer          1    1[COMRAM] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      unsigned char 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3857 ;;      Params:         0       0       0       0       0       0       0       0       0
  3858 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3860 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3861 ;;Total ram usage:        2 bytes
  3862 ;; Hardware stack levels used: 1
  3863 ;; Hardware stack levels required when called: 1
  3864 ;; This function calls:
  3865 ;;		_I2C_Ack
  3866 ;;		_I2C_Nack
  3867 ;;		_I2C_Ready
  3868 ;; This function is called by:
  3869 ;;		_RTC_Read_Clock
  3870 ;;		_RTC_Read_Calendar
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text17
  3875  001660                     __ptext17:
  3876                           	callstack 0
  3877  001660                     _I2C_Read:
  3878                           	callstack 27
  3879                           
  3880                           ;incstack = 0
  3881                           ;I2C_Read@flag stored from wreg
  3882  001660  6E01               	movwf	I2C_Read@flag^0,c
  3883                           
  3884                           ;I2C_Master_File.h: 62: char buffer;;I2C_Master_File.h: 63: RCEN = 1;
  3885  001662  86C5               	bsf	4037,3,c	;volatile
  3886  001664                     l162:
  3887  001664  A0C7               	btfss	199,0,c	;volatile
  3888  001666  D7FE               	goto	l162
  3889                           
  3890                           ;I2C_Master_File.h: 66: buffer = SSPBUF;
  3891  001668  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  3892                           
  3893                           ;I2C_Master_File.h: 68: if(flag==0)
  3894  00166C  5001               	movf	I2C_Read@flag^0,w,c
  3895  00166E  A4D8               	btfss	status,2,c
  3896  001670  D003               	goto	l2760
  3897                           
  3898                           ;I2C_Master_File.h: 69: I2C_Ack();
  3899  001672  ECB2  F00B         	call	_I2C_Ack	;wreg free
  3900  001676  D002               	goto	l166
  3901  001678                     l2760:
  3902                           
  3903                           ;I2C_Master_File.h: 70: else;I2C_Master_File.h: 71: I2C_Nack();
  3904  001678  ECAD  F00B         	call	_I2C_Nack	;wreg free
  3905  00167C                     l166:
  3906                           
  3907                           ;I2C_Master_File.h: 72: I2C_Ready();
  3908  00167C  ECB7  F00B         	call	_I2C_Ready	;wreg free
  3909                           
  3910                           ;I2C_Master_File.h: 73: return(buffer);
  3911  001680  5002               	movf	I2C_Read@buffer^0,w,c
  3912  001682  0012               	return		;funcret
  3913  001684                     __end_of_I2C_Read:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function _I2C_Ready *****************
  3917 ;; Defined at:
  3918 ;;		line 90 in file "I2C_Master_File.h"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		None
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3932 ;;      Params:         0       0       0       0       0       0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3935 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3936 ;;Total ram usage:        0 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_I2C_Read
  3942 ;;		_I2C_Write
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text18
  3947  00176E                     __ptext18:
  3948                           	callstack 0
  3949  00176E                     _I2C_Ready:
  3950                           	callstack 27
  3951                           
  3952                           ;I2C_Master_File.h: 92: while(!SSPIF);
  3953                           
  3954                           ;incstack = 0
  3955  00176E  A69E               	btfss	3998,3,c	;volatile
  3956  001770  D7FE               	goto	_I2C_Ready
  3957                           
  3958                           ;I2C_Master_File.h: 93: SSPIF=0;
  3959  001772  969E               	bcf	3998,3,c	;volatile
  3960  001774  0012               	return		;funcret
  3961  001776                     __end_of_I2C_Ready:
  3962                           	callstack 0
  3963                           
  3964 ;; *************** function _I2C_Nack *****************
  3965 ;; Defined at:
  3966 ;;		line 165 in file "I2C_Master_File.h"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		None
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3980 ;;      Params:         0       0       0       0       0       0       0       0       0
  3981 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3983 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3984 ;;Total ram usage:        0 bytes
  3985 ;; Hardware stack levels used: 1
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_I2C_Read
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text19
  3994  00175A                     __ptext19:
  3995                           	callstack 0
  3996  00175A                     _I2C_Nack:
  3997                           	callstack 27
  3998                           
  3999                           ;I2C_Master_File.h: 167: ACKDT=1;
  4000                           
  4001                           ;incstack = 0
  4002  00175A  8AC5               	bsf	4037,5,c	;volatile
  4003                           
  4004                           ;I2C_Master_File.h: 168: ACKEN=1;
  4005  00175C  88C5               	bsf	4037,4,c	;volatile
  4006  00175E                     l224:
  4007  00175E  A8C5               	btfss	4037,4,c	;volatile
  4008  001760  0012               	return	
  4009  001762  D7FD               	goto	l224
  4010  001764                     __end_of_I2C_Nack:
  4011                           	callstack 0
  4012                           
  4013 ;; *************** function _I2C_Ack *****************
  4014 ;; Defined at:
  4015 ;;		line 158 in file "I2C_Master_File.h"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;		None
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      void 
  4022 ;; Registers used:
  4023 ;;		None
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4029 ;;      Params:         0       0       0       0       0       0       0       0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4032 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4033 ;;Total ram usage:        0 bytes
  4034 ;; Hardware stack levels used: 1
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_I2C_Read
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text20
  4043  001764                     __ptext20:
  4044                           	callstack 0
  4045  001764                     _I2C_Ack:
  4046                           	callstack 27
  4047                           
  4048                           ;I2C_Master_File.h: 160: ACKDT=0;
  4049                           
  4050                           ;incstack = 0
  4051  001764  9AC5               	bcf	4037,5,c	;volatile
  4052                           
  4053                           ;I2C_Master_File.h: 161: ACKEN=1;
  4054  001766  88C5               	bsf	4037,4,c	;volatile
  4055  001768                     l218:
  4056  001768  A8C5               	btfss	4037,4,c	;volatile
  4057  00176A  0012               	return	
  4058  00176C  D7FD               	goto	l218
  4059  00176E                     __end_of_I2C_Ack:
  4060                           	callstack 0
  4061                           
  4062 ;; *************** function _LCD_String_xy *****************
  4063 ;; Defined at:
  4064 ;;		line 99 in file "LCD_16x2.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  row             1    wreg     unsigned char 
  4067 ;;  pos             1    9[COMRAM] unsigned char 
  4068 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  4069 ;;		 -> date(10), hours(10), STR_8(3), STR_7(3), 
  4070 ;;		 -> STR_6(2), STR_5(2), vec_value(10), 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  row             1   12[COMRAM] unsigned char 
  4073 ;;  location        1   13[COMRAM] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4083 ;;      Params:         3       0       0       0       0       0       0       0       0
  4084 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4086 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4087 ;;Total ram usage:        5 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; Hardware stack levels required when called: 3
  4090 ;; This function calls:
  4091 ;;		_LCD_Command
  4092 ;;		_LCD_String
  4093 ;; This function is called by:
  4094 ;;		_printTempHumedad
  4095 ;;		_Mostrar_Fecha
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text21
  4100  001574                     __ptext21:
  4101                           	callstack 0
  4102  001574                     _LCD_String_xy:
  4103                           	callstack 26
  4104                           
  4105                           ;incstack = 0
  4106                           ;LCD_String_xy@row stored from wreg
  4107  001574  6E0D               	movwf	LCD_String_xy@row^0,c
  4108                           
  4109                           ;LCD_16x2.c: 102: if(row<1)
  4110  001576  500D               	movf	LCD_String_xy@row^0,w,c
  4111  001578  A4D8               	btfss	status,2,c
  4112  00157A  D008               	goto	l2846
  4113                           
  4114                           ;LCD_16x2.c: 103: {;LCD_16x2.c: 104: location=(0x80) | ((pos) & 0x0f);
  4115  00157C  500A               	movf	LCD_String_xy@pos^0,w,c
  4116  00157E  0B0F               	andlw	15
  4117  001580  0980               	iorlw	128
  4118  001582  6E0E               	movwf	LCD_String_xy@location^0,c
  4119                           
  4120                           ;LCD_16x2.c: 105: LCD_Command(location);
  4121  001584  500E               	movf	LCD_String_xy@location^0,w,c
  4122  001586  EC60  F00B         	call	_LCD_Command
  4123                           
  4124                           ;LCD_16x2.c: 106: }
  4125  00158A  D007               	goto	l2850
  4126  00158C                     l2846:
  4127                           
  4128                           ;LCD_16x2.c: 107: else;LCD_16x2.c: 108: {;LCD_16x2.c: 109: location=(0xC0) | ((pos) & 0x
      +                          0f);
  4129  00158C  500A               	movf	LCD_String_xy@pos^0,w,c
  4130  00158E  0B0F               	andlw	15
  4131  001590  09C0               	iorlw	192
  4132  001592  6E0E               	movwf	LCD_String_xy@location^0,c
  4133                           
  4134                           ;LCD_16x2.c: 110: LCD_Command(location);
  4135  001594  500E               	movf	LCD_String_xy@location^0,w,c
  4136  001596  EC60  F00B         	call	_LCD_Command
  4137  00159A                     l2850:
  4138                           
  4139                           ;LCD_16x2.c: 111: };LCD_16x2.c: 114: LCD_String(msg);
  4140  00159A  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  4141  00159E  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  4142  0015A2  ECEC  F009         	call	_LCD_String	;wreg free
  4143  0015A6  0012               	return		;funcret
  4144  0015A8                     __end_of_LCD_String_xy:
  4145                           	callstack 0
  4146                           
  4147 ;; *************** function _LCD_String *****************
  4148 ;; Defined at:
  4149 ;;		line 89 in file "LCD_16x2.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  4152 ;;		 -> STR_24(4), STR_23(4), STR_22(4), STR_21(4), 
  4153 ;;		 -> STR_20(4), STR_19(4), STR_18(4), year(10), 
  4154 ;;		 -> month(10), date(10), hours(10), mins(10), 
  4155 ;;		 -> secs(10), STR_8(3), STR_7(3), STR_6(2), 
  4156 ;;		 -> STR_5(2), vec_value(10), 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4168 ;;      Params:         2       0       0       0       0       0       0       0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4171 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4172 ;;Total ram usage:        2 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 2
  4175 ;; This function calls:
  4176 ;;		_LCD_Char
  4177 ;; This function is called by:
  4178 ;;		_LCD_String_xy
  4179 ;;		_printTempHumedad
  4180 ;;		_Mostrar_Fecha
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text22
  4185  0013D8                     __ptext22:
  4186                           	callstack 0
  4187  0013D8                     _LCD_String:
  4188                           	callstack 26
  4189                           
  4190                           ;LCD_16x2.c: 91: while((*msg)!=0)
  4191                           
  4192                           ;incstack = 0
  4193  0013D8  D014               	goto	l2752
  4194  0013DA                     l2748:
  4195                           
  4196                           ;LCD_16x2.c: 92: {;LCD_16x2.c: 93: LCD_Char(*msg);
  4197  0013DA  C008  FFF6         	movff	LCD_String@msg,tblptrl
  4198  0013DE  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  4199  0013E2  6AF8               	clrf	tblptru,c
  4200  0013E4  0E07               	movlw	(high __ramtop+-1)
  4201  0013E6  64F7               	cpfsgt	tblptrh,c
  4202  0013E8  D003               	bra	u1797
  4203  0013EA  0008               	tblrd		*
  4204  0013EC  50F5               	movf	tablat,w,c
  4205  0013EE  D005               	bra	u1790
  4206  0013F0                     u1797:
  4207  0013F0  CFF6 FFE1          	movff	tblptrl,fsr1l
  4208  0013F4  CFF7 FFE2          	movff	tblptrh,fsr1h
  4209  0013F8  50E7               	movf	indf1,w,c
  4210  0013FA                     u1790:
  4211  0013FA  EC52  F00B         	call	_LCD_Char
  4212                           
  4213                           ;LCD_16x2.c: 94: msg++;
  4214  0013FE  4A08               	infsnz	LCD_String@msg^0,f,c
  4215  001400  2A09               	incf	(LCD_String@msg+1)^0,f,c
  4216  001402                     l2752:
  4217  001402  C008  FFF6         	movff	LCD_String@msg,tblptrl
  4218  001406  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  4219  00140A  6AF8               	clrf	tblptru,c
  4220  00140C  0E07               	movlw	(high __ramtop+-1)
  4221  00140E  64F7               	cpfsgt	tblptrh,c
  4222  001410  D003               	bra	u1807
  4223  001412  0008               	tblrd		*
  4224  001414  50F5               	movf	tablat,w,c
  4225  001416  D005               	bra	u1800
  4226  001418                     u1807:
  4227  001418  CFF6 FFE1          	movff	tblptrl,fsr1l
  4228  00141C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4229  001420  50E7               	movf	indf1,w,c
  4230  001422                     u1800:
  4231  001422  0900               	iorlw	0
  4232  001424  B4D8               	btfsc	status,2,c
  4233  001426  0012               	return	
  4234  001428  D7D8               	goto	l2748
  4235  00142A                     __end_of_LCD_String:
  4236                           	callstack 0
  4237                           
  4238 ;; *************** function _LCD_Char *****************
  4239 ;; Defined at:
  4240 ;;		line 78 in file "LCD_16x2.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  dat             1    wreg     unsigned char 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;  dat             1    6[COMRAM] unsigned char 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2, status,0, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0
  4255 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4257 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4258 ;;Total ram usage:        1 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; Hardware stack levels required when called: 1
  4261 ;; This function calls:
  4262 ;;		_MSdelay
  4263 ;; This function is called by:
  4264 ;;		_LCD_Custom_Char
  4265 ;;		_LCD_String
  4266 ;;		_ON_LEDS
  4267 ;;		_printTempHumedad
  4268 ;;		_ON_LAMPARAS
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text23
  4273  0016A4                     __ptext23:
  4274                           	callstack 0
  4275  0016A4                     _LCD_Char:
  4276                           	callstack 26
  4277                           
  4278                           ;incstack = 0
  4279                           ;LCD_Char@dat stored from wreg
  4280  0016A4  6E07               	movwf	LCD_Char@dat^0,c
  4281                           
  4282                           ;LCD_16x2.c: 80: LATD= dat;
  4283  0016A6  C007  FF8C         	movff	LCD_Char@dat,3980	;volatile
  4284                           
  4285                           ;LCD_16x2.c: 81: LATC0 = 1;
  4286  0016AA  808B               	bsf	3979,0,c	;volatile
  4287                           
  4288                           ;LCD_16x2.c: 82: LATC1=1;
  4289  0016AC  828B               	bsf	3979,1,c	;volatile
  4290                           
  4291                           ;LCD_16x2.c: 83: __nop();
  4292  0016AE  F000               	nop	
  4293                           
  4294                           ;LCD_16x2.c: 84: LATC1=0;
  4295  0016B0  928B               	bcf	3979,1,c	;volatile
  4296                           
  4297                           ;LCD_16x2.c: 85: MSdelay(1);
  4298  0016B2  0E00               	movlw	0
  4299  0016B4  6E02               	movwf	(MSdelay@val+1)^0,c
  4300  0016B6  0E01               	movlw	1
  4301  0016B8  6E01               	movwf	MSdelay@val^0,c
  4302  0016BA  ECD4  F00A         	call	_MSdelay	;wreg free
  4303  0016BE  0012               	return		;funcret
  4304  0016C0                     __end_of_LCD_Char:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function _LCD_Init *****************
  4308 ;; Defined at:
  4309 ;;		line 37 in file "LCD_16x2.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4323 ;;      Params:         0       0       0       0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 2
  4330 ;; This function calls:
  4331 ;;		_LCD_Command
  4332 ;;		_MSdelay
  4333 ;; This function is called by:
  4334 ;;		_main
  4335 ;;		_Mostrar_Fecha
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text24
  4340  00160E                     __ptext24:
  4341                           	callstack 0
  4342  00160E                     _LCD_Init:
  4343                           	callstack 27
  4344                           
  4345                           ;LCD_16x2.c: 39: TRISD = 0x00;
  4346                           
  4347                           ;incstack = 0
  4348  00160E  0E00               	movlw	0
  4349  001610  6E95               	movwf	149,c	;volatile
  4350                           
  4351                           ;LCD_16x2.c: 40: TRISC = 0x00;
  4352  001612  0E00               	movlw	0
  4353  001614  6E94               	movwf	148,c	;volatile
  4354                           
  4355                           ;LCD_16x2.c: 41: MSdelay(20);
  4356  001616  0E00               	movlw	0
  4357  001618  6E02               	movwf	(MSdelay@val+1)^0,c
  4358  00161A  0E14               	movlw	20
  4359  00161C  6E01               	movwf	MSdelay@val^0,c
  4360  00161E  ECD4  F00A         	call	_MSdelay	;wreg free
  4361                           
  4362                           ;LCD_16x2.c: 42: LCD_Command(0x38);
  4363  001622  0E38               	movlw	56
  4364  001624  EC60  F00B         	call	_LCD_Command
  4365                           
  4366                           ;LCD_16x2.c: 43: LCD_Command(0x0c);
  4367  001628  0E0C               	movlw	12
  4368  00162A  EC60  F00B         	call	_LCD_Command
  4369                           
  4370                           ;LCD_16x2.c: 44: LCD_Command(0x06);
  4371  00162E  0E06               	movlw	6
  4372  001630  EC60  F00B         	call	_LCD_Command
  4373                           
  4374                           ;LCD_16x2.c: 45: LCD_Command(0x01);
  4375  001634  0E01               	movlw	1
  4376  001636  EC60  F00B         	call	_LCD_Command
  4377  00163A  0012               	return		;funcret
  4378  00163C                     __end_of_LCD_Init:
  4379                           	callstack 0
  4380                           
  4381 ;; *************** function _LCD_Command *****************
  4382 ;; Defined at:
  4383 ;;		line 66 in file "LCD_16x2.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  cmd             1    wreg     unsigned char 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  cmd             1    6[COMRAM] unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4397 ;;      Params:         0       0       0       0       0       0       0       0       0
  4398 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4400 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4401 ;;Total ram usage:        1 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; Hardware stack levels required when called: 1
  4404 ;; This function calls:
  4405 ;;		_MSdelay
  4406 ;; This function is called by:
  4407 ;;		_LCD_Init
  4408 ;;		_LCD_Custom_Char
  4409 ;;		_LCD_String_xy
  4410 ;;		_ON_LEDS
  4411 ;;		_ON_LAMPARAS
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text25
  4416  0016C0                     __ptext25:
  4417                           	callstack 0
  4418  0016C0                     _LCD_Command:
  4419                           	callstack 27
  4420                           
  4421                           ;incstack = 0
  4422                           ;LCD_Command@cmd stored from wreg
  4423  0016C0  6E07               	movwf	LCD_Command@cmd^0,c
  4424                           
  4425                           ;LCD_16x2.c: 68: LATD= cmd;
  4426  0016C2  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  4427                           
  4428                           ;LCD_16x2.c: 69: LATC0 = 0;
  4429  0016C6  908B               	bcf	3979,0,c	;volatile
  4430                           
  4431                           ;LCD_16x2.c: 70: LATC1 = 1;
  4432  0016C8  828B               	bsf	3979,1,c	;volatile
  4433                           
  4434                           ;LCD_16x2.c: 71: __nop();
  4435  0016CA  F000               	nop	
  4436                           
  4437                           ;LCD_16x2.c: 72: LATC1 = 0;
  4438  0016CC  928B               	bcf	3979,1,c	;volatile
  4439                           
  4440                           ;LCD_16x2.c: 73: MSdelay(3);
  4441  0016CE  0E00               	movlw	0
  4442  0016D0  6E02               	movwf	(MSdelay@val+1)^0,c
  4443  0016D2  0E03               	movlw	3
  4444  0016D4  6E01               	movwf	MSdelay@val^0,c
  4445  0016D6  ECD4  F00A         	call	_MSdelay	;wreg free
  4446  0016DA  0012               	return		;funcret
  4447  0016DC                     __end_of_LCD_Command:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function _MSdelay *****************
  4451 ;; Defined at:
  4452 ;;		line 118 in file "LCD_16x2.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  val             2    0[COMRAM] unsigned int 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  j               2    4[COMRAM] unsigned int 
  4457 ;;  i               2    2[COMRAM] unsigned int 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, status,2, status,0
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4467 ;;      Params:         2       0       0       0       0       0       0       0       0
  4468 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4470 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4471 ;;Total ram usage:        6 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_LCD_Init
  4477 ;;		_LCD_Command
  4478 ;;		_LCD_Char
  4479 ;;		_main
  4480 ;;		_ON_LAMPARAS
  4481 ;;		_Mostrar_Fecha
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text26
  4486  0015A8                     __ptext26:
  4487                           	callstack 0
  4488  0015A8                     _MSdelay:
  4489                           	callstack 26
  4490                           
  4491                           ;LCD_16x2.c: 120: unsigned int i,j;;LCD_16x2.c: 121: for(i=0;i<=val;i++)
  4492                           
  4493                           ;incstack = 0
  4494  0015A8  0E00               	movlw	0
  4495  0015AA  6E04               	movwf	(MSdelay@i+1)^0,c
  4496  0015AC  0E00               	movlw	0
  4497  0015AE  6E03               	movwf	MSdelay@i^0,c
  4498  0015B0  D00E               	goto	l2682
  4499  0015B2                     l2670:
  4500                           
  4501                           ;LCD_16x2.c: 122: for(j=0;j<81;j++);
  4502  0015B2  0E00               	movlw	0
  4503  0015B4  6E06               	movwf	(MSdelay@j+1)^0,c
  4504  0015B6  0E00               	movlw	0
  4505  0015B8  6E05               	movwf	MSdelay@j^0,c
  4506  0015BA                     l2676:
  4507  0015BA  4A05               	infsnz	MSdelay@j^0,f,c
  4508  0015BC  2A06               	incf	(MSdelay@j+1)^0,f,c
  4509  0015BE  5006               	movf	(MSdelay@j+1)^0,w,c
  4510  0015C0  E104               	bnz	u1710
  4511  0015C2  0E51               	movlw	81
  4512  0015C4  5C05               	subwf	MSdelay@j^0,w,c
  4513  0015C6  A0D8               	btfss	status,0,c
  4514  0015C8  D7F8               	goto	l2676
  4515  0015CA                     u1710:
  4516  0015CA  4A03               	infsnz	MSdelay@i^0,f,c
  4517  0015CC  2A04               	incf	(MSdelay@i+1)^0,f,c
  4518  0015CE                     l2682:
  4519  0015CE  5003               	movf	MSdelay@i^0,w,c
  4520  0015D0  5C01               	subwf	MSdelay@val^0,w,c
  4521  0015D2  5004               	movf	(MSdelay@i+1)^0,w,c
  4522  0015D4  5802               	subwfb	(MSdelay@val+1)^0,w,c
  4523  0015D6  A0D8               	btfss	status,0,c
  4524  0015D8  0012               	return	
  4525  0015DA  D7EB               	goto	l2670
  4526  0015DC                     __end_of_MSdelay:
  4527                           	callstack 0
  4528                           
  4529 ;; *************** function _I2C_Init *****************
  4530 ;; Defined at:
  4531 ;;		line 76 in file "I2C_Master_File.h"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  1    wreg      void 
  4538 ;; Registers used:
  4539 ;;		wreg, status,2
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4545 ;;      Params:         0       0       0       0       0       0       0       0       0
  4546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4548 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4549 ;;Total ram usage:        0 bytes
  4550 ;; Hardware stack levels used: 1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_main
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text27
  4559  0016DC                     __ptext27:
  4560                           	callstack 0
  4561  0016DC                     _I2C_Init:
  4562                           	callstack 30
  4563                           
  4564                           ;I2C_Master_File.h: 78: TRISB0=1;
  4565                           
  4566                           ;incstack = 0
  4567  0016DC  8093               	bsf	3987,0,c	;volatile
  4568                           
  4569                           ;I2C_Master_File.h: 79: TRISB1=1;
  4570  0016DE  8293               	bsf	3987,1,c	;volatile
  4571                           
  4572                           ;I2C_Master_File.h: 80: SSPSTAT=80;
  4573  0016E0  0E50               	movlw	80
  4574  0016E2  6EC7               	movwf	199,c	;volatile
  4575                           
  4576                           ;I2C_Master_File.h: 81: SSPCON1=0x28;
  4577  0016E4  0E28               	movlw	40
  4578  0016E6  6EC6               	movwf	198,c	;volatile
  4579                           
  4580                           ;I2C_Master_File.h: 83: SSPCON2=0;
  4581  0016E8  0E00               	movlw	0
  4582  0016EA  6EC5               	movwf	197,c	;volatile
  4583                           
  4584                           ;I2C_Master_File.h: 84: SSPADD=((8000000/(4*100000))-1);
  4585  0016EC  0E13               	movlw	19
  4586  0016EE  6EC8               	movwf	200,c	;volatile
  4587                           
  4588                           ;I2C_Master_File.h: 85: SSPIE=1;
  4589  0016F0  869D               	bsf	3997,3,c	;volatile
  4590                           
  4591                           ;I2C_Master_File.h: 86: SSPIF=0;
  4592  0016F2  969E               	bcf	3998,3,c	;volatile
  4593  0016F4  0012               	return		;funcret
  4594  0016F6                     __end_of_I2C_Init:
  4595                           	callstack 0
  4596                           
  4597 ;; *************** function _DHT11_Start *****************
  4598 ;; Defined at:
  4599 ;;		line 180 in file "Sistema.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4615 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4616 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4617 ;;Total ram usage:        1 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_main
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text28
  4627  001684                     __ptext28:
  4628                           	callstack 0
  4629  001684                     _DHT11_Start:
  4630                           	callstack 30
  4631                           
  4632                           ;Sistema.c: 181: TRISCbits.RC2 = 0;
  4633                           
  4634                           ;incstack = 0
  4635  001684  9494               	bcf	148,2,c	;volatile
  4636                           
  4637                           ;Sistema.c: 182: LATC2 = 0;
  4638  001686  948B               	bcf	3979,2,c	;volatile
  4639                           
  4640                           ;Sistema.c: 183: _delay((unsigned long)((18)*(8000000L/4000.0)));
  4641  001688  0E2F               	movlw	47
  4642  00168A  6E01               	movwf	??_DHT11_Start^0,c
  4643  00168C  0EC0               	movlw	192
  4644  00168E                     u2587:
  4645  00168E  2EE8               	decfsz	wreg,f,c
  4646  001690  D7FE               	bra	u2587
  4647  001692  2E01               	decfsz	??_DHT11_Start^0,f,c
  4648  001694  D7FC               	bra	u2587
  4649                           
  4650                           ;Sistema.c: 184: LATC2 = 1;
  4651  001696  848B               	bsf	3979,2,c	;volatile
  4652                           
  4653                           ;Sistema.c: 185: _delay((unsigned long)((20)*(8000000L/4000000.0)));
  4654  001698  0E0D               	movlw	13
  4655  00169A                     u2597:
  4656  00169A  2EE8               	decfsz	wreg,f,c
  4657  00169C  D7FE               	bra	u2597
  4658  00169E  F000               	nop	
  4659                           
  4660                           ;Sistema.c: 186: TRISCbits.RC2 = 1;
  4661  0016A0  8494               	bsf	148,2,c	;volatile
  4662  0016A2  0012               	return		;funcret
  4663  0016A4                     __end_of_DHT11_Start:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _DHT11_ReadData *****************
  4667 ;; Defined at:
  4668 ;;		line 165 in file "Sistema.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  data            1    1[COMRAM] unsigned char 
  4673 ;;  i               1    0[COMRAM] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      unsigned char 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4683 ;;      Params:         0       0       0       0       0       0       0       0       0
  4684 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4686 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4687 ;;Total ram usage:        2 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text29
  4697  0015DC                     __ptext29:
  4698                           	callstack 0
  4699  0015DC                     _DHT11_ReadData:
  4700                           	callstack 30
  4701                           
  4702                           ;Sistema.c: 166: char i, data = 0;
  4703                           
  4704                           ;incstack = 0
  4705  0015DC  0E00               	movlw	0
  4706  0015DE  6E02               	movwf	DHT11_ReadData@data^0,c
  4707                           
  4708                           ;Sistema.c: 167: for (i = 0; i < 8; i++) {
  4709  0015E0  0E00               	movlw	0
  4710  0015E2  6E01               	movwf	DHT11_ReadData@i^0,c
  4711  0015E4                     l302:
  4712  0015E4  A482               	btfss	130,2,c	;volatile
  4713  0015E6  D7FE               	goto	l302
  4714                           
  4715                           ;Sistema.c: 169: _delay((unsigned long)((30)*(8000000L/4000000.0)));
  4716  0015E8  0E14               	movlw	20
  4717  0015EA                     u2607:
  4718  0015EA  2EE8               	decfsz	wreg,f,c
  4719  0015EC  D7FE               	bra	u2607
  4720                           
  4721                           ;Sistema.c: 170: if (PORTCbits.RC2 & 1)
  4722  0015EE  A482               	btfss	130,2,c	;volatile
  4723  0015F0  D003               	goto	l3024
  4724                           
  4725                           ;Sistema.c: 171: data = ((data << 1) | 1);
  4726  0015F2  80D8               	bsf	status,0,c
  4727  0015F4  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4728  0015F6  D003               	goto	l307
  4729  0015F8                     l3024:
  4730                           
  4731                           ;Sistema.c: 172: else;Sistema.c: 173: data = (data << 1);
  4732  0015F8  5002               	movf	DHT11_ReadData@data^0,w,c
  4733  0015FA  2402               	addwf	DHT11_ReadData@data^0,w,c
  4734  0015FC  6E02               	movwf	DHT11_ReadData@data^0,c
  4735  0015FE                     l307:
  4736  0015FE  B482               	btfsc	130,2,c	;volatile
  4737  001600  D7FE               	goto	l307
  4738  001602  2A01               	incf	DHT11_ReadData@i^0,f,c
  4739  001604  0E07               	movlw	7
  4740  001606  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4741  001608  D7ED               	goto	l302
  4742                           
  4743                           ;Sistema.c: 176: };Sistema.c: 177: return data;
  4744  00160A  5002               	movf	DHT11_ReadData@data^0,w,c
  4745  00160C  0012               	return		;funcret
  4746  00160E                     __end_of_DHT11_ReadData:
  4747                           	callstack 0
  4748                           
  4749 ;; *************** function _DHT11_CheckResponse *****************
  4750 ;; Defined at:
  4751 ;;		line 190 in file "Sistema.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		None
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4765 ;;      Params:         0       0       0       0       0       0       0       0       0
  4766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4768 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4769 ;;Total ram usage:        0 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_main
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text30
  4779  001738                     __ptext30:
  4780                           	callstack 0
  4781  001738                     _DHT11_CheckResponse:
  4782                           	callstack 30
  4783                           
  4784                           ;Sistema.c: 191: while (PORTCbits.RC2 & 1);
  4785                           
  4786                           ;incstack = 0
  4787  001738  B482               	btfsc	130,2,c	;volatile
  4788  00173A  D7FE               	goto	_DHT11_CheckResponse
  4789  00173C                     u2120:
  4790  00173C  A482               	btfss	130,2,c	;volatile
  4791  00173E  D7FE               	goto	u2120
  4792  001740                     u2130:
  4793  001740  A482               	btfss	130,2,c	;volatile
  4794  001742  0012               	return	
  4795  001744  D7FD               	goto	u2130
  4796  001746                     __end_of_DHT11_CheckResponse:
  4797                           	callstack 0
  4798                           
  4799                           	psect	rparam
  4800  0000                     
  4801                           	psect	idloc
  4802                           
  4803                           ;Config register IDLOC0 @ 0x200000
  4804                           ;	unspecified, using default values
  4805  200000                     	org	2097152
  4806  200000  FF                 	db	255
  4807                           
  4808                           ;Config register IDLOC1 @ 0x200001
  4809                           ;	unspecified, using default values
  4810  200001                     	org	2097153
  4811  200001  FF                 	db	255
  4812                           
  4813                           ;Config register IDLOC2 @ 0x200002
  4814                           ;	unspecified, using default values
  4815  200002                     	org	2097154
  4816  200002  FF                 	db	255
  4817                           
  4818                           ;Config register IDLOC3 @ 0x200003
  4819                           ;	unspecified, using default values
  4820  200003                     	org	2097155
  4821  200003  FF                 	db	255
  4822                           
  4823                           ;Config register IDLOC4 @ 0x200004
  4824                           ;	unspecified, using default values
  4825  200004                     	org	2097156
  4826  200004  FF                 	db	255
  4827                           
  4828                           ;Config register IDLOC5 @ 0x200005
  4829                           ;	unspecified, using default values
  4830  200005                     	org	2097157
  4831  200005  FF                 	db	255
  4832                           
  4833                           ;Config register IDLOC6 @ 0x200006
  4834                           ;	unspecified, using default values
  4835  200006                     	org	2097158
  4836  200006  FF                 	db	255
  4837                           
  4838                           ;Config register IDLOC7 @ 0x200007
  4839                           ;	unspecified, using default values
  4840  200007                     	org	2097159
  4841  200007  FF                 	db	255
  4842                           
  4843                           	psect	config
  4844                           
  4845                           ;Config register CONFIG1L @ 0x300000
  4846                           ;	PLL Prescaler Selection bits
  4847                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4848                           ;	System Clock Postscaler Selection bits
  4849                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4850                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4851                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4852  300000                     	org	3145728
  4853  300000  00                 	db	0
  4854                           
  4855                           ;Config register CONFIG1H @ 0x300001
  4856                           ;	Oscillator Selection bits
  4857                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4858                           ;	Fail-Safe Clock Monitor Enable bit
  4859                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4860                           ;	Internal/External Oscillator Switchover bit
  4861                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4862  300001                     	org	3145729
  4863  300001  09                 	db	9
  4864                           
  4865                           ;Config register CONFIG2L @ 0x300002
  4866                           ;	Power-up Timer Enable bit
  4867                           ;	PWRT = OFF, PWRT disabled
  4868                           ;	Brown-out Reset Enable bits
  4869                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4870                           ;	Brown-out Reset Voltage bits
  4871                           ;	BORV = 3, Minimum setting 2.05V
  4872                           ;	USB Voltage Regulator Enable bit
  4873                           ;	VREGEN = OFF, USB voltage regulator disabled
  4874  300002                     	org	3145730
  4875  300002  1F                 	db	31
  4876                           
  4877                           ;Config register CONFIG2H @ 0x300003
  4878                           ;	Watchdog Timer Enable bit
  4879                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4880                           ;	Watchdog Timer Postscale Select bits
  4881                           ;	WDTPS = 32768, 1:32768
  4882  300003                     	org	3145731
  4883  300003  1E                 	db	30
  4884                           
  4885                           ; Padding undefined space
  4886  300004                     	org	3145732
  4887  300004  FF                 	db	255
  4888                           
  4889                           ;Config register CONFIG3H @ 0x300005
  4890                           ;	CCP2 MUX bit
  4891                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  4892                           ;	PORTB A/D Enable bit
  4893                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4894                           ;	Low-Power Timer 1 Oscillator Enable bit
  4895                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4896                           ;	MCLR Pin Enable bit
  4897                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4898  300005                     	org	3145733
  4899  300005  00                 	db	0
  4900                           
  4901                           ;Config register CONFIG4L @ 0x300006
  4902                           ;	Stack Full/Underflow Reset Enable bit
  4903                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4904                           ;	Single-Supply ICSP Enable bit
  4905                           ;	LVP = OFF, Single-Supply ICSP disabled
  4906                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4907                           ;	ICPRT = OFF, ICPORT disabled
  4908                           ;	Extended Instruction Set Enable bit
  4909                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4910                           ;	Background Debugger Enable bit
  4911                           ;	DEBUG = 0x1, unprogrammed default
  4912  300006                     	org	3145734
  4913  300006  81                 	db	129
  4914                           
  4915                           ; Padding undefined space
  4916  300007                     	org	3145735
  4917  300007  FF                 	db	255
  4918                           
  4919                           ;Config register CONFIG5L @ 0x300008
  4920                           ;	Code Protection bit
  4921                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4922                           ;	Code Protection bit
  4923                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4924                           ;	Code Protection bit
  4925                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4926                           ;	Code Protection bit
  4927                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4928  300008                     	org	3145736
  4929  300008  0F                 	db	15
  4930                           
  4931                           ;Config register CONFIG5H @ 0x300009
  4932                           ;	Boot Block Code Protection bit
  4933                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4934                           ;	Data EEPROM Code Protection bit
  4935                           ;	CPD = OFF, Data EEPROM is not code-protected
  4936  300009                     	org	3145737
  4937  300009  C0                 	db	192
  4938                           
  4939                           ;Config register CONFIG6L @ 0x30000A
  4940                           ;	Write Protection bit
  4941                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4942                           ;	Write Protection bit
  4943                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4944                           ;	Write Protection bit
  4945                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4946                           ;	Write Protection bit
  4947                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4948  30000A                     	org	3145738
  4949  30000A  0F                 	db	15
  4950                           
  4951                           ;Config register CONFIG6H @ 0x30000B
  4952                           ;	Configuration Register Write Protection bit
  4953                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4954                           ;	Boot Block Write Protection bit
  4955                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4956                           ;	Data EEPROM Write Protection bit
  4957                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4958  30000B                     	org	3145739
  4959  30000B  E0                 	db	224
  4960                           
  4961                           ;Config register CONFIG7L @ 0x30000C
  4962                           ;	Table Read Protection bit
  4963                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4964                           ;	Table Read Protection bit
  4965                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4966                           ;	Table Read Protection bit
  4967                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4968                           ;	Table Read Protection bit
  4969                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4970  30000C                     	org	3145740
  4971  30000C  0F                 	db	15
  4972                           
  4973                           ;Config register CONFIG7H @ 0x30000D
  4974                           ;	Boot Block Table Read Protection bit
  4975                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4976  30000D                     	org	3145741
  4977  30000D  40                 	db	64
  4978                           tosu	equ	0xFFF
  4979                           tosh	equ	0xFFE
  4980                           tosl	equ	0xFFD
  4981                           stkptr	equ	0xFFC
  4982                           pclatu	equ	0xFFB
  4983                           pclath	equ	0xFFA
  4984                           pcl	equ	0xFF9
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           prodh	equ	0xFF4
  4990                           prodl	equ	0xFF3
  4991                           indf0	equ	0xFEF
  4992                           postinc0	equ	0xFEE
  4993                           postdec0	equ	0xFED
  4994                           preinc0	equ	0xFEC
  4995                           plusw0	equ	0xFEB
  4996                           fsr0h	equ	0xFEA
  4997                           fsr0l	equ	0xFE9
  4998                           wreg	equ	0xFE8
  4999                           indf1	equ	0xFE7
  5000                           postinc1	equ	0xFE6
  5001                           postdec1	equ	0xFE5
  5002                           preinc1	equ	0xFE4
  5003                           plusw1	equ	0xFE3
  5004                           fsr1h	equ	0xFE2
  5005                           fsr1l	equ	0xFE1
  5006                           bsr	equ	0xFE0
  5007                           indf2	equ	0xFDF
  5008                           postinc2	equ	0xFDE
  5009                           postdec2	equ	0xFDD
  5010                           preinc2	equ	0xFDC
  5011                           plusw2	equ	0xFDB
  5012                           fsr2h	equ	0xFDA
  5013                           fsr2l	equ	0xFD9
  5014                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    18
    Data        251
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      58
    BANK0           160    110     157
    BANK1           256      0     255
    BANK2           256     38      74
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_15(CODE[9]), STR_14(CODE[8]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[8]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK0[10]), vec_value(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> date(BANK1[10]), hours(BANK1[10]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), vec_value(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), year(BANK1[10]), 
		 -> month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), mins(BANK1[10]), 
		 -> secs(BANK0[10]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), vec_value(BANK0[10]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> alert(BANK1[8]), bombillaCar0(BANK0[8]), good(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_Mostrar_Fecha
    _printTempHumedad->_sprintf
    _ON_LAMPARAS->_ON_LEDS
    _ON_LEDS->_LCD_Custom_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _Mostrar_Fecha->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_ON_LAMPARAS

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   48717
                                              0 BANK2     38    38      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                           _I2C_Init
                           _LCD_Init
                            _MSdelay
                      _Mostrar_Fecha
                       _OFF_LAMPARAS
                           _OFF_LEDS
                        _ON_LAMPARAS
                   _printTempHumedad
 ---------------------------------------------------------------------------------
 (1) _printTempHumedad                                     2     2      0   14144
                                             25 COMRAM     2     2      0
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _ON_LAMPARAS                                        110   110      0   13202
                                              0 BANK0    110   110      0
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                            _MSdelay
                            _ON_LEDS
 ---------------------------------------------------------------------------------
 (2) _ON_LEDS                                             24    24      0    5813
                                             11 COMRAM    24    24      0
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Custom_Char                                      4     2      2    3096
                                              7 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _OFF_LEDS                                            17    17      0     136
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 (1) _OFF_LAMPARAS                                        23    23      0     136
                                              0 COMRAM    23    23      0
 ---------------------------------------------------------------------------------
 (1) _Mostrar_Fecha                                       28    28      0   17174
                                             25 COMRAM    28    28      0
                           _I2C_Stop
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    17      5    4411
                                             12 COMRAM    13     8      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     251
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     251
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      62
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      62
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      31
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      65
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    5774
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    2732
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0    1227
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    2423
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0    1227
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2    1196
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     170
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _I2C_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _MSdelay
   _Mostrar_Fecha
     _I2C_Stop
     _LCD_Init
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
       _LCD_String
     _MSdelay
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _OFF_LAMPARAS
   _OFF_LEDS
   _ON_LAMPARAS
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
       _LCD_Char
       _LCD_Command
     _MSdelay
     _ON_LEDS
       _LCD_Char
       _LCD_Command
       _LCD_Custom_Char
   _printTempHumedad
     _LCD_Char
     _LCD_String
     _LCD_String_xy
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     26      4A       9       28.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6E      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     35      3A       1       61.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     220      20        0.0%
DATA                 0      0     220       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 10 15:48:04 2021

                    __size_of_I2C_Ready 0008                      __size_of_I2C_Start 0016  
                          ?_LCD_Command 0001                             _SSPSTATbits 000FC7  
                    __size_of_I2C_Write 0016                             ?_LCD_String 0008  
                       _LCD_Custom_Char 1540  RTC_Read_Calendar@read_calendar_address 0004  
                                   l302 15E4                                     l206 1752  
                                   l224 175E                                     l401 0CB0  
                                   l218 1768                                     l162 1664  
                                   l307 15FE                                     l332 144A  
                                   l340 1298                                     l166 167C  
                                   l190 16FA                                     l345 1272  
                                   l434 0AE4                                     l356 1492  
                                   l197 1710                                     l349 129E  
                                   l374 0B70                                     l383 0BDE  
                                   l392 0C4E                                     l289 10A6  
                                   l459 0D74                                     l966 13CE  
                                   l976 1536                                     _PEN 007E2A  
                                   _Day 00D4                         __end_of_I2C_Ack 176E  
                                   _min 00D6                                     _sec 00D8  
             __size_of_printTempHumedad 0108                                     wreg 000FE8  
                           LCD_Char@dat 0007                                    l3024 15F8  
                                  l3120 0C20                                    l3210 0932  
                                  l3050 0FA6                                    l3206 091A  
                                  l3054 0FAE                                    l3240 0A12  
                                  l3224 0994                                    l3144 0C86  
                                  l3250 0A6C                                    l3242 0A24  
                                  l3252 0A7E                                    l3244 0A36  
                                  l3180 0D0C                                    l3246 0A48  
                                  l3094 0BB0                                    l3248 0A5A  
                                  l3256 0A90                                    l3168 0CD8  
                                  l3328 1050                                    l3258 0ACA  
                                  l3194 08A4                                    l3178 0D02  
                                  l3370 10E8                                    l3196 08BA  
                                  l2740 1558                                    l3364 10DE  
                                  l2670 15B2                                    l2726 1734  
                                  l2806 13C4                                    l2822 152C  
                                  l2814 150C                                    l2752 1402  
                                  l2760 1678                                    l2816 1514  
                                  l2912 0DB0                                    l2682 15CE  
                                  l2850 159A                                    l2676 15BA  
                                  l2748 13DA                                    l2932 0DE6  
                                  l2908 0D9C                                    l2860 1226  
                                  l2846 158C                                    l2950 0E40  
                                  l2926 0DE2                                    l2918 0DB4  
                                  l2942 0E14                                    l2960 0ED2  
                                  l2952 0E46                                    l2944 0E24  
                                  l2794 139C                                    l2954 0E8C  
                                  l2962 0EE2                                    l2890 0D3A  
                                  l2796 13A4                                    l2892 0D40  
                                  l2884 0D20                                    l2966 0EF2  
                                  l2896 0D44                                    STR_1 083F  
                                  STR_2 0835                                    STR_3 083F  
                                  STR_4 083E                                    STR_5 0866  
                                  STR_6 0864                                    STR_7 0861  
                                  STR_8 085E                                    STR_9 083A  
                                  u2100 0EFA                                    u2110 0F14  
                                  u2120 173C                                    u2201 0FAC  
                                  u2130 1740                                    u2300 0C02  
                                  u2231 0B60                                    _LATD 000F8C  
                                  u2250 0B94                                    u2331 0C3E  
                                  u1710 15CA                                    u2510 1470  
                                  u2350 0C72                                    u2431 0AD4  
                                  u1800 1422                                    u2281 0BCE  
                                  u2521 1094                                    u2450 0B0A  
                                  u2371 0CA0                                    u1900 13A8  
                                  u2540 10D0                                    u2461 1482  
                                  u2390 0CD4                                    u2607 15EA  
                                  u1807 1418                                    u2480 14B8  
                                  u1930 1518                                    u2491 143A  
                                  u1790 13FA                                    u2567 0F7C  
                                  u1960 121E                                    u2577 0F96  
                                  u1970 1236                                    u2587 168E  
                                  u1980 1246                                    u2597 169A  
                                  u1797 13F0                                    u1991 1262  
                                  _RCEN 007E2B                                    _RSEN 007E29  
                                  _Date 00D2                                    _Year 00CE  
                       __end_of_ON_LEDS 12A0                                    _date 01E1  
                                  _days 01B6                                    _main 102A  
                                  _good 01C5                         ?_RTC_Read_Clock 0001  
                                  _hour 0036                        __end_of_I2C_Nack 1764  
                                  _mins 01F5                                    _secs 00DF  
                      __end_of_I2C_Init 16F6                        __end_of_I2C_Read 1684  
                                  _year 01CD                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                        __end_of_I2C_Stop 175A  
                                  prodl 000FF3                       ON_LEDS@T_Integral 001F  
                                  start 0000                         __end_of_MSdelay 15DC  
                      ??_DHT11_ReadData 0001                           _LCD_String_xy 1574  
                  __size_of_DHT11_Start 0020                            ___param_bank 000000  
      RTC_Read_Clock@read_clock_address 0004                        __end_of_LCD_Char 16C0  
                      __end_of_LCD_Init 163C                              _Clock_type 00F4  
                      __end_of_OFF_LEDS 1472                                   ?_main 0001  
                                 _ACKEN 007E2C                                   _ACKDT 007E2D  
                                 STR_10 0831                                   STR_11 082D  
                                 STR_12 083A                                   STR_20 0846  
                                 STR_13 0831                                   STR_21 0842  
                                 STR_14 082D                                   STR_22 085A  
                                 STR_23 084A                                   STR_15 0824  
                                 STR_16 0829                                   STR_24 0856  
                                 STR_17 083A                                   STR_25 0813  
                                 STR_18 0852                                   STR_19 084E  
                                 _LATC0 007C58                                   _LATC1 007C59  
                                 _LATC2 007C5A                                   _AM_PM 00F3  
                       __end_of___lwdiv 13D8                         __end_of___lwmod 1540  
                                 _SPBRG 000FAF                                   _TRISA 000F92  
                                 _TRISC 000F94                                   _TRISD 000F95  
                                 _SSPIE 007CEB                                   _SSPIF 007CF3  
                                 _TXREG 000FAD                                   _Month 00D0  
                                 _alert 01BD                         __end_of_dpowers 080B  
                                 _hours 01EB                                   _month 01D7  
                     __end_of_I2C_Ready 1776                                   main@i 0224  
                     __end_of_I2C_Start 170C                       __end_of_I2C_Write 1738  
                                 tablat 000FF5                                   plusw1 000FE3  
                                 plusw2 000FDB                                   status 000FD8  
                   __size_of_LCD_String 0052                         __end_of_sprintf 0F22  
                        _var_RH_Decimal 003A                          ?_LCD_String_xy 000A  
                         ?_OFF_LAMPARAS 0001                 __end_of_LCD_Custom_Char 1574  
                       __initialization 12A0                            __end_of_main 112A  
                             ??_I2C_Ack 0001                                  ??_main 0036  
                         __activetblptr 000002                           main@buffer_TX 0200  
                             ??_ON_LEDS 000C                                  _ADCON1 000FC1  
                   _DHT11_CheckResponse 1738                        LCD_String_xy@msg 000B  
                      LCD_String_xy@pos 000A                        LCD_String_xy@row 000D  
                             ??_MSdelay 0003                                  _OSCCON 000FD3  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
                        ??_OFF_LAMPARAS 0001                            ?_ON_LAMPARAS 0001  
                 __end_of_Mostrar_Fecha 0B0C                    ?_DHT11_CheckResponse 0001  
                             ??___lwdiv 0005                               ??___lwmod 000C  
                        Mostrar_Fecha@i 0034                                  clear_0 1306  
                                clear_1 1312                                  isa$std 000001  
                    _I2C_Repeated_Start 170C                    __size_of_LCD_Command 001C  
                      LCD_Custom_Char@i 000B                               ?_I2C_Nack 0001  
                      _printTempHumedad 0F22                               ?_I2C_Init 0001  
                             ?_I2C_Read 0001                               ?_I2C_Stop 0001  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                   ?_I2C_Repeated_Start 0001                               ??_sprintf 0012  
                        _var_T_Integral 0038                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 1322  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 000D  
                         ___rparam_used 000001                               ?_OFF_LEDS 0001  
                            _banAgregar 00DC                    ??_I2C_Repeated_Start 0002  
                      ?_LCD_Custom_Char 0008                          __pcstackCOMRAM 0001  
                          __pidataBANK0 1746                            __pidataBANK1 112A  
                          __pidataBANK2 163C                   ??_DHT11_CheckResponse 0001  
                       _var_RH_Integral 0039                            ??_LCD_String 000A  
                             OFF_LEDS@i 0010                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                        ??_RTC_Read_Clock 0003  
                            __pbssBANK0 00CE                              __pbssBANK1 01CD  
                            ??_LCD_Char 0007                              ??_LCD_Init 0008  
                    __end_of_LCD_String 142A                              ??_OFF_LEDS 0001  
                 OFF_LAMPARAS@buffer_TX 0001                            I2C_Read@flag 0001  
                        I2C_Read@buffer 0002                                 _I2C_Ack 1764  
                               _ACKSTAT 007E2E                    __end_of_OFF_LAMPARAS 14BA  
                               _ON_LEDS 11F8                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               _MSdelay 15A8                           ??_DHT11_Start 0001  
                             _I2C_Ready 176E                               _I2C_Start 16F6  
                             _I2C_Write 1722                           LCD_String@msg 0008  
                               __Hparam 0000                                 __Lparam 0000  
                    Mostrar_Fecha@F3226 0152                    __size_of_ON_LAMPARAS 020E  
                     _RTC_Read_Calendar 132C                            _bombillaCar0 00F5  
                               ___lwdiv 1386                        ON_LAMPARAS@F3212 0137  
                      ON_LAMPARAS@F3215 011C                                 ___lwmod 14FE  
                      ON_LAMPARAS@F3209 0100                        ON_LAMPARAS@F3218 0181  
                          __psmallconst 0800                                 _acumBom 00DA  
                    ?_RTC_Read_Calendar 0001                                 __pcinit 12A0  
                               __ramtop 0800                                 __ptext0 102A  
                               __ptext1 0F22                                 __ptext2 0B0C  
                               __ptext3 11F8                                 __ptext4 1540  
                               __ptext5 142A                                 __ptext6 1472  
                               __ptext7 086A                                 __ptext8 0D1A  
                               __ptext9 14FE                       __end_of_hexpowers 0813  
                               _dpowers 0801                        ON_LAMPARAS@i_841 00C9  
                      ON_LAMPARAS@i_844 00CB                        ON_LAMPARAS@i_845 00CD  
                      ON_LAMPARAS@i_838 00C7                     ??_RTC_Read_Calendar 0003  
                               _sprintf 0D1A                    end_of_initialization 1322  
                        LCD_Command@cmd 0007                           __Lmediumconst 0000  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001                __end_of_printTempHumedad 102A  
             __end_of_RTC_Read_Calendar 1386                               _RCSTAbits 000FAB  
                   __end_of_DHT11_Start 16A4                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc2 000FDE                               _PORTAbits 000F80  
                             _PORTBbits 000F81                               _PORTCbits 000F82  
               __size_of_DHT11_ReadData 0032                       OFF_LAMPARAS@F3204 016C  
                             _TRISCbits 000F94                       __size_of_I2C_Nack 000A  
                     __size_of_I2C_Init 001A                       __size_of_I2C_Read 0024  
                     __size_of_I2C_Stop 000A                               _TXSTAbits 000FAC  
                     __size_of_LCD_Char 001C                       __size_of_LCD_Init 002E  
                    DHT11_ReadData@data 0002                       __size_of_OFF_LEDS 0048  
                         ??_LCD_Command 0007                   __size_of_OFF_LAMPARAS 0048  
                           _BAUDCONbits 000FB8                     start_initialization 12A0  
                __size_of_Mostrar_Fecha 02A2    I2C_Repeated_Start@slave_read_address 0002  
                           ??_I2C_Ready 0001                             _DHT11_Start 1684  
                           ??_I2C_Start 0002             __end_of_DHT11_CheckResponse 1746  
                           ??_I2C_Write 0001                   __end_of_LCD_String_xy 15A8  
                          _OFF_LAMPARAS 1472              __size_of_RTC_Read_Calendar 005A  
           __size_of_I2C_Repeated_Start 0016                           _var_T_Decimal 00DE  
                           __pdataBANK0 00F3                             __pdataBANK1 0100  
                           __pdataBANK2 0226                                ?_I2C_Ack 0001  
              __size_of_LCD_Custom_Char 0034                     __end_of_LCD_Command 16DC  
                           __pbssCOMRAM 0036                           __pcstackBANK0 0060  
                         __pcstackBANK2 0200                                ?_ON_LEDS 0001  
                              ?_MSdelay 0001                           OFF_LEDS@F3196 01A7  
                           sprintf@flag 0016                             sprintf@prec 0015  
                         OFF_LAMPARAS@i 0016                        ON_LEDS@buffer_TX 000C  
                      ___lwdiv@dividend 0001                           _Mostrar_Fecha 086A  
                              ?___lwdiv 0001                                ?___lwmod 0008  
                              ON_LEDS@i 0022                          _DHT11_ReadData 15DC  
                           __smallconst 0800                                _I2C_Nack 175A  
                              _I2C_Init 16DC                                _I2C_Read 1660  
                              _I2C_Stop 1750                ON_LAMPARAS@buffer_TX_840 0097  
              ON_LAMPARAS@buffer_TX_843 00B2                ON_LAMPARAS@buffer_TX_837 007C  
                             _hexpowers 080B                        ___lwdiv@quotient 0006  
                 LCD_String_xy@location 000E                                ?_sprintf 000D  
                              MSdelay@i 0003                                MSdelay@j 0005  
                              _LCD_Char 16A4                                _LCD_Init 160E  
                         ??_ON_LAMPARAS 0024                                _OFF_LEDS 142A  
               __size_of_RTC_Read_Clock 0044                               _vec_value 00E9  
                     ?_printTempHumedad 0001                          ?_Mostrar_Fecha 0001  
                             main@F3188 0226                      ??_printTempHumedad 001A  
                __end_of_DHT11_ReadData 160E                             _LCD_Command 16C0  
                     OFF_LEDS@buffer_TX 0001                        __size_of_I2C_Ack 000A  
                Mostrar_Fecha@buffer_TX 001A                       ??_LCD_Custom_Char 000A  
                             copy_data0 12B4                               copy_data1 12D4  
                             copy_data2 12F4                        __size_of_ON_LEDS 00A8  
          I2C_Start@slave_write_address 0002                        __size_of_MSdelay 0034  
                              __Hrparam 0000                                __Lrparam 0000  
                         I2C_Write@data 0001                     __end_of_ON_LAMPARAS 0D1A  
                       ?_DHT11_ReadData 0001                        __size_of___lwdiv 0052  
                      __size_of___lwmod 0042                         DHT11_ReadData@i 0001  
                            sprintf@idx 0013                              sprintf@val 0017  
                          ON_LEDS@F3201 0194                         ___lwdiv@divisor 0003  
                       ___lwdiv@counter 0005                                __ptext10 1386  
                              __ptext11 14BA                                __ptext20 1764  
                              __ptext12 132C                                __ptext21 1574  
                              __ptext13 1750                                __ptext30 1738  
                              __ptext22 13D8                                __ptext14 16F6  
                              __ptext23 16A4                                __ptext15 170C  
                              __ptext24 160E                                __ptext16 1722  
                              __ptext25 16C0                                __ptext17 1660  
                              __ptext26 15A8                                __ptext18 176E  
                              __ptext27 16DC                                __ptext19 175A  
                              __ptext28 1684                                __ptext29 15DC  
                          ON_LAMPARAS@i 00C5                        __size_of_sprintf 0208  
                         __size_of_main 0100                            ?_DHT11_Start 0001  
                          ON_LEDS@valor 0020                         ??_Mostrar_Fecha 001A  
                            MSdelay@val 0001                                isa$xinst 000000  
                            _LCD_String 13D8                      LCD_Custom_Char@loc 000A  
                    LCD_Custom_Char@msg 0008                               sprintf@ap 0014  
                             sprintf@sp 000D                        ___lwmod@dividend 0008  
                  ON_LAMPARAS@buffer_TX 0060              __end_of_I2C_Repeated_Start 1722  
                           _ON_LAMPARAS 0B0C                          _RTC_Read_Clock 14BA  
          __size_of_DHT11_CheckResponse 000E                                sprintf@c 0019  
                              sprintf@f 000F                         ___lwmod@divisor 000A  
                       ___lwmod@counter 000C                  __size_of_LCD_String_xy 0034  
                           _SSPCON2bits 000FC5                  __end_of_RTC_Read_Clock 14FE  
