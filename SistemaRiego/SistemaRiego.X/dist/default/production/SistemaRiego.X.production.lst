

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 11 10:36:22 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.32
    56                           ; Generated 02/02/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataBANK0
    92  001786                     __pidataBANK0:
    93                           	callstack 0
    94                           
    95                           ;initializer for _AM_PM
    96  001786  05                 	db	5
    97                           
    98                           ;initializer for _Clock_type
    99  001787  06                 	db	6
   100                           
   101                           ;initializer for _bombillaCar0
   102  001788  0E                 	db	14
   103  001789  11                 	db	17
   104  00178A  11                 	db	17
   105  00178B  11                 	db	17
   106  00178C  0E                 	db	14
   107  00178D  0E                 	db	14
   108  00178E  00                 	db	0
   109  00178F  00                 	db	0
   110                           
   111                           	psect	idataBANK1
   112  001170                     __pidataBANK1:
   113                           	callstack 0
   114                           
   115                           ;initializer for ON_LAMPARAS@F3215
   116  001170  53                 	db	83
   117  001171  65                 	db	101
   118  001172  20                 	db	32
   119  001173  65                 	db	101
   120  001174  6E                 	db	110
   121  001175  63                 	db	99
   122  001176  65                 	db	101
   123  001177  6E                 	db	110
   124  001178  64                 	db	100
   125  001179  69                 	db	105
   126  00117A  6F                 	db	111
   127  00117B  20                 	db	32
   128  00117C  6C                 	db	108
   129  00117D  61                 	db	97
   130  00117E  20                 	db	32
   131  00117F  3B                 	db	59
   132  001180  62                 	db	98
   133  001181  6F                 	db	111
   134  001182  6D                 	db	109
   135  001183  62                 	db	98
   136  001184  69                 	db	105
   137  001185  6C                 	db	108
   138  001186  6C                 	db	108
   139  001187  61                 	db	97
   140  001188  20                 	db	32
   141  001189  31                 	db	49
   142  00118A  0D                 	db	13
   143  00118B  00                 	db	0
   144                           
   145                           ;initializer for ON_LAMPARAS@F3221
   146  00118C  53                 	db	83
   147  00118D  65                 	db	101
   148  00118E  20                 	db	32
   149  00118F  65                 	db	101
   150  001190  6E                 	db	110
   151  001191  63                 	db	99
   152  001192  65                 	db	101
   153  001193  6E                 	db	110
   154  001194  64                 	db	100
   155  001195  69                 	db	105
   156  001196  6F                 	db	111
   157  001197  20                 	db	32
   158  001198  6C                 	db	108
   159  001199  61                 	db	97
   160  00119A  20                 	db	32
   161  00119B  62                 	db	98
   162  00119C  6F                 	db	111
   163  00119D  6D                 	db	109
   164  00119E  62                 	db	98
   165  00119F  69                 	db	105
   166  0011A0  6C                 	db	108
   167  0011A1  6C                 	db	108
   168  0011A2  61                 	db	97
   169  0011A3  20                 	db	32
   170  0011A4  33                 	db	51
   171  0011A5  0D                 	db	13
   172  0011A6  00                 	db	0
   173                           
   174                           ;initializer for ON_LAMPARAS@F3218
   175  0011A7  53                 	db	83
   176  0011A8  65                 	db	101
   177  0011A9  20                 	db	32
   178  0011AA  65                 	db	101
   179  0011AB  6E                 	db	110
   180  0011AC  63                 	db	99
   181  0011AD  65                 	db	101
   182  0011AE  6E                 	db	110
   183  0011AF  64                 	db	100
   184  0011B0  69                 	db	105
   185  0011B1  6F                 	db	111
   186  0011B2  20                 	db	32
   187  0011B3  6C                 	db	108
   188  0011B4  61                 	db	97
   189  0011B5  20                 	db	32
   190  0011B6  62                 	db	98
   191  0011B7  6F                 	db	111
   192  0011B8  6D                 	db	109
   193  0011B9  62                 	db	98
   194  0011BA  69                 	db	105
   195  0011BB  6C                 	db	108
   196  0011BC  6C                 	db	108
   197  0011BD  61                 	db	97
   198  0011BE  20                 	db	32
   199  0011BF  32                 	db	50
   200  0011C0  0D                 	db	13
   201  0011C1  00                 	db	0
   202                           
   203                           ;initializer for OFF_LAMPARAS@F3204
   204  0011C2  42                 	db	66
   205  0011C3  6F                 	db	111
   206  0011C4  6D                 	db	109
   207  0011C5  62                 	db	98
   208  0011C6  69                 	db	105
   209  0011C7  6C                 	db	108
   210  0011C8  6C                 	db	108
   211  0011C9  61                 	db	97
   212  0011CA  73                 	db	115
   213  0011CB  20                 	db	32
   214  0011CC  41                 	db	65
   215  0011CD  70                 	db	112
   216  0011CE  61                 	db	97
   217  0011CF  67                 	db	103
   218  0011D0  61                 	db	97
   219  0011D1  64                 	db	100
   220  0011D2  61                 	db	97
   221  0011D3  73                 	db	115
   222  0011D4  20                 	db	32
   223  0011D5  0D                 	db	13
   224  0011D6  00                 	db	0
   225                           
   226                           ;initializer for ON_LAMPARAS@F3224
   227  0011D7  54                 	db	84
   228  0011D8  65                 	db	101
   229  0011D9  6D                 	db	109
   230  0011DA  70                 	db	112
   231  0011DB  65                 	db	101
   232  0011DC  72                 	db	114
   233  0011DD  61                 	db	97
   234  0011DE  74                 	db	116
   235  0011DF  75                 	db	117
   236  0011E0  72                 	db	114
   237  0011E1  61                 	db	97
   238  0011E2  20                 	db	32
   239  0011E3  41                 	db	65
   240  0011E4  6C                 	db	108
   241  0011E5  74                 	db	116
   242  0011E6  61                 	db	97
   243  0011E7  20                 	db	32
   244  0011E8  0D                 	db	13
   245  0011E9  00                 	db	0
   246                           
   247                           ;initializer for ON_LEDS@F3201
   248  0011EA  54                 	db	84
   249  0011EB  65                 	db	101
   250  0011EC  6D                 	db	109
   251  0011ED  70                 	db	112
   252  0011EE  65                 	db	101
   253  0011EF  72                 	db	114
   254  0011F0  61                 	db	97
   255  0011F1  74                 	db	116
   256  0011F2  75                 	db	117
   257  0011F3  72                 	db	114
   258  0011F4  61                 	db	97
   259  0011F5  20                 	db	32
   260  0011F6  49                 	db	73
   261  0011F7  64                 	db	100
   262  0011F8  65                 	db	101
   263  0011F9  61                 	db	97
   264  0011FA  6C                 	db	108
   265  0011FB  0D                 	db	13
   266  0011FC  00                 	db	0
   267                           
   268                           ;initializer for OFF_LEDS@F3196
   269  0011FD  41                 	db	65
   270  0011FE  70                 	db	112
   271  0011FF  61                 	db	97
   272  001200  67                 	db	103
   273  001201  61                 	db	97
   274  001202  6E                 	db	110
   275  001203  64                 	db	100
   276  001204  6F                 	db	111
   277  001205  20                 	db	32
   278  001206  4C                 	db	76
   279  001207  45                 	db	69
   280  001208  44                 	db	68
   281  001209  53                 	db	83
   282  00120A  0D                 	db	13
   283  00120B  00                 	db	0
   284                           
   285                           ;initializer for printTempHumedad@F3212
   286  00120C  20                 	db	32
   287  00120D  4D                 	db	77
   288  00120E  6F                 	db	111
   289  00120F  74                 	db	116
   290  001210  6F                 	db	111
   291  001211  72                 	db	114
   292  001212  20                 	db	32
   293  001213  6F                 	db	111
   294  001214  66                 	db	102
   295  001215  66                 	db	102
   296  001216  20                 	db	32
   297  001217  0D                 	db	13
   298  001218  00                 	db	0
   299                           
   300                           ;initializer for printTempHumedad@F3209
   301  001219  4D                 	db	77
   302  00121A  6F                 	db	111
   303  00121B  74                 	db	116
   304  00121C  6F                 	db	111
   305  00121D  72                 	db	114
   306  00121E  20                 	db	32
   307  00121F  4F                 	db	79
   308  001220  6E                 	db	110
   309  001221  20                 	db	32
   310  001222  0D                 	db	13
   311  001223  00                 	db	0
   312                           
   313                           ;initializer for _days
   314  001224  53                 	db	83
   315  001225  4D                 	db	77
   316  001226  54                 	db	84
   317  001227  57                 	db	87
   318  001228  74                 	db	116
   319  001229  46                 	db	70
   320  00122A  73                 	db	115
   321                           
   322                           ;initializer for _alert
   323  00122B  00                 	db	0
   324  00122C  1B                 	db	27
   325  00122D  1B                 	db	27
   326  00122E  00                 	db	0
   327  00122F  0E                 	db	14
   328  001230  11                 	db	17
   329  001231  11                 	db	17
   330  001232  00                 	db	0
   331                           
   332                           ;initializer for _good
   333  001233  00                 	db	0
   334  001234  1B                 	db	27
   335  001235  1B                 	db	27
   336  001236  00                 	db	0
   337  001237  11                 	db	17
   338  001238  11                 	db	17
   339  001239  0E                 	db	14
   340  00123A  00                 	db	0
   341                           
   342                           	psect	idataBANK2
   343  00167C                     __pidataBANK2:
   344                           	callstack 0
   345                           
   346                           ;initializer for main@F3188
   347  00167C  4E                 	db	78
   348  00167D  6F                 	db	111
   349  00167E  20                 	db	32
   350  00167F  73                 	db	115
   351  001680  65                 	db	101
   352  001681  20                 	db	32
   353  001682  68                 	db	104
   354  001683  61                 	db	97
   355  001684  20                 	db	32
   356  001685  70                 	db	112
   357  001686  72                 	db	114
   358  001687  65                 	db	101
   359  001688  6E                 	db	110
   360  001689  64                 	db	100
   361  00168A  69                 	db	105
   362  00168B  64                 	db	100
   363  00168C  6F                 	db	111
   364  00168D  20                 	db	32
   365  00168E  6E                 	db	110
   366  00168F  69                 	db	105
   367  001690  6E                 	db	110
   368  001691  67                 	db	103
   369  001692  75                 	db	117
   370  001693  6E                 	db	110
   371  001694  61                 	db	97
   372  001695  20                 	db	32
   373  001696  62                 	db	98
   374  001697  6F                 	db	111
   375  001698  6D                 	db	109
   376  001699  62                 	db	98
   377  00169A  69                 	db	105
   378  00169B  6C                 	db	108
   379  00169C  6C                 	db	108
   380  00169D  61                 	db	97
   381  00169E  0D                 	db	13
   382  00169F  00                 	db	0
   383                           
   384                           	psect	smallconst
   385  000800                     __psmallconst:
   386                           	callstack 0
   387  000800  00                 	db	0
   388  000801                     _dpowers:
   389                           	callstack 0
   390  000801  0001               	dw	1
   391  000803  000A               	dw	10
   392  000805  0064               	dw	100
   393  000807  03E8               	dw	1000
   394  000809  2710               	dw	10000
   395  00080B                     __end_of_dpowers:
   396                           	callstack 0
   397  00080B                     _hexpowers:
   398                           	callstack 0
   399  00080B  0001               	dw	1
   400  00080D  0010               	dw	16
   401  00080F  0100               	dw	256
   402  000811  1000               	dw	4096
   403  000813                     __end_of_hexpowers:
   404                           	callstack 0
   405  0000                     _PORTCbits	set	3970
   406  0000                     _TXREG	set	4013
   407  0000                     _ADCON1	set	4033
   408  0000                     _OSCCON	set	4051
   409  0000                     _SPBRG	set	4015
   410  0000                     _RCSTAbits	set	4011
   411  0000                     _BAUDCONbits	set	4024
   412  0000                     _TXSTAbits	set	4012
   413  0000                     _TRISCbits	set	3988
   414  0000                     _PORTBbits	set	3969
   415  0000                     _PORTAbits	set	3968
   416  0000                     _TRISA	set	3986
   417  0000                     _SSPCON2bits	set	4037
   418  0000                     _SSPADD	set	4040
   419  0000                     _SSPCON2	set	4037
   420  0000                     _SSPCON1	set	4038
   421  0000                     _SSPSTAT	set	4039
   422  0000                     _SSPBUF	set	4041
   423  0000                     _SSPSTATbits	set	4039
   424  0000                     _LATD	set	3980
   425  0000                     _TRISC	set	3988
   426  0000                     _TRISD	set	3989
   427  0000                     _LATC2	set	31834
   428  0000                     _ACKEN	set	32300
   429  0000                     _ACKDT	set	32301
   430  0000                     _PEN	set	32298
   431  0000                     _RSEN	set	32297
   432  0000                     _ACKSTAT	set	32302
   433  0000                     _SSPIF	set	31987
   434  0000                     _SSPIE	set	31979
   435  0000                     _TRISB1	set	31897
   436  0000                     _TRISB0	set	31896
   437  0000                     _RCEN	set	32299
   438  0000                     _LATC1	set	31833
   439  0000                     _LATC0	set	31832
   440  000813                     STR_25:
   441  000813  30                 	db	48	;'0'
   442  000814  31                 	db	49	;'1'
   443  000815  32                 	db	50	;'2'
   444  000816  33                 	db	51	;'3'
   445  000817  34                 	db	52	;'4'
   446  000818  35                 	db	53	;'5'
   447  000819  36                 	db	54	;'6'
   448  00081A  37                 	db	55	;'7'
   449  00081B  38                 	db	56	;'8'
   450  00081C  39                 	db	57	;'9'
   451  00081D  61                 	db	97	;'a'
   452  00081E  62                 	db	98	;'b'
   453  00081F  63                 	db	99	;'c'
   454  000820  64                 	db	100	;'d'
   455  000821  65                 	db	101	;'e'
   456  000822  66                 	db	102	;'f'
   457  000823  00                 	db	0
   458  000824                     STR_15:
   459  000824  20                 	db	32
   460  000825  44                 	db	68	;'D'
   461  000826  69                 	db	105	;'i'
   462  000827  61                 	db	97	;'a'
   463  000828  20                 	db	32
   464  000829  25                 	db	37
   465  00082A  78                 	db	120	;'x'
   466  00082B  2D                 	db	45
   467  00082C  00                 	db	0
   468  00082D                     STR_11:
   469  00082D  54                 	db	84	;'T'
   470  00082E  69                 	db	105	;'i'
   471  00082F  6D                 	db	109	;'m'
   472  000830  3A                 	db	58	;':'
   473  000831  25                 	db	37
   474  000832  78                 	db	120	;'x'
   475  000833  3A                 	db	58	;':'
   476  000834  00                 	db	0
   477  000835                     STR_2:
   478  000835  2E                 	db	46
   479  000836  25                 	db	37
   480  000837  64                 	db	100	;'d'
   481  000838  20                 	db	32
   482  000839  00                 	db	0
   483  00083A                     STR_9:
   484  00083A  25                 	db	37
   485  00083B  78                 	db	120	;'x'
   486  00083C  20                 	db	32
   487  00083D  00                 	db	0
   488  00083E                     STR_4:
   489  00083E  2E                 	db	46
   490  00083F  25                 	db	37
   491  000840  64                 	db	100	;'d'
   492  000841  00                 	db	0
   493  000842                     STR_21:
   494  000842  57                 	db	87	;'W'
   495  000843  65                 	db	101	;'e'
   496  000844  64                 	db	100	;'d'
   497  000845  00                 	db	0
   498  000846                     STR_20:
   499  000846  54                 	db	84	;'T'
   500  000847  75                 	db	117	;'u'
   501  000848  65                 	db	101	;'e'
   502  000849  00                 	db	0
   503  00084A                     STR_23:
   504  00084A  46                 	db	70	;'F'
   505  00084B  72                 	db	114	;'r'
   506  00084C  69                 	db	105	;'i'
   507  00084D  00                 	db	0
   508  00084E                     STR_19:
   509  00084E  4D                 	db	77	;'M'
   510  00084F  6F                 	db	111	;'o'
   511  000850  6E                 	db	110	;'n'
   512  000851  00                 	db	0
   513  000852                     STR_18:
   514  000852  53                 	db	83	;'S'
   515  000853  75                 	db	117	;'u'
   516  000854  6E                 	db	110	;'n'
   517  000855  00                 	db	0
   518  000856                     STR_24:
   519  000856  53                 	db	83	;'S'
   520  000857  61                 	db	97	;'a'
   521  000858  74                 	db	116	;'t'
   522  000859  00                 	db	0
   523  00085A                     STR_22:
   524  00085A  54                 	db	84	;'T'
   525  00085B  68                 	db	104	;'h'
   526  00085C  75                 	db	117	;'u'
   527  00085D  00                 	db	0
   528  00085E                     STR_8:
   529  00085E  41                 	db	65	;'A'
   530  00085F  4D                 	db	77	;'M'
   531  000860  00                 	db	0
   532  000861                     STR_7:
   533  000861  50                 	db	80	;'P'
   534  000862  4D                 	db	77	;'M'
   535  000863  00                 	db	0
   536  000864                     STR_6:
   537  000864  48                 	db	72	;'H'
   538  000865  00                 	db	0
   539  000866                     STR_5:
   540  000866  54                 	db	84	;'T'
   541  000867  00                 	db	0
   542  000868  00                 	db	0	; dummy byte at the end
   543  0000                     
   544                           ; #config settings
   545                           
   546                           	psect	cinit
   547  0012E4                     __pcinit:
   548                           	callstack 0
   549  0012E4                     start_initialization:
   550                           	callstack 0
   551  0012E4                     __initialization:
   552                           	callstack 0
   553                           
   554                           ; Initialize objects allocated to BANK2 (36 bytes)
   555                           ; load TBLPTR registers with __pidataBANK2
   556  0012E4  0E7C               	movlw	low __pidataBANK2
   557  0012E6  6EF6               	movwf	tblptrl,c
   558  0012E8  0E16               	movlw	high __pidataBANK2
   559  0012EA  6EF7               	movwf	tblptrh,c
   560  0012EC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   561  0012EE  6EF8               	movwf	tblptru,c
   562  0012F0  EE02  F026         	lfsr	0,__pdataBANK2
   563  0012F4  EE10 F024          	lfsr	1,36
   564  0012F8                     copy_data0:
   565  0012F8  0009               	tblrd		*+
   566  0012FA  CFF5 FFEE          	movff	tablat,postinc0
   567  0012FE  50E5               	movf	postdec1,w,c
   568  001300  50E1               	movf	fsr1l,w,c
   569  001302  E1FA               	bnz	copy_data0
   570                           
   571                           ; Initialize objects allocated to BANK1 (203 bytes)
   572                           ; load TBLPTR registers with __pidataBANK1
   573  001304  0E70               	movlw	low __pidataBANK1
   574  001306  6EF6               	movwf	tblptrl,c
   575  001308  0E11               	movlw	high __pidataBANK1
   576  00130A  6EF7               	movwf	tblptrh,c
   577  00130C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   578  00130E  6EF8               	movwf	tblptru,c
   579  001310  EE01  F000         	lfsr	0,__pdataBANK1
   580  001314  EE10 F0CB          	lfsr	1,203
   581  001318                     copy_data1:
   582  001318  0009               	tblrd		*+
   583  00131A  CFF5 FFEE          	movff	tablat,postinc0
   584  00131E  50E5               	movf	postdec1,w,c
   585  001320  50E1               	movf	fsr1l,w,c
   586  001322  E1FA               	bnz	copy_data1
   587                           
   588                           ; Initialize objects allocated to BANK0 (10 bytes)
   589                           ; load TBLPTR registers with __pidataBANK0
   590  001324  0E86               	movlw	low __pidataBANK0
   591  001326  6EF6               	movwf	tblptrl,c
   592  001328  0E17               	movlw	high __pidataBANK0
   593  00132A  6EF7               	movwf	tblptrh,c
   594  00132C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   595  00132E  6EF8               	movwf	tblptru,c
   596  001330  EE00  F0F5         	lfsr	0,__pdataBANK0
   597  001334  EE10 F00A          	lfsr	1,10
   598  001338                     copy_data2:
   599  001338  0009               	tblrd		*+
   600  00133A  CFF5 FFEE          	movff	tablat,postinc0
   601  00133E  50E5               	movf	postdec1,w,c
   602  001340  50E1               	movf	fsr1l,w,c
   603  001342  E1FA               	bnz	copy_data2
   604                           
   605                           ; Clear objects allocated to BANK1 (50 bytes)
   606  001344  EE01  F0CB         	lfsr	0,__pbssBANK1
   607  001348  0E32               	movlw	50
   608  00134A                     clear_0:
   609  00134A  6AEE               	clrf	postinc0,c
   610  00134C  06E8               	decf	wreg,f,c
   611  00134E  E1FD               	bnz	clear_0
   612                           
   613                           ; Clear objects allocated to BANK0 (39 bytes)
   614  001350  EE00  F0CE         	lfsr	0,__pbssBANK0
   615  001354  0E27               	movlw	39
   616  001356                     clear_1:
   617  001356  6AEE               	clrf	postinc0,c
   618  001358  06E8               	decf	wreg,f,c
   619  00135A  E1FD               	bnz	clear_1
   620                           
   621                           ; Clear objects allocated to COMRAM (3 bytes)
   622  00135C  6A3A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   623  00135E  6A39               	clrf	(__pbssCOMRAM+1)& (0+255),c
   624  001360  6A38               	clrf	__pbssCOMRAM& (0+255),c
   625  001362                     end_of_initialization:
   626                           	callstack 0
   627  001362                     __end_of__initialization:
   628                           	callstack 0
   629  001362  0E00               	movlw	low (__Lmediumconst shr (0+16))
   630  001364  6EF8               	movwf	tblptru,c
   631  001366  0100               	movlb	0
   632  001368  EF36  F008         	goto	_main	;jump to C main() function
   633                           
   634                           	psect	bssCOMRAM
   635  000038                     __pbssCOMRAM:
   636                           	callstack 0
   637  000038                     _hour:
   638                           	callstack 0
   639  000038                     	ds	2
   640  00003A                     _var_T_Integral:
   641                           	callstack 0
   642  00003A                     	ds	1
   643                           
   644                           	psect	bssBANK0
   645  0000CE                     __pbssBANK0:
   646                           	callstack 0
   647  0000CE                     _Year:
   648                           	callstack 0
   649  0000CE                     	ds	2
   650  0000D0                     _Month:
   651                           	callstack 0
   652  0000D0                     	ds	2
   653  0000D2                     _Date:
   654                           	callstack 0
   655  0000D2                     	ds	2
   656  0000D4                     _Day:
   657                           	callstack 0
   658  0000D4                     	ds	2
   659  0000D6                     _min:
   660                           	callstack 0
   661  0000D6                     	ds	2
   662  0000D8                     _sec:
   663                           	callstack 0
   664  0000D8                     	ds	2
   665  0000DA                     _acumBom:
   666                           	callstack 0
   667  0000DA                     	ds	2
   668  0000DC                     _banAgregar:
   669                           	callstack 0
   670  0000DC                     	ds	2
   671  0000DE                     _var_T_Decimal:
   672                           	callstack 0
   673  0000DE                     	ds	1
   674  0000DF                     _var_RH_Integral:
   675                           	callstack 0
   676  0000DF                     	ds	1
   677  0000E0                     _var_RH_Decimal:
   678                           	callstack 0
   679  0000E0                     	ds	1
   680  0000E1                     _secs:
   681                           	callstack 0
   682  0000E1                     	ds	10
   683  0000EB                     _vec_value:
   684                           	callstack 0
   685  0000EB                     	ds	10
   686                           
   687                           	psect	dataBANK0
   688  0000F5                     __pdataBANK0:
   689                           	callstack 0
   690  0000F5                     _AM_PM:
   691                           	callstack 0
   692  0000F5                     	ds	1
   693  0000F6                     _Clock_type:
   694                           	callstack 0
   695  0000F6                     	ds	1
   696  0000F7                     _bombillaCar0:
   697                           	callstack 0
   698  0000F7                     	ds	8
   699                           
   700                           	psect	bssBANK1
   701  0001CB                     __pbssBANK1:
   702                           	callstack 0
   703  0001CB                     _year:
   704                           	callstack 0
   705  0001CB                     	ds	10
   706  0001D5                     _month:
   707                           	callstack 0
   708  0001D5                     	ds	10
   709  0001DF                     _date:
   710                           	callstack 0
   711  0001DF                     	ds	10
   712  0001E9                     _hours:
   713                           	callstack 0
   714  0001E9                     	ds	10
   715  0001F3                     _mins:
   716                           	callstack 0
   717  0001F3                     	ds	10
   718                           
   719                           	psect	dataBANK1
   720  000100                     __pdataBANK1:
   721                           	callstack 0
   722  000100                     ON_LAMPARAS@F3215:
   723                           	callstack 0
   724  000100                     	ds	28
   725  00011C                     ON_LAMPARAS@F3221:
   726                           	callstack 0
   727  00011C                     	ds	27
   728  000137                     ON_LAMPARAS@F3218:
   729                           	callstack 0
   730  000137                     	ds	27
   731  000152                     OFF_LAMPARAS@F3204:
   732                           	callstack 0
   733  000152                     	ds	21
   734  000167                     ON_LAMPARAS@F3224:
   735                           	callstack 0
   736  000167                     	ds	19
   737  00017A                     ON_LEDS@F3201:
   738                           	callstack 0
   739  00017A                     	ds	19
   740  00018D                     OFF_LEDS@F3196:
   741                           	callstack 0
   742  00018D                     	ds	15
   743  00019C                     printTempHumedad@F3212:
   744                           	callstack 0
   745  00019C                     	ds	13
   746  0001A9                     printTempHumedad@F3209:
   747                           	callstack 0
   748  0001A9                     	ds	11
   749  0001B4                     _days:
   750                           	callstack 0
   751  0001B4                     	ds	7
   752  0001BB                     _alert:
   753                           	callstack 0
   754  0001BB                     	ds	8
   755  0001C3                     _good:
   756                           	callstack 0
   757  0001C3                     	ds	8
   758                           
   759                           	psect	dataBANK2
   760  000226                     __pdataBANK2:
   761                           	callstack 0
   762  000226                     main@F3188:
   763                           	callstack 0
   764  000226                     	ds	36
   765                           
   766                           	psect	cstackBANK2
   767  000200                     __pcstackBANK2:
   768                           	callstack 0
   769  000200                     main@buffer_TX:
   770                           	callstack 0
   771                           
   772                           ; 36 bytes @ 0x0
   773  000200                     	ds	36
   774  000224                     main@i:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x24
   778  000224                     	ds	2
   779                           
   780                           	psect	cstackBANK0
   781  000060                     __pcstackBANK0:
   782                           	callstack 0
   783  000060                     ON_LAMPARAS@buffer_TX:
   784                           	callstack 0
   785                           
   786                           ; 28 bytes @ 0x0
   787  000060                     	ds	28
   788  00007C                     ON_LAMPARAS@buffer_TX_843:
   789                           	callstack 0
   790                           
   791                           ; 27 bytes @ 0x1C
   792  00007C                     	ds	27
   793  000097                     ON_LAMPARAS@buffer_TX_846:
   794                           	callstack 0
   795                           
   796                           ; 27 bytes @ 0x37
   797  000097                     	ds	27
   798  0000B2                     ON_LAMPARAS@buffer_TX_849:
   799                           	callstack 0
   800                           
   801                           ; 19 bytes @ 0x52
   802  0000B2                     	ds	19
   803  0000C5                     ON_LAMPARAS@i:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x65
   807  0000C5                     	ds	2
   808  0000C7                     ON_LAMPARAS@i_844:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x67
   812  0000C7                     	ds	2
   813  0000C9                     ON_LAMPARAS@i_847:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x69
   817  0000C9                     	ds	2
   818  0000CB                     ON_LAMPARAS@i_850:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x6B
   822  0000CB                     	ds	2
   823  0000CD                     ON_LAMPARAS@i_851:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x6D
   827  0000CD                     	ds	1
   828                           
   829                           	psect	cstackCOMRAM
   830  000001                     __pcstackCOMRAM:
   831                           	callstack 0
   832  000001                     ??_DHT11_Start:
   833  000001                     ?___lwdiv:
   834                           	callstack 0
   835  000001                     I2C_Read@flag:
   836                           	callstack 0
   837  000001                     I2C_Write@data:
   838                           	callstack 0
   839  000001                     DHT11_ReadData@i:
   840                           	callstack 0
   841  000001                     MSdelay@val:
   842                           	callstack 0
   843  000001                     ___lwdiv@dividend:
   844                           	callstack 0
   845  000001                     OFF_LEDS@buffer_TX:
   846                           	callstack 0
   847  000001                     OFF_LAMPARAS@buffer_TX:
   848                           	callstack 0
   849                           
   850                           ; 21 bytes @ 0x0
   851  000001                     	ds	1
   852  000002                     I2C_Read@buffer:
   853                           	callstack 0
   854  000002                     I2C_Start@slave_write_address:
   855                           	callstack 0
   856  000002                     I2C_Repeated_Start@slave_read_address:
   857                           	callstack 0
   858  000002                     DHT11_ReadData@data:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x1
   862  000002                     	ds	1
   863  000003                     ??_RTC_Read_Clock:
   864  000003                     ??_RTC_Read_Calendar:
   865  000003                     MSdelay@i:
   866                           	callstack 0
   867  000003                     ___lwdiv@divisor:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x2
   871  000003                     	ds	1
   872  000004                     RTC_Read_Clock@read_clock_address:
   873                           	callstack 0
   874  000004                     RTC_Read_Calendar@read_calendar_address:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x3
   878  000004                     	ds	1
   879  000005                     ___lwdiv@counter:
   880                           	callstack 0
   881  000005                     MSdelay@j:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x4
   885  000005                     	ds	1
   886  000006                     ___lwdiv@quotient:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x5
   890  000006                     	ds	1
   891  000007                     LCD_Command@cmd:
   892                           	callstack 0
   893  000007                     LCD_Char@dat:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x6
   897  000007                     	ds	1
   898  000008                     ?___lwmod:
   899                           	callstack 0
   900  000008                     LCD_Custom_Char@msg:
   901                           	callstack 0
   902  000008                     LCD_String@msg:
   903                           	callstack 0
   904  000008                     ___lwmod@dividend:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x7
   908  000008                     	ds	2
   909  00000A                     LCD_Custom_Char@loc:
   910                           	callstack 0
   911  00000A                     LCD_String_xy@pos:
   912                           	callstack 0
   913  00000A                     ___lwmod@divisor:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x9
   917  00000A                     	ds	1
   918  00000B                     LCD_Custom_Char@i:
   919                           	callstack 0
   920  00000B                     LCD_String_xy@msg:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0xA
   924  00000B                     	ds	1
   925  00000C                     ___lwmod@counter:
   926                           	callstack 0
   927  00000C                     ON_LEDS@buffer_TX:
   928                           	callstack 0
   929                           
   930                           ; 19 bytes @ 0xB
   931  00000C                     	ds	1
   932  00000D                     ?_sprintf:
   933                           	callstack 0
   934  00000D                     LCD_String_xy@row:
   935                           	callstack 0
   936  00000D                     sprintf@sp:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0xC
   940  00000D                     	ds	1
   941  00000E                     LCD_String_xy@location:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0xD
   945  00000E                     	ds	1
   946  00000F                     sprintf@f:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0xE
   950  00000F                     	ds	1
   951  000010                     OFF_LEDS@i:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0xF
   955  000010                     	ds	2
   956  000012                     ??_sprintf:
   957                           
   958                           ; 1 bytes @ 0x11
   959  000012                     	ds	1
   960  000013                     sprintf@idx:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0x12
   964  000013                     	ds	1
   965  000014                     sprintf@ap:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x13
   969  000014                     	ds	1
   970  000015                     sprintf@prec:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x14
   974  000015                     	ds	1
   975  000016                     sprintf@flag:
   976                           	callstack 0
   977  000016                     OFF_LAMPARAS@i:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x15
   981  000016                     	ds	1
   982  000017                     sprintf@val:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x16
   986  000017                     	ds	2
   987  000019                     sprintf@c:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x18
   991  000019                     	ds	1
   992  00001A                     ??_printTempHumedad:
   993  00001A                     
   994                           ; 1 bytes @ 0x19
   995  00001A                     	ds	2
   996  00001C                     printTempHumedad@buffer_TX_831:
   997                           	callstack 0
   998                           
   999                           ; 13 bytes @ 0x1B
  1000  00001C                     	ds	3
  1001  00001F                     ON_LEDS@T_Integral:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x1E
  1005  00001F                     	ds	1
  1006  000020                     ON_LEDS@valor:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x1F
  1010  000020                     	ds	2
  1011  000022                     ON_LEDS@i:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x21
  1015  000022                     	ds	2
  1016  000024                     
  1017                           ; 1 bytes @ 0x23
  1018  000024                     	ds	5
  1019  000029                     printTempHumedad@buffer_TX:
  1020                           	callstack 0
  1021                           
  1022                           ; 11 bytes @ 0x28
  1023  000029                     	ds	11
  1024  000034                     printTempHumedad@i:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x33
  1028  000034                     	ds	2
  1029  000036                     printTempHumedad@i_832:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x35
  1033  000036                     	ds	2
  1034  000038                     
  1035                           ; 1 bytes @ 0x37
  1036 ;;
  1037 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1038 ;;
  1039 ;; *************** function _main *****************
  1040 ;; Defined at:
  1041 ;;		line 94 in file "Sistema.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  i               2   36[BANK2 ] int 
  1046 ;;  buffer_TX      36    0[BANK2 ] unsigned char [36]
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1056 ;;      Params:         0       0       0       0       0       0       0       0       0
  1057 ;;      Locals:         0       0       0      38       0       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1059 ;;      Totals:         0       0       0      38       0       0       0       0       0
  1060 ;;Total ram usage:       38 bytes
  1061 ;; Hardware stack levels required when called: 5
  1062 ;; This function calls:
  1063 ;;		_DHT11_CheckResponse
  1064 ;;		_DHT11_ReadData
  1065 ;;		_DHT11_Start
  1066 ;;		_I2C_Init
  1067 ;;		_LCD_Init
  1068 ;;		_MSdelay
  1069 ;;		_Mostrar_Fecha
  1070 ;;		_OFF_LAMPARAS
  1071 ;;		_OFF_LEDS
  1072 ;;		_ON_LAMPARAS
  1073 ;;		_printTempHumedad
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text0
  1080  00106C                     __ptext0:
  1081                           	callstack 0
  1082  00106C                     _main:
  1083                           	callstack 26
  1084                           
  1085                           ;Sistema.c: 95: TRISA = 0;
  1086                           
  1087                           ;incstack = 0
  1088  00106C  0E00               	movlw	0
  1089  00106E  6E92               	movwf	146,c	;volatile
  1090                           
  1091                           ;Sistema.c: 98: PORTAbits.RA0 = 0;
  1092  001070  9080               	bcf	128,0,c	;volatile
  1093                           
  1094                           ;Sistema.c: 99: PORTAbits.RA1 = 0;
  1095  001072  9280               	bcf	128,1,c	;volatile
  1096                           
  1097                           ;Sistema.c: 100: PORTAbits.RA2 = 0;
  1098  001074  9480               	bcf	128,2,c	;volatile
  1099                           
  1100                           ;Sistema.c: 102: PORTBbits.RB6 = 0;
  1101  001076  9C81               	bcf	129,6,c	;volatile
  1102                           
  1103                           ;Sistema.c: 105: TRISCbits.RC6 = 0;
  1104  001078  9C94               	bcf	148,6,c	;volatile
  1105                           
  1106                           ;Sistema.c: 106: TXSTAbits.TX9 = 0;
  1107  00107A  9CAC               	bcf	172,6,c	;volatile
  1108                           
  1109                           ;Sistema.c: 107: TXSTAbits.TXEN = 1;
  1110  00107C  8AAC               	bsf	172,5,c	;volatile
  1111                           
  1112                           ;Sistema.c: 108: TXSTAbits.SYNC = 0;
  1113  00107E  98AC               	bcf	172,4,c	;volatile
  1114                           
  1115                           ;Sistema.c: 109: TXSTAbits.BRGH = 0;
  1116  001080  94AC               	bcf	172,2,c	;volatile
  1117                           
  1118                           ;Sistema.c: 110: BAUDCONbits.BRG16 = 0;
  1119  001082  96B8               	bcf	184,3,c	;volatile
  1120                           
  1121                           ;Sistema.c: 111: RCSTAbits.SPEN = 1;
  1122  001084  8EAB               	bsf	171,7,c	;volatile
  1123                           
  1124                           ;Sistema.c: 112: SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
  1125  001086  0E0C               	movlw	12
  1126  001088  6EAF               	movwf	175,c	;volatile
  1127                           
  1128                           ;Sistema.c: 114: OSCCON = 0x72;
  1129  00108A  0E72               	movlw	114
  1130  00108C  6ED3               	movwf	211,c	;volatile
  1131                           
  1132                           ;Sistema.c: 117: ADCON1 = 0x0F;
  1133  00108E  0E0F               	movlw	15
  1134  001090  6EC1               	movwf	193,c	;volatile
  1135  001092                     l3377:
  1136                           
  1137                           ;Sistema.c: 120: LCD_Init();
  1138  001092  EC27  F00B         	call	_LCD_Init	;wreg free
  1139                           
  1140                           ;Sistema.c: 121: I2C_Init();
  1141  001096  EC8E  F00B         	call	_I2C_Init	;wreg free
  1142                           
  1143                           ;Sistema.c: 122: MSdelay(10);
  1144  00109A  0E00               	movlw	0
  1145  00109C  6E02               	movwf	(MSdelay@val+1)^0,c
  1146  00109E  0E0A               	movlw	10
  1147  0010A0  6E01               	movwf	MSdelay@val^0,c
  1148  0010A2  ECF4  F00A         	call	_MSdelay	;wreg free
  1149                           
  1150                           ;Sistema.c: 124: DHT11_Start();
  1151  0010A6  EC62  F00B         	call	_DHT11_Start	;wreg free
  1152                           
  1153                           ;Sistema.c: 125: DHT11_CheckResponse();
  1154  0010AA  ECBC  F00B         	call	_DHT11_CheckResponse	;wreg free
  1155                           
  1156                           ;Sistema.c: 128: var_RH_Integral = DHT11_ReadData();
  1157  0010AE  EC0E  F00B         	call	_DHT11_ReadData	;wreg free
  1158  0010B2  0100               	movlb	0	; () banked
  1159  0010B4  6FDF               	movwf	_var_RH_Integral& (0+255),b
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;Sistema.c: 129: var_RH_Decimal = DHT11_ReadData();
  1163  0010B6  EC0E  F00B         	call	_DHT11_ReadData	;wreg free
  1164  0010BA  0100               	movlb	0	; () banked
  1165  0010BC  6FE0               	movwf	_var_RH_Decimal& (0+255),b
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;Sistema.c: 130: var_T_Integral = DHT11_ReadData();
  1169  0010BE  EC0E  F00B         	call	_DHT11_ReadData	;wreg free
  1170  0010C2  6E3A               	movwf	_var_T_Integral^0,c
  1171                           
  1172                           ;Sistema.c: 131: var_T_Decimal = DHT11_ReadData();
  1173  0010C4  EC0E  F00B         	call	_DHT11_ReadData	;wreg free
  1174  0010C8  0100               	movlb	0	; () banked
  1175  0010CA  6FDE               	movwf	_var_T_Decimal& (0+255),b
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;Sistema.c: 133: printTempHumedad();
  1179  0010CC  EC71  F007         	call	_printTempHumedad	;wreg free
  1180                           
  1181                           ;Sistema.c: 135: char buffer_TX[] = "No se ha prendido ninguna bombilla\r";
  1182  0010D0  EE22  F026         	lfsr	2,main@F3188
  1183  0010D4  EE12  F000         	lfsr	1,main@buffer_TX
  1184  0010D8  0E23               	movlw	35
  1185  0010DA                     u2611:
  1186  0010DA  CFDB FFE3          	movff	plusw2,plusw1
  1187  0010DE  06E8               	decf	wreg,f,c
  1188  0010E0  E2FC               	bc	u2611
  1189                           
  1190                           ;Sistema.c: 136: for (int i = 0; i < 35; i++) {
  1191  0010E2  0E00               	movlw	0
  1192  0010E4  0102               	movlb	2	; () banked
  1193  0010E6  6F25               	movwf	(main@i+1)& (0+255),b
  1194  0010E8  0E00               	movlw	0
  1195  0010EA  6F24               	movwf	main@i& (0+255),b
  1196  0010EC                     l289:
  1197  0010EC  A2AC               	btfss	172,1,c	;volatile
  1198  0010EE  D7FE               	goto	l289
  1199                           
  1200                           ;Sistema.c: 139: };Sistema.c: 141: TXREG = buffer_TX[i];
  1201  0010F0  0E00               	movlw	low main@buffer_TX
  1202  0010F2  0102               	movlb	2	; () banked
  1203  0010F4  2524               	addwf	main@i& (0+255),w,b
  1204  0010F6  6ED9               	movwf	fsr2l,c
  1205  0010F8  0E02               	movlw	high main@buffer_TX
  1206  0010FA  2125               	addwfc	(main@i+1)& (0+255),w,b
  1207  0010FC  6EDA               	movwf	fsr2h,c
  1208  0010FE  50DF               	movf	indf2,w,c
  1209  001100  6EAD               	movwf	173,c	;volatile
  1210                           
  1211                           ; BSR set to: 2
  1212  001102  4B24               	infsnz	main@i& (0+255),f,b
  1213  001104  2B25               	incf	(main@i+1)& (0+255),f,b
  1214                           
  1215                           ; BSR set to: 2
  1216  001106  BF25               	btfsc	(main@i+1)& (0+255),7,b
  1217  001108  D7F1               	goto	l289
  1218  00110A  5125               	movf	(main@i+1)& (0+255),w,b
  1219  00110C  E104               	bnz	u2630
  1220  00110E  0E23               	movlw	35
  1221  001110  5D24               	subwf	main@i& (0+255),w,b
  1222  001112  A0D8               	btfss	status,0,c
  1223  001114  D7EB               	goto	l289
  1224  001116                     u2630:
  1225                           
  1226                           ;Sistema.c: 142: };Sistema.c: 143: MSdelay(1000);
  1227  001116  0E03               	movlw	3
  1228  001118  6E02               	movwf	(MSdelay@val+1)^0,c
  1229  00111A  0EE8               	movlw	232
  1230  00111C  6E01               	movwf	MSdelay@val^0,c
  1231  00111E  ECF4  F00A         	call	_MSdelay	;wreg free
  1232                           
  1233                           ;Sistema.c: 145: while (banAgregar == 0) {
  1234  001122  D005               	goto	l3419
  1235  001124                     l3413:
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;Sistema.c: 147: ON_LAMPARAS();
  1239  001124  EC66  F005         	call	_ON_LAMPARAS	;wreg free
  1240                           
  1241                           ;Sistema.c: 148: printTempHumedad();
  1242  001128  EC71  F007         	call	_printTempHumedad	;wreg free
  1243  00112C  D7F4               	goto	u2630
  1244  00112E                     l3419:
  1245  00112E  0100               	movlb	0	; () banked
  1246  001130  51DC               	movf	_banAgregar& (0+255),w,b
  1247  001132  11DD               	iorwf	(_banAgregar+1)& (0+255),w,b
  1248  001134  B4D8               	btfsc	status,2,c
  1249  001136  D7F6               	goto	l3413
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;Sistema.c: 151: };Sistema.c: 152: Mostrar_Fecha();
  1253  001138  EC35  F004         	call	_Mostrar_Fecha	;wreg free
  1254                           
  1255                           ;Sistema.c: 153: MSdelay(1000);
  1256  00113C  0E03               	movlw	3
  1257  00113E  6E02               	movwf	(MSdelay@val+1)^0,c
  1258  001140  0EE8               	movlw	232
  1259  001142  6E01               	movwf	MSdelay@val^0,c
  1260  001144  ECF4  F00A         	call	_MSdelay	;wreg free
  1261                           
  1262                           ;Sistema.c: 154: banAgregar = 0;
  1263  001148  0E00               	movlw	0
  1264  00114A  0100               	movlb	0	; () banked
  1265  00114C  6FDD               	movwf	(_banAgregar+1)& (0+255),b
  1266  00114E  0E00               	movlw	0
  1267  001150  6FDC               	movwf	_banAgregar& (0+255),b
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;Sistema.c: 155: acumBom = 0;
  1271  001152  0E00               	movlw	0
  1272  001154  6FDB               	movwf	(_acumBom+1)& (0+255),b
  1273  001156  0E00               	movlw	0
  1274  001158  6FDA               	movwf	_acumBom& (0+255),b
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;Sistema.c: 156: OFF_LAMPARAS();
  1278  00115A  EC59  F00A         	call	_OFF_LAMPARAS	;wreg free
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;Sistema.c: 157: OFF_LEDS();
  1282  00115E  EC35  F00A         	call	_OFF_LEDS	;wreg free
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;Sistema.c: 158: MSdelay(2000);
  1286  001162  0E07               	movlw	7
  1287  001164  6E02               	movwf	(MSdelay@val+1)^0,c
  1288  001166  0ED0               	movlw	208
  1289  001168  6E01               	movwf	MSdelay@val^0,c
  1290  00116A  ECF4  F00A         	call	_MSdelay	;wreg free
  1291  00116E  D791               	goto	l3377
  1292  001170                     __end_of_main:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _printTempHumedad *****************
  1296 ;; Defined at:
  1297 ;;		line 262 in file "Sistema.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  i               2   53[COMRAM] int 
  1302 ;;  i               2   51[COMRAM] int 
  1303 ;;  buffer_TX      13   27[COMRAM] unsigned char [13]
  1304 ;;  buffer_TX      11   40[COMRAM] unsigned char [11]
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1314 ;;      Params:         0       0       0       0       0       0       0       0       0
  1315 ;;      Locals:        28       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1317 ;;      Totals:        30       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:       30 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 4
  1321 ;; This function calls:
  1322 ;;		_LCD_Char
  1323 ;;		_LCD_String
  1324 ;;		_LCD_String_xy
  1325 ;;		_sprintf
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text1
  1332  000EE2                     __ptext1:
  1333                           	callstack 0
  1334  000EE2                     _printTempHumedad:
  1335                           	callstack 26
  1336                           
  1337                           ;Sistema.c: 264: sprintf(vec_value, "%d", var_RH_Integral);
  1338                           
  1339                           ;incstack = 0
  1340  000EE2  0EEB               	movlw	low _vec_value
  1341  000EE4  6E0D               	movwf	sprintf@sp^0,c
  1342  000EE6  6A0E               	clrf	(sprintf@sp+1)^0,c
  1343  000EE8  0E3F               	movlw	low (STR_4+1)
  1344  000EEA  6E0F               	movwf	sprintf@f^0,c
  1345  000EEC  C0DF  F010         	movff	_var_RH_Integral,?_sprintf+3
  1346  000EF0  6A11               	clrf	(?_sprintf+4)^0,c
  1347  000EF2  EC6D  F006         	call	_sprintf	;wreg free
  1348                           
  1349                           ;Sistema.c: 265: LCD_String_xy(0, 9, vec_value);
  1350  000EF6  0E09               	movlw	9
  1351  000EF8  6E0A               	movwf	LCD_String_xy@pos^0,c
  1352  000EFA  0EEB               	movlw	low _vec_value
  1353  000EFC  6E0B               	movwf	LCD_String_xy@msg^0,c
  1354  000EFE  6A0C               	clrf	(LCD_String_xy@msg+1)^0,c
  1355  000F00  0E00               	movlw	0
  1356  000F02  ECDA  F00A         	call	_LCD_String_xy
  1357                           
  1358                           ;Sistema.c: 266: sprintf(vec_value, ".%d ", var_RH_Decimal);
  1359  000F06  0EEB               	movlw	low _vec_value
  1360  000F08  6E0D               	movwf	sprintf@sp^0,c
  1361  000F0A  6A0E               	clrf	(sprintf@sp+1)^0,c
  1362  000F0C  0E35               	movlw	low STR_2
  1363  000F0E  6E0F               	movwf	sprintf@f^0,c
  1364  000F10  C0E0  F010         	movff	_var_RH_Decimal,?_sprintf+3
  1365  000F14  6A11               	clrf	(?_sprintf+4)^0,c
  1366  000F16  EC6D  F006         	call	_sprintf	;wreg free
  1367                           
  1368                           ;Sistema.c: 267: LCD_String(vec_value);
  1369  000F1A  0EEB               	movlw	low _vec_value
  1370  000F1C  6E08               	movwf	LCD_String@msg^0,c
  1371  000F1E  6A09               	clrf	(LCD_String@msg+1)^0,c
  1372  000F20  EC0C  F00A         	call	_LCD_String	;wreg free
  1373                           
  1374                           ;Sistema.c: 268: LCD_Char('%');
  1375  000F24  0E25               	movlw	37
  1376  000F26  EC72  F00B         	call	_LCD_Char
  1377                           
  1378                           ;Sistema.c: 269: if(var_RH_Integral<80){
  1379  000F2A  0E50               	movlw	80
  1380  000F2C  0100               	movlb	0	; () banked
  1381  000F2E  61DF               	cpfslt	_var_RH_Integral& (0+255),b
  1382  000F30  D03A               	goto	l3099
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;Sistema.c: 270: PORTBbits.RB6 = 1;
  1386  000F32  8C81               	bsf	129,6,c	;volatile
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;Sistema.c: 271: _delay((unsigned long)((100)*(8000000L/4000.0)));
  1390  000F34  0E02               	movlw	2
  1391  000F36  6E1B               	movwf	(??_printTempHumedad+1)^0,c
  1392  000F38  0E04               	movlw	4
  1393  000F3A  6E1A               	movwf	??_printTempHumedad^0,c
  1394  000F3C  0EBA               	movlw	186
  1395  000F3E                     u2657:
  1396  000F3E  2EE8               	decfsz	wreg,f,c
  1397  000F40  D7FE               	bra	u2657
  1398  000F42  2E1A               	decfsz	??_printTempHumedad^0,f,c
  1399  000F44  D7FC               	bra	u2657
  1400  000F46  2E1B               	decfsz	(??_printTempHumedad+1)^0,f,c
  1401  000F48  D7FA               	bra	u2657
  1402  000F4A  D000               	nop2	
  1403                           
  1404                           ;Sistema.c: 272: PORTBbits.RB6 = 0;
  1405  000F4C  9C81               	bcf	129,6,c	;volatile
  1406                           
  1407                           ;Sistema.c: 273: _delay((unsigned long)((100)*(8000000L/4000.0)));
  1408  000F4E  0E02               	movlw	2
  1409  000F50  6E1B               	movwf	(??_printTempHumedad+1)^0,c
  1410  000F52  0E04               	movlw	4
  1411  000F54  6E1A               	movwf	??_printTempHumedad^0,c
  1412  000F56  0EBA               	movlw	186
  1413  000F58                     u2667:
  1414  000F58  2EE8               	decfsz	wreg,f,c
  1415  000F5A  D7FE               	bra	u2667
  1416  000F5C  2E1A               	decfsz	??_printTempHumedad^0,f,c
  1417  000F5E  D7FC               	bra	u2667
  1418  000F60  2E1B               	decfsz	(??_printTempHumedad+1)^0,f,c
  1419  000F62  D7FA               	bra	u2667
  1420  000F64  D000               	nop2	
  1421                           
  1422                           ;Sistema.c: 274: char buffer_TX[] = "Motor On \r";
  1423  000F66  EE21  F0A9         	lfsr	2,printTempHumedad@F3209
  1424  000F6A  EE10  F029         	lfsr	1,printTempHumedad@buffer_TX
  1425  000F6E  0E0A               	movlw	10
  1426  000F70                     u2261:
  1427  000F70  CFDB FFE3          	movff	plusw2,plusw1
  1428  000F74  06E8               	decf	wreg,f,c
  1429  000F76  E2FC               	bc	u2261
  1430                           
  1431                           ;Sistema.c: 275: for (int i = 0; i < 19; i++) {
  1432  000F78  0E00               	movlw	0
  1433  000F7A  6E35               	movwf	(printTempHumedad@i+1)^0,c
  1434  000F7C  0E00               	movlw	0
  1435  000F7E  6E34               	movwf	printTempHumedad@i^0,c
  1436  000F80                     l367:
  1437  000F80  A2AC               	btfss	172,1,c	;volatile
  1438  000F82  D7FE               	goto	l367
  1439                           
  1440                           ;Sistema.c: 278: };Sistema.c: 280: TXREG = buffer_TX[i];
  1441  000F84  5034               	movf	printTempHumedad@i^0,w,c
  1442  000F86  0F29               	addlw	low printTempHumedad@buffer_TX
  1443  000F88  6ED9               	movwf	fsr2l,c
  1444  000F8A  6ADA               	clrf	fsr2h,c
  1445  000F8C  50DF               	movf	indf2,w,c
  1446  000F8E  6EAD               	movwf	173,c	;volatile
  1447  000F90  4A34               	infsnz	printTempHumedad@i^0,f,c
  1448  000F92  2A35               	incf	(printTempHumedad@i+1)^0,f,c
  1449  000F94  BE35               	btfsc	(printTempHumedad@i+1)^0,7,c
  1450  000F96  D7F4               	goto	l367
  1451  000F98  5035               	movf	(printTempHumedad@i+1)^0,w,c
  1452  000F9A  E12A               	bnz	l3117
  1453  000F9C  0E13               	movlw	19
  1454  000F9E  5C34               	subwf	printTempHumedad@i^0,w,c
  1455  000FA0  B0D8               	btfsc	status,0,c
  1456  000FA2  D026               	goto	l3117
  1457  000FA4  D7ED               	goto	l367
  1458  000FA6                     l3099:
  1459                           
  1460                           ; BSR set to: 0
  1461  000FA6  0E50               	movlw	80
  1462  000FA8  65DF               	cpfsgt	_var_RH_Integral& (0+255),b
  1463  000FAA  D021               	goto	l371
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;Sistema.c: 283: PORTBbits.RB6 = 0;
  1467  000FAC  9C81               	bcf	129,6,c	;volatile
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;Sistema.c: 284: char buffer_TX[] = " Motor off \r";
  1471  000FAE  EE21  F09C         	lfsr	2,printTempHumedad@F3212
  1472  000FB2  EE10  F01C         	lfsr	1,printTempHumedad@buffer_TX_831
  1473  000FB6  0E0C               	movlw	12
  1474  000FB8                     u2301:
  1475  000FB8  CFDB FFE3          	movff	plusw2,plusw1
  1476  000FBC  06E8               	decf	wreg,f,c
  1477  000FBE  E2FC               	bc	u2301
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;Sistema.c: 285: for (int i = 0; i < 19; i++) {
  1481  000FC0  0E00               	movlw	0
  1482  000FC2  6E37               	movwf	(printTempHumedad@i_832+1)^0,c
  1483  000FC4  0E00               	movlw	0
  1484  000FC6  6E36               	movwf	printTempHumedad@i_832^0,c
  1485  000FC8                     l376:
  1486  000FC8  A2AC               	btfss	172,1,c	;volatile
  1487  000FCA  D7FE               	goto	l376
  1488                           
  1489                           ;Sistema.c: 288: };Sistema.c: 290: TXREG = buffer_TX[i];
  1490  000FCC  5036               	movf	printTempHumedad@i_832^0,w,c
  1491  000FCE  0F1C               	addlw	low printTempHumedad@buffer_TX_831
  1492  000FD0  6ED9               	movwf	fsr2l,c
  1493  000FD2  6ADA               	clrf	fsr2h,c
  1494  000FD4  50DF               	movf	indf2,w,c
  1495  000FD6  6EAD               	movwf	173,c	;volatile
  1496  000FD8  4A36               	infsnz	printTempHumedad@i_832^0,f,c
  1497  000FDA  2A37               	incf	(printTempHumedad@i_832+1)^0,f,c
  1498  000FDC  BE37               	btfsc	(printTempHumedad@i_832+1)^0,7,c
  1499  000FDE  D7F4               	goto	l376
  1500  000FE0  5037               	movf	(printTempHumedad@i_832+1)^0,w,c
  1501  000FE2  E106               	bnz	l3117
  1502  000FE4  0E13               	movlw	19
  1503  000FE6  5C36               	subwf	printTempHumedad@i_832^0,w,c
  1504  000FE8  B0D8               	btfsc	status,0,c
  1505  000FEA  D002               	goto	l3117
  1506  000FEC  D7ED               	goto	l376
  1507  000FEE                     l371:
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;Sistema.c: 294: PORTBbits.RB6 = 0;
  1511  000FEE  9C81               	bcf	129,6,c	;volatile
  1512  000FF0                     l3117:
  1513                           
  1514                           ;Sistema.c: 297: sprintf(vec_value, "%d", var_T_Integral);
  1515  000FF0  0EEB               	movlw	low _vec_value
  1516  000FF2  6E0D               	movwf	sprintf@sp^0,c
  1517  000FF4  6A0E               	clrf	(sprintf@sp+1)^0,c
  1518  000FF6  0E3F               	movlw	low (STR_4+1)
  1519  000FF8  6E0F               	movwf	sprintf@f^0,c
  1520  000FFA  C03A  F010         	movff	_var_T_Integral,?_sprintf+3
  1521  000FFE  6A11               	clrf	(?_sprintf+4)^0,c
  1522  001000  EC6D  F006         	call	_sprintf	;wreg free
  1523                           
  1524                           ;Sistema.c: 298: LCD_String_xy(0, 0, vec_value);
  1525  001004  0E00               	movlw	0
  1526  001006  6E0A               	movwf	LCD_String_xy@pos^0,c
  1527  001008  0EEB               	movlw	low _vec_value
  1528  00100A  6E0B               	movwf	LCD_String_xy@msg^0,c
  1529  00100C  6A0C               	clrf	(LCD_String_xy@msg+1)^0,c
  1530  00100E  0E00               	movlw	0
  1531  001010  ECDA  F00A         	call	_LCD_String_xy
  1532                           
  1533                           ;Sistema.c: 299: sprintf(vec_value, ".%d", var_T_Decimal);
  1534  001014  0EEB               	movlw	low _vec_value
  1535  001016  6E0D               	movwf	sprintf@sp^0,c
  1536  001018  6A0E               	clrf	(sprintf@sp+1)^0,c
  1537  00101A  0E3E               	movlw	low STR_4
  1538  00101C  6E0F               	movwf	sprintf@f^0,c
  1539  00101E  C0DE  F010         	movff	_var_T_Decimal,?_sprintf+3
  1540  001022  6A11               	clrf	(?_sprintf+4)^0,c
  1541  001024  EC6D  F006         	call	_sprintf	;wreg free
  1542                           
  1543                           ;Sistema.c: 300: LCD_String(vec_value);
  1544  001028  0EEB               	movlw	low _vec_value
  1545  00102A  6E08               	movwf	LCD_String@msg^0,c
  1546  00102C  6A09               	clrf	(LCD_String@msg+1)^0,c
  1547  00102E  EC0C  F00A         	call	_LCD_String	;wreg free
  1548                           
  1549                           ;Sistema.c: 301: LCD_Char(0xdf);
  1550  001032  0EDF               	movlw	223
  1551  001034  EC72  F00B         	call	_LCD_Char
  1552                           
  1553                           ;Sistema.c: 302: LCD_Char('C');
  1554  001038  0E43               	movlw	67
  1555  00103A  EC72  F00B         	call	_LCD_Char
  1556                           
  1557                           ;Sistema.c: 304: LCD_String_xy(0, 6, "T");
  1558  00103E  0E06               	movlw	6
  1559  001040  6E0A               	movwf	LCD_String_xy@pos^0,c
  1560  001042  0E66               	movlw	low STR_5
  1561  001044  6E0B               	movwf	LCD_String_xy@msg^0,c
  1562  001046  500B               	movf	LCD_String_xy@msg^0,w,c
  1563  001048  A4D8               	btfss	status,2,c
  1564  00104A  0E08               	movlw	high __smallconst
  1565  00104C  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1566  00104E  0E00               	movlw	0
  1567  001050  ECDA  F00A         	call	_LCD_String_xy
  1568                           
  1569                           ;Sistema.c: 305: LCD_String_xy(0, 15, "H");
  1570  001054  0E0F               	movlw	15
  1571  001056  6E0A               	movwf	LCD_String_xy@pos^0,c
  1572  001058  0E64               	movlw	low STR_6
  1573  00105A  6E0B               	movwf	LCD_String_xy@msg^0,c
  1574  00105C  500B               	movf	LCD_String_xy@msg^0,w,c
  1575  00105E  A4D8               	btfss	status,2,c
  1576  001060  0E08               	movlw	high __smallconst
  1577  001062  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1578  001064  0E00               	movlw	0
  1579  001066  ECDA  F00A         	call	_LCD_String_xy
  1580  00106A  0012               	return		;funcret
  1581  00106C                     __end_of_printTempHumedad:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function _ON_LAMPARAS *****************
  1585 ;; Defined at:
  1586 ;;		line 309 in file "Sistema.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  i               1  109[BANK0 ] unsigned char 
  1591 ;;  i               2  107[BANK0 ] int 
  1592 ;;  i               2  105[BANK0 ] int 
  1593 ;;  i               2  103[BANK0 ] int 
  1594 ;;  i               2  101[BANK0 ] int 
  1595 ;;  buffer_TX      19   82[BANK0 ] unsigned char [19]
  1596 ;;  buffer_TX      27   55[BANK0 ] unsigned char [27]
  1597 ;;  buffer_TX      27   28[BANK0 ] unsigned char [27]
  1598 ;;  buffer_TX      28    0[BANK0 ] unsigned char [28]
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1608 ;;      Params:         0       0       0       0       0       0       0       0       0
  1609 ;;      Locals:         0     110       0       0       0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1611 ;;      Totals:         0     110       0       0       0       0       0       0       0
  1612 ;;Total ram usage:      110 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 4
  1615 ;; This function calls:
  1616 ;;		_LCD_Char
  1617 ;;		_LCD_Command
  1618 ;;		_LCD_Custom_Char
  1619 ;;		_MSdelay
  1620 ;;		_ON_LEDS
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text2
  1627  000ACC                     __ptext2:
  1628                           	callstack 0
  1629  000ACC                     _ON_LAMPARAS:
  1630                           	callstack 26
  1631                           
  1632                           ;Sistema.c: 310: LCD_Custom_Char(0, bombillaCar0);
  1633                           
  1634                           ;incstack = 0
  1635  000ACC  0EF7               	movlw	low _bombillaCar0
  1636  000ACE  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1637  000AD0  6A09               	clrf	(LCD_Custom_Char@msg+1)^0,c
  1638  000AD2  0E00               	movlw	0
  1639  000AD4  ECC0  F00A         	call	_LCD_Custom_Char
  1640                           
  1641                           ;Sistema.c: 311: LCD_Custom_Char(1, bombillaCar0);
  1642  000AD8  0EF7               	movlw	low _bombillaCar0
  1643  000ADA  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1644  000ADC  6A09               	clrf	(LCD_Custom_Char@msg+1)^0,c
  1645  000ADE  0E01               	movlw	1
  1646  000AE0  ECC0  F00A         	call	_LCD_Custom_Char
  1647                           
  1648                           ;Sistema.c: 312: LCD_Custom_Char(2, bombillaCar0);
  1649  000AE4  0EF7               	movlw	low _bombillaCar0
  1650  000AE6  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1651  000AE8  6A09               	clrf	(LCD_Custom_Char@msg+1)^0,c
  1652  000AEA  0E02               	movlw	2
  1653  000AEC  ECC0  F00A         	call	_LCD_Custom_Char
  1654                           
  1655                           ;Sistema.c: 313: LCD_Custom_Char(3, alert);
  1656  000AF0  0EBB               	movlw	low _alert
  1657  000AF2  6E08               	movwf	LCD_Custom_Char@msg^0,c
  1658  000AF4  0E01               	movlw	high _alert
  1659  000AF6  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1660  000AF8  0E03               	movlw	3
  1661  000AFA  ECC0  F00A         	call	_LCD_Custom_Char
  1662                           
  1663                           ;Sistema.c: 315: ON_LEDS(var_T_Integral);
  1664  000AFE  503A               	movf	_var_T_Integral^0,w,c
  1665  000B00  EC1E  F009         	call	_ON_LEDS
  1666                           
  1667                           ;Sistema.c: 316: if (var_T_Integral < 30 && acumBom == 0) {
  1668  000B04  0E1E               	movlw	30
  1669  000B06  603A               	cpfslt	_var_T_Integral^0,c
  1670  000B08  D033               	goto	l3157
  1671  000B0A  0100               	movlb	0	; () banked
  1672  000B0C  51DA               	movf	_acumBom& (0+255),w,b
  1673  000B0E  11DB               	iorwf	(_acumBom+1)& (0+255),w,b
  1674  000B10  A4D8               	btfss	status,2,c
  1675  000B12  D02E               	goto	l3157
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;Sistema.c: 317: PORTAbits.RA0 = 1;
  1679  000B14  8080               	bsf	128,0,c	;volatile
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;Sistema.c: 318: char buffer_TX[] = "Se encendio la ;bombilla 1\r";
  1683  000B16  EE21  F000         	lfsr	2,ON_LAMPARAS@F3215
  1684  000B1A  EE10  F060         	lfsr	1,ON_LAMPARAS@buffer_TX
  1685  000B1E  0E1B               	movlw	27
  1686  000B20                     u2351:
  1687  000B20  CFDB FFE3          	movff	plusw2,plusw1
  1688  000B24  06E8               	decf	wreg,f,c
  1689  000B26  E2FC               	bc	u2351
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;Sistema.c: 319: for (int i = 0; i < 27; i++) {
  1693  000B28  0E00               	movlw	0
  1694  000B2A  6FC6               	movwf	(ON_LAMPARAS@i+1)& (0+255),b
  1695  000B2C  0E00               	movlw	0
  1696  000B2E  6FC5               	movwf	ON_LAMPARAS@i& (0+255),b
  1697  000B30                     l388:
  1698                           
  1699                           ; BSR set to: 0
  1700  000B30  A2AC               	btfss	172,1,c	;volatile
  1701  000B32  D7FE               	goto	l388
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;Sistema.c: 322: };Sistema.c: 324: TXREG = buffer_TX[i];
  1705  000B34  51C5               	movf	ON_LAMPARAS@i& (0+255),w,b
  1706  000B36  0F60               	addlw	low ON_LAMPARAS@buffer_TX
  1707  000B38  6ED9               	movwf	fsr2l,c
  1708  000B3A  6ADA               	clrf	fsr2h,c
  1709  000B3C  50DF               	movf	indf2,w,c
  1710  000B3E  6EAD               	movwf	173,c	;volatile
  1711                           
  1712                           ; BSR set to: 0
  1713  000B40  4BC5               	infsnz	ON_LAMPARAS@i& (0+255),f,b
  1714  000B42  2BC6               	incf	(ON_LAMPARAS@i+1)& (0+255),f,b
  1715                           
  1716                           ; BSR set to: 0
  1717  000B44  BFC6               	btfsc	(ON_LAMPARAS@i+1)& (0+255),7,b
  1718  000B46  D7F4               	goto	l388
  1719  000B48  51C6               	movf	(ON_LAMPARAS@i+1)& (0+255),w,b
  1720  000B4A  E104               	bnz	u2370
  1721  000B4C  0E1B               	movlw	27
  1722  000B4E  5DC5               	subwf	ON_LAMPARAS@i& (0+255),w,b
  1723  000B50  A0D8               	btfss	status,0,c
  1724  000B52  D7EE               	goto	l388
  1725  000B54                     u2370:
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;Sistema.c: 325: };Sistema.c: 327: LCD_Command(0xc0 | (0));
  1729  000B54  0EC0               	movlw	192
  1730  000B56  EC80  F00B         	call	_LCD_Command
  1731                           
  1732                           ;Sistema.c: 328: LCD_Char(0);
  1733  000B5A  0E00               	movlw	0
  1734  000B5C  EC72  F00B         	call	_LCD_Char
  1735                           
  1736                           ;Sistema.c: 331: var_T_Integral = var_T_Integral + 6;
  1737  000B60  503A               	movf	_var_T_Integral^0,w,c
  1738  000B62  0F06               	addlw	6
  1739  000B64  6E3A               	movwf	_var_T_Integral^0,c
  1740                           
  1741                           ;Sistema.c: 332: acumBom = 6;
  1742  000B66  0E00               	movlw	0
  1743  000B68  0100               	movlb	0	; () banked
  1744  000B6A  6FDB               	movwf	(_acumBom+1)& (0+255),b
  1745  000B6C  0E06               	movlw	6
  1746  000B6E  D036               	goto	L1
  1747  000B70                     l3157:
  1748  000B70  0E1E               	movlw	30
  1749  000B72  603A               	cpfslt	_var_T_Integral^0,c
  1750  000B74  D035               	goto	l3183
  1751  000B76  0E06               	movlw	6
  1752  000B78  0100               	movlb	0	; () banked
  1753  000B7A  19DA               	xorwf	_acumBom& (0+255),w,b
  1754  000B7C  11DB               	iorwf	(_acumBom+1)& (0+255),w,b
  1755  000B7E  A4D8               	btfss	status,2,c
  1756  000B80  D02F               	goto	l3183
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;Sistema.c: 335: PORTAbits.RA1 = 1;
  1760  000B82  8280               	bsf	128,1,c	;volatile
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;Sistema.c: 337: char buffer_TX[] = "Se encendio la bombilla 2\r";
  1764  000B84  EE21  F037         	lfsr	2,ON_LAMPARAS@F3218
  1765  000B88  EE10  F07C         	lfsr	1,ON_LAMPARAS@buffer_TX_843
  1766  000B8C  0E1A               	movlw	26
  1767  000B8E                     u2401:
  1768  000B8E  CFDB FFE3          	movff	plusw2,plusw1
  1769  000B92  06E8               	decf	wreg,f,c
  1770  000B94  E2FC               	bc	u2401
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;Sistema.c: 338: for (int i = 0; i < 27; i++) {
  1774  000B96  0E00               	movlw	0
  1775  000B98  6FC8               	movwf	(ON_LAMPARAS@i_844+1)& (0+255),b
  1776  000B9A  0E00               	movlw	0
  1777  000B9C  6FC7               	movwf	ON_LAMPARAS@i_844& (0+255),b
  1778  000B9E                     l397:
  1779                           
  1780                           ; BSR set to: 0
  1781  000B9E  A2AC               	btfss	172,1,c	;volatile
  1782  000BA0  D7FE               	goto	l397
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;Sistema.c: 341: };Sistema.c: 343: TXREG = buffer_TX[i];
  1786  000BA2  51C7               	movf	ON_LAMPARAS@i_844& (0+255),w,b
  1787  000BA4  0F7C               	addlw	low ON_LAMPARAS@buffer_TX_843
  1788  000BA6  6ED9               	movwf	fsr2l,c
  1789  000BA8  6ADA               	clrf	fsr2h,c
  1790  000BAA  50DF               	movf	indf2,w,c
  1791  000BAC  6EAD               	movwf	173,c	;volatile
  1792                           
  1793                           ; BSR set to: 0
  1794  000BAE  4BC7               	infsnz	ON_LAMPARAS@i_844& (0+255),f,b
  1795  000BB0  2BC8               	incf	(ON_LAMPARAS@i_844+1)& (0+255),f,b
  1796                           
  1797                           ; BSR set to: 0
  1798  000BB2  BFC8               	btfsc	(ON_LAMPARAS@i_844+1)& (0+255),7,b
  1799  000BB4  D7F4               	goto	l397
  1800  000BB6  51C8               	movf	(ON_LAMPARAS@i_844+1)& (0+255),w,b
  1801  000BB8  E104               	bnz	u2420
  1802  000BBA  0E1B               	movlw	27
  1803  000BBC  5DC7               	subwf	ON_LAMPARAS@i_844& (0+255),w,b
  1804  000BBE  A0D8               	btfss	status,0,c
  1805  000BC0  D7EE               	goto	l397
  1806  000BC2                     u2420:
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;Sistema.c: 344: };Sistema.c: 346: LCD_Command(0xc0 | (3));
  1810  000BC2  0EC3               	movlw	195
  1811  000BC4  EC80  F00B         	call	_LCD_Command
  1812                           
  1813                           ;Sistema.c: 347: LCD_Char(1);
  1814  000BC8  0E01               	movlw	1
  1815  000BCA  EC72  F00B         	call	_LCD_Char
  1816                           
  1817                           ;Sistema.c: 349: var_T_Integral = var_T_Integral + 6;
  1818  000BCE  503A               	movf	_var_T_Integral^0,w,c
  1819  000BD0  0F06               	addlw	6
  1820  000BD2  6E3A               	movwf	_var_T_Integral^0,c
  1821                           
  1822                           ;Sistema.c: 350: acumBom = 12;
  1823  000BD4  0E00               	movlw	0
  1824  000BD6  0100               	movlb	0	; () banked
  1825  000BD8  6FDB               	movwf	(_acumBom+1)& (0+255),b
  1826  000BDA  0E0C               	movlw	12
  1827  000BDC                     L1:
  1828  000BDC  6FDA               	movwf	_acumBom& (0+255),b
  1829                           
  1830                           ;Sistema.c: 351: } else if (var_T_Integral < 30 && acumBom == 12) {
  1831  000BDE  D076               	goto	l3243
  1832  000BE0                     l3183:
  1833  000BE0  0E1E               	movlw	30
  1834  000BE2  603A               	cpfslt	_var_T_Integral^0,c
  1835  000BE4  D030               	goto	l3207
  1836  000BE6  0E0C               	movlw	12
  1837  000BE8  0100               	movlb	0	; () banked
  1838  000BEA  19DA               	xorwf	_acumBom& (0+255),w,b
  1839  000BEC  11DB               	iorwf	(_acumBom+1)& (0+255),w,b
  1840  000BEE  A4D8               	btfss	status,2,c
  1841  000BF0  D02A               	goto	l3207
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;Sistema.c: 352: PORTAbits.RA2 = 1;
  1845  000BF2  8480               	bsf	128,2,c	;volatile
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;Sistema.c: 354: char buffer_TX[] = "Se encendio la bombilla 3\r";
  1849  000BF4  EE21  F01C         	lfsr	2,ON_LAMPARAS@F3221
  1850  000BF8  EE10  F097         	lfsr	1,ON_LAMPARAS@buffer_TX_846
  1851  000BFC  0E1A               	movlw	26
  1852  000BFE                     u2451:
  1853  000BFE  CFDB FFE3          	movff	plusw2,plusw1
  1854  000C02  06E8               	decf	wreg,f,c
  1855  000C04  E2FC               	bc	u2451
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;Sistema.c: 355: for (int i = 0; i < 27; i++) {
  1859  000C06  0E00               	movlw	0
  1860  000C08  6FCA               	movwf	(ON_LAMPARAS@i_847+1)& (0+255),b
  1861  000C0A  0E00               	movlw	0
  1862  000C0C  6FC9               	movwf	ON_LAMPARAS@i_847& (0+255),b
  1863  000C0E                     l406:
  1864                           
  1865                           ; BSR set to: 0
  1866  000C0E  A2AC               	btfss	172,1,c	;volatile
  1867  000C10  D7FE               	goto	l406
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;Sistema.c: 358: };Sistema.c: 360: TXREG = buffer_TX[i];
  1871  000C12  51C9               	movf	ON_LAMPARAS@i_847& (0+255),w,b
  1872  000C14  0F97               	addlw	low ON_LAMPARAS@buffer_TX_846
  1873  000C16  6ED9               	movwf	fsr2l,c
  1874  000C18  6ADA               	clrf	fsr2h,c
  1875  000C1A  50DF               	movf	indf2,w,c
  1876  000C1C  6EAD               	movwf	173,c	;volatile
  1877                           
  1878                           ; BSR set to: 0
  1879  000C1E  4BC9               	infsnz	ON_LAMPARAS@i_847& (0+255),f,b
  1880  000C20  2BCA               	incf	(ON_LAMPARAS@i_847+1)& (0+255),f,b
  1881                           
  1882                           ; BSR set to: 0
  1883  000C22  BFCA               	btfsc	(ON_LAMPARAS@i_847+1)& (0+255),7,b
  1884  000C24  D7F4               	goto	l406
  1885  000C26  51CA               	movf	(ON_LAMPARAS@i_847+1)& (0+255),w,b
  1886  000C28  E104               	bnz	u2470
  1887  000C2A  0E1B               	movlw	27
  1888  000C2C  5DC9               	subwf	ON_LAMPARAS@i_847& (0+255),w,b
  1889  000C2E  A0D8               	btfss	status,0,c
  1890  000C30  D7EE               	goto	l406
  1891  000C32                     u2470:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;Sistema.c: 361: };Sistema.c: 364: LCD_Command(0xc0 | (6));
  1895  000C32  0EC6               	movlw	198
  1896  000C34  EC80  F00B         	call	_LCD_Command
  1897                           
  1898                           ;Sistema.c: 365: LCD_Char(2);
  1899  000C38  0E02               	movlw	2
  1900  000C3A  EC72  F00B         	call	_LCD_Char
  1901                           
  1902                           ;Sistema.c: 367: var_T_Integral = var_T_Integral + 6;
  1903  000C3E  503A               	movf	_var_T_Integral^0,w,c
  1904  000C40  0F06               	addlw	6
  1905  000C42  6E3A               	movwf	_var_T_Integral^0,c
  1906                           
  1907                           ;Sistema.c: 368: } else if (var_T_Integral > 35) {
  1908  000C44  D043               	goto	l3243
  1909  000C46                     l3207:
  1910  000C46  0E23               	movlw	35
  1911  000C48  643A               	cpfsgt	_var_T_Integral^0,c
  1912  000C4A  D03B               	goto	l3241
  1913                           
  1914                           ;Sistema.c: 369: banAgregar = 1;
  1915  000C4C  0E00               	movlw	0
  1916  000C4E  0100               	movlb	0	; () banked
  1917  000C50  6FDD               	movwf	(_banAgregar+1)& (0+255),b
  1918  000C52  0E01               	movlw	1
  1919  000C54  6FDC               	movwf	_banAgregar& (0+255),b
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;Sistema.c: 371: char buffer_TX[] = "Temperatura Alta \r";
  1923  000C56  EE21  F067         	lfsr	2,ON_LAMPARAS@F3224
  1924  000C5A  EE10  F0B2         	lfsr	1,ON_LAMPARAS@buffer_TX_849
  1925  000C5E  0E12               	movlw	18
  1926  000C60                     u2491:
  1927  000C60  CFDB FFE3          	movff	plusw2,plusw1
  1928  000C64  06E8               	decf	wreg,f,c
  1929  000C66  E2FC               	bc	u2491
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;Sistema.c: 372: for (int i = 0; i < 19; i++) {
  1933  000C68  0E00               	movlw	0
  1934  000C6A  6FCC               	movwf	(ON_LAMPARAS@i_850+1)& (0+255),b
  1935  000C6C  0E00               	movlw	0
  1936  000C6E  6FCB               	movwf	ON_LAMPARAS@i_850& (0+255),b
  1937  000C70                     l415:
  1938                           
  1939                           ; BSR set to: 0
  1940  000C70  A2AC               	btfss	172,1,c	;volatile
  1941  000C72  D7FE               	goto	l415
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;Sistema.c: 375: };Sistema.c: 377: TXREG = buffer_TX[i];
  1945  000C74  51CB               	movf	ON_LAMPARAS@i_850& (0+255),w,b
  1946  000C76  0FB2               	addlw	low ON_LAMPARAS@buffer_TX_849
  1947  000C78  6ED9               	movwf	fsr2l,c
  1948  000C7A  6ADA               	clrf	fsr2h,c
  1949  000C7C  50DF               	movf	indf2,w,c
  1950  000C7E  6EAD               	movwf	173,c	;volatile
  1951                           
  1952                           ; BSR set to: 0
  1953  000C80  4BCB               	infsnz	ON_LAMPARAS@i_850& (0+255),f,b
  1954  000C82  2BCC               	incf	(ON_LAMPARAS@i_850+1)& (0+255),f,b
  1955                           
  1956                           ; BSR set to: 0
  1957  000C84  BFCC               	btfsc	(ON_LAMPARAS@i_850+1)& (0+255),7,b
  1958  000C86  D7F4               	goto	l415
  1959  000C88  51CC               	movf	(ON_LAMPARAS@i_850+1)& (0+255),w,b
  1960  000C8A  E104               	bnz	u2510
  1961  000C8C  0E13               	movlw	19
  1962  000C8E  5DCB               	subwf	ON_LAMPARAS@i_850& (0+255),w,b
  1963  000C90  A0D8               	btfss	status,0,c
  1964  000C92  D7EE               	goto	l415
  1965  000C94                     u2510:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;Sistema.c: 378: };Sistema.c: 380: for (char i = 0; i <= 5; i++) {
  1969  000C94  0E00               	movlw	0
  1970  000C96  6FCD               	movwf	ON_LAMPARAS@i_851& (0+255),b
  1971  000C98                     l3231:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;Sistema.c: 381: LCD_Command(0xc0 | (i*3));
  1975  000C98  51CD               	movf	ON_LAMPARAS@i_851& (0+255),w,b
  1976  000C9A  0D03               	mullw	3
  1977  000C9C  50F3               	movf	243,w,c
  1978  000C9E  09C0               	iorlw	192
  1979  000CA0  EC80  F00B         	call	_LCD_Command
  1980                           
  1981                           ;Sistema.c: 382: LCD_Char(6);
  1982  000CA4  0E06               	movlw	6
  1983  000CA6  EC72  F00B         	call	_LCD_Char
  1984  000CAA  0100               	movlb	0	; () banked
  1985  000CAC  2BCD               	incf	ON_LAMPARAS@i_851& (0+255),f,b
  1986                           
  1987                           ; BSR set to: 0
  1988  000CAE  0E05               	movlw	5
  1989  000CB0  65CD               	cpfsgt	ON_LAMPARAS@i_851& (0+255),b
  1990  000CB2  D7F2               	goto	l3231
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;Sistema.c: 384: };Sistema.c: 385: MSdelay(100);
  1994  000CB4  0E00               	movlw	0
  1995  000CB6  6E02               	movwf	(MSdelay@val+1)^0,c
  1996  000CB8  0E64               	movlw	100
  1997  000CBA  6E01               	movwf	MSdelay@val^0,c
  1998  000CBC  ECF4  F00A         	call	_MSdelay	;wreg free
  1999                           
  2000                           ;Sistema.c: 386: } else
  2001  000CC0  D005               	goto	l3243
  2002  000CC2                     l3241:
  2003                           
  2004                           ;Sistema.c: 387: banAgregar = 1;
  2005  000CC2  0E00               	movlw	0
  2006  000CC4  0100               	movlb	0	; () banked
  2007  000CC6  6FDD               	movwf	(_banAgregar+1)& (0+255),b
  2008  000CC8  0E01               	movlw	1
  2009  000CCA  6FDC               	movwf	_banAgregar& (0+255),b
  2010  000CCC                     l3243:
  2011                           
  2012                           ;Sistema.c: 388: MSdelay(1000);
  2013  000CCC  0E03               	movlw	3
  2014  000CCE  6E02               	movwf	(MSdelay@val+1)^0,c
  2015  000CD0  0EE8               	movlw	232
  2016  000CD2  6E01               	movwf	MSdelay@val^0,c
  2017  000CD4  ECF4  F00A         	call	_MSdelay	;wreg free
  2018  000CD8  0012               	return		;funcret
  2019  000CDA                     __end_of_ON_LAMPARAS:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _ON_LEDS *****************
  2023 ;; Defined at:
  2024 ;;		line 214 in file "Sistema.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  T_Integral      1    wreg     unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  T_Integral      1   30[COMRAM] unsigned char 
  2029 ;;  i               2   33[COMRAM] int 
  2030 ;;  buffer_TX      19   11[COMRAM] unsigned char [19]
  2031 ;;  valor           2   31[COMRAM] int 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2041 ;;      Params:         0       0       0       0       0       0       0       0       0
  2042 ;;      Locals:        24       0       0       0       0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2044 ;;      Totals:        24       0       0       0       0       0       0       0       0
  2045 ;;Total ram usage:       24 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 3
  2048 ;; This function calls:
  2049 ;;		_LCD_Char
  2050 ;;		_LCD_Command
  2051 ;;		_LCD_Custom_Char
  2052 ;; This function is called by:
  2053 ;;		_ON_LAMPARAS
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text3
  2058  00123C                     __ptext3:
  2059                           	callstack 0
  2060  00123C                     _ON_LEDS:
  2061                           	callstack 26
  2062                           
  2063                           ;incstack = 0
  2064                           ;ON_LEDS@T_Integral stored from wreg
  2065  00123C  6E1F               	movwf	ON_LEDS@T_Integral^0,c
  2066                           
  2067                           ;Sistema.c: 215: LCD_Custom_Char(5, good);
  2068  00123E  0EC3               	movlw	low _good
  2069  001240  6E08               	movwf	LCD_Custom_Char@msg^0,c
  2070  001242  0E01               	movlw	high _good
  2071  001244  6E09               	movwf	(LCD_Custom_Char@msg+1)^0,c
  2072  001246  0E05               	movlw	5
  2073  001248  ECC0  F00A         	call	_LCD_Custom_Char
  2074                           
  2075                           ;Sistema.c: 217: int valor = T_Integral;
  2076  00124C  C01F  F020         	movff	ON_LEDS@T_Integral,ON_LEDS@valor
  2077  001250  6A21               	clrf	(ON_LEDS@valor+1)^0,c
  2078                           
  2079                           ;Sistema.c: 218: if (valor < 30) {
  2080  001252  BE21               	btfsc	(ON_LEDS@valor+1)^0,7,c
  2081  001254  D006               	goto	u2020
  2082  001256  5021               	movf	(ON_LEDS@valor+1)^0,w,c
  2083  001258  E108               	bnz	l2895
  2084  00125A  0E1E               	movlw	30
  2085  00125C  5C20               	subwf	ON_LEDS@valor^0,w,c
  2086  00125E  B0D8               	btfsc	status,0,c
  2087  001260  D004               	goto	l2895
  2088  001262                     u2020:
  2089                           
  2090                           ;Sistema.c: 219: PORTAbits.RA4 = 1;
  2091  001262  8880               	bsf	128,4,c	;volatile
  2092                           
  2093                           ;Sistema.c: 220: PORTAbits.RA3 = 0;
  2094  001264  9680               	bcf	128,3,c	;volatile
  2095                           
  2096                           ;Sistema.c: 221: PORTAbits.RA5 = 0;
  2097  001266  9A80               	bcf	128,5,c	;volatile
  2098                           
  2099                           ;Sistema.c: 222: } else if (valor >= 30 && valor <= 35) {
  2100  001268  0012               	return	
  2101  00126A                     l2895:
  2102  00126A  BE21               	btfsc	(ON_LEDS@valor+1)^0,7,c
  2103  00126C  D037               	goto	l340
  2104  00126E  5021               	movf	(ON_LEDS@valor+1)^0,w,c
  2105  001270  E104               	bnz	u2030
  2106  001272  0E1E               	movlw	30
  2107  001274  5C20               	subwf	ON_LEDS@valor^0,w,c
  2108  001276  A0D8               	btfss	status,0,c
  2109  001278  D031               	goto	l340
  2110  00127A                     u2030:
  2111  00127A  BE21               	btfsc	(ON_LEDS@valor+1)^0,7,c
  2112  00127C  D006               	goto	u2040
  2113  00127E  5021               	movf	(ON_LEDS@valor+1)^0,w,c
  2114  001280  E12D               	bnz	l340
  2115  001282  0E24               	movlw	36
  2116  001284  5C20               	subwf	ON_LEDS@valor^0,w,c
  2117  001286  B0D8               	btfsc	status,0,c
  2118  001288  D029               	goto	l340
  2119  00128A                     u2040:
  2120                           
  2121                           ;Sistema.c: 223: PORTAbits.RA4 = 0;
  2122  00128A  9880               	bcf	128,4,c	;volatile
  2123                           
  2124                           ;Sistema.c: 224: PORTAbits.RA3 = 1;
  2125  00128C  8680               	bsf	128,3,c	;volatile
  2126                           
  2127                           ;Sistema.c: 225: PORTAbits.RA5 = 0;
  2128  00128E  9A80               	bcf	128,5,c	;volatile
  2129                           
  2130                           ;Sistema.c: 227: LCD_Command(0xc0 | (15));
  2131  001290  0ECF               	movlw	207
  2132  001292  EC80  F00B         	call	_LCD_Command
  2133                           
  2134                           ;Sistema.c: 228: LCD_Char(5);
  2135  001296  0E05               	movlw	5
  2136  001298  EC72  F00B         	call	_LCD_Char
  2137                           
  2138                           ;Sistema.c: 230: char buffer_TX[] = "Temperatura Ideal\r";
  2139  00129C  EE21  F07A         	lfsr	2,ON_LEDS@F3201
  2140  0012A0  EE10  F00C         	lfsr	1,ON_LEDS@buffer_TX
  2141  0012A4  0E12               	movlw	18
  2142  0012A6                     u2051:
  2143  0012A6  CFDB FFE3          	movff	plusw2,plusw1
  2144  0012AA  06E8               	decf	wreg,f,c
  2145  0012AC  E2FC               	bc	u2051
  2146                           
  2147                           ;Sistema.c: 231: for (int i = 0; i < 19; i++) {
  2148  0012AE  0E00               	movlw	0
  2149  0012B0  6E23               	movwf	(ON_LEDS@i+1)^0,c
  2150  0012B2  0E00               	movlw	0
  2151  0012B4  6E22               	movwf	ON_LEDS@i^0,c
  2152  0012B6                     l345:
  2153  0012B6  A2AC               	btfss	172,1,c	;volatile
  2154  0012B8  D7FE               	goto	l345
  2155                           
  2156                           ;Sistema.c: 234: };Sistema.c: 236: TXREG = buffer_TX[i];
  2157  0012BA  5022               	movf	ON_LEDS@i^0,w,c
  2158  0012BC  0F0C               	addlw	low ON_LEDS@buffer_TX
  2159  0012BE  6ED9               	movwf	fsr2l,c
  2160  0012C0  6ADA               	clrf	fsr2h,c
  2161  0012C2  50DF               	movf	indf2,w,c
  2162  0012C4  6EAD               	movwf	173,c	;volatile
  2163  0012C6  4A22               	infsnz	ON_LEDS@i^0,f,c
  2164  0012C8  2A23               	incf	(ON_LEDS@i+1)^0,f,c
  2165  0012CA  BE23               	btfsc	(ON_LEDS@i+1)^0,7,c
  2166  0012CC  D7F4               	goto	l345
  2167  0012CE  5023               	movf	(ON_LEDS@i+1)^0,w,c
  2168  0012D0  E108               	bnz	l349
  2169  0012D2  0E13               	movlw	19
  2170  0012D4  5C22               	subwf	ON_LEDS@i^0,w,c
  2171  0012D6  B0D8               	btfsc	status,0,c
  2172  0012D8  0012               	return	
  2173  0012DA  D7ED               	goto	l345
  2174  0012DC                     l340:
  2175                           
  2176                           ;Sistema.c: 239: else{;Sistema.c: 240: PORTAbits.RA4 = 0;
  2177  0012DC  9880               	bcf	128,4,c	;volatile
  2178                           
  2179                           ;Sistema.c: 241: PORTAbits.RA3 = 0;
  2180  0012DE  9680               	bcf	128,3,c	;volatile
  2181                           
  2182                           ;Sistema.c: 242: PORTAbits.RA5 = 1;
  2183  0012E0  8A80               	bsf	128,5,c	;volatile
  2184  0012E2                     l349:
  2185  0012E2  0012               	return		;funcret
  2186  0012E4                     __end_of_ON_LEDS:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _LCD_Custom_Char *****************
  2190 ;; Defined at:
  2191 ;;		line 33 in file "LCD_16x2.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  loc             1    wreg     unsigned char 
  2194 ;;  msg             2    7[COMRAM] PTR unsigned char 
  2195 ;;		 -> alert(8), bombillaCar0(8), good(8), 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  loc             1    9[COMRAM] unsigned char 
  2198 ;;  i               1   10[COMRAM] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2208 ;;      Params:         2       0       0       0       0       0       0       0       0
  2209 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2211 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2212 ;;Total ram usage:        4 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 2
  2215 ;; This function calls:
  2216 ;;		_LCD_Char
  2217 ;;		_LCD_Command
  2218 ;; This function is called by:
  2219 ;;		_ON_LEDS
  2220 ;;		_ON_LAMPARAS
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text4
  2225  001580                     __ptext4:
  2226                           	callstack 0
  2227  001580                     _LCD_Custom_Char:
  2228                           	callstack 26
  2229                           
  2230                           ;incstack = 0
  2231                           ;LCD_Custom_Char@loc stored from wreg
  2232  001580  6E0A               	movwf	LCD_Custom_Char@loc^0,c
  2233                           
  2234                           ;LCD_16x2.c: 35: unsigned char i;;LCD_16x2.c: 36: if(loc<8)
  2235  001582  0E08               	movlw	8
  2236  001584  600A               	cpfslt	LCD_Custom_Char@loc^0,c
  2237  001586  0012               	return	
  2238                           
  2239                           ;LCD_16x2.c: 37: {;LCD_16x2.c: 38: LCD_Command(0x40+(loc*8));
  2240  001588  500A               	movf	LCD_Custom_Char@loc^0,w,c
  2241  00158A  0D08               	mullw	8
  2242  00158C  50F3               	movf	243,w,c
  2243  00158E  0F40               	addlw	64
  2244  001590  EC80  F00B         	call	_LCD_Command
  2245                           
  2246                           ;LCD_16x2.c: 39: for(i=0;i<8;i++)
  2247  001594  0E00               	movlw	0
  2248  001596  6E0B               	movwf	LCD_Custom_Char@i^0,c
  2249  001598                     l2775:
  2250                           
  2251                           ;LCD_16x2.c: 40: LCD_Char(msg[i]);
  2252  001598  500B               	movf	LCD_Custom_Char@i^0,w,c
  2253  00159A  2408               	addwf	LCD_Custom_Char@msg^0,w,c
  2254  00159C  6ED9               	movwf	fsr2l,c
  2255  00159E  0E00               	movlw	0
  2256  0015A0  2009               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
  2257  0015A2  6EDA               	movwf	fsr2h,c
  2258  0015A4  50DF               	movf	indf2,w,c
  2259  0015A6  EC72  F00B         	call	_LCD_Char
  2260  0015AA  2A0B               	incf	LCD_Custom_Char@i^0,f,c
  2261  0015AC  0E07               	movlw	7
  2262  0015AE  640B               	cpfsgt	LCD_Custom_Char@i^0,c
  2263  0015B0  D7F3               	goto	l2775
  2264  0015B2  0012               	return	
  2265  0015B4                     __end_of_LCD_Custom_Char:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _OFF_LEDS *****************
  2269 ;; Defined at:
  2270 ;;		line 199 in file "Sistema.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  i               2   15[COMRAM] int 
  2275 ;;  buffer_TX      15    0[COMRAM] unsigned char [15]
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2280 ;; Tracked objects:
  2281 ;;		On entry : 3F/0
  2282 ;;		On exit  : 3F/0
  2283 ;;		Unchanged: 3F/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2285 ;;      Params:         0       0       0       0       0       0       0       0       0
  2286 ;;      Locals:        17       0       0       0       0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2288 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2289 ;;Total ram usage:       17 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text5
  2299  00146A                     __ptext5:
  2300                           	callstack 0
  2301  00146A                     _OFF_LEDS:
  2302                           	callstack 30
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;Sistema.c: 200: PORTAbits.RA4 = 0;
  2306                           
  2307                           ;incstack = 0
  2308  00146A  9880               	bcf	128,4,c	;volatile
  2309                           
  2310                           ;Sistema.c: 201: PORTAbits.RA3 = 0;
  2311  00146C  9680               	bcf	128,3,c	;volatile
  2312                           
  2313                           ;Sistema.c: 202: PORTAbits.RA5 = 0;
  2314  00146E  9A80               	bcf	128,5,c	;volatile
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;Sistema.c: 204: char buffer_TX[] = "Apagando LEDS\r";
  2318  001470  EE21  F08D         	lfsr	2,OFF_LEDS@F3196
  2319  001474  EE10  F001         	lfsr	1,OFF_LEDS@buffer_TX
  2320  001478  0E0E               	movlw	14
  2321  00147A                     u2581:
  2322  00147A  CFDB FFE3          	movff	plusw2,plusw1
  2323  00147E  06E8               	decf	wreg,f,c
  2324  001480  E2FC               	bc	u2581
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;Sistema.c: 205: for (int i = 0; i < 15; i++) {
  2328  001482  0E00               	movlw	0
  2329  001484  6E11               	movwf	(OFF_LEDS@i+1)^0,c
  2330  001486  0E00               	movlw	0
  2331  001488  6E10               	movwf	OFF_LEDS@i^0,c
  2332  00148A                     l332:
  2333                           
  2334                           ; BSR set to: 0
  2335  00148A  A2AC               	btfss	172,1,c	;volatile
  2336  00148C  D7FE               	goto	l332
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;Sistema.c: 208: };Sistema.c: 210: TXREG = buffer_TX[i];
  2340  00148E  5010               	movf	OFF_LEDS@i^0,w,c
  2341  001490  0F01               	addlw	low OFF_LEDS@buffer_TX
  2342  001492  6ED9               	movwf	fsr2l,c
  2343  001494  6ADA               	clrf	fsr2h,c
  2344  001496  50DF               	movf	indf2,w,c
  2345  001498  6EAD               	movwf	173,c	;volatile
  2346                           
  2347                           ; BSR set to: 0
  2348  00149A  4A10               	infsnz	OFF_LEDS@i^0,f,c
  2349  00149C  2A11               	incf	(OFF_LEDS@i+1)^0,f,c
  2350                           
  2351                           ; BSR set to: 0
  2352  00149E  BE11               	btfsc	(OFF_LEDS@i+1)^0,7,c
  2353  0014A0  D7F4               	goto	l332
  2354  0014A2  5011               	movf	(OFF_LEDS@i+1)^0,w,c
  2355  0014A4  E105               	bnz	u2600
  2356  0014A6  0E0F               	movlw	15
  2357  0014A8  5C10               	subwf	OFF_LEDS@i^0,w,c
  2358  0014AA  B0D8               	btfsc	status,0,c
  2359  0014AC  0012               	return	
  2360  0014AE  D7ED               	goto	l332
  2361  0014B0                     u2600:
  2362                           
  2363                           ; BSR set to: 0
  2364  0014B0  0012               	return		;funcret
  2365  0014B2                     __end_of_OFF_LEDS:
  2366                           	callstack 0
  2367                           
  2368 ;; *************** function _OFF_LAMPARAS *****************
  2369 ;; Defined at:
  2370 ;;		line 246 in file "Sistema.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  i               2   21[COMRAM] int 
  2375 ;;  buffer_TX      21    0[COMRAM] unsigned char [21]
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2380 ;; Tracked objects:
  2381 ;;		On entry : 3F/0
  2382 ;;		On exit  : 3F/0
  2383 ;;		Unchanged: 3F/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2385 ;;      Params:         0       0       0       0       0       0       0       0       0
  2386 ;;      Locals:        23       0       0       0       0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2388 ;;      Totals:        23       0       0       0       0       0       0       0       0
  2389 ;;Total ram usage:       23 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text6
  2399  0014B2                     __ptext6:
  2400                           	callstack 0
  2401  0014B2                     _OFF_LAMPARAS:
  2402                           	callstack 30
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;Sistema.c: 247: PORTAbits.RA0 = 0;
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;incstack = 0
  2409  0014B2  9080               	bcf	128,0,c	;volatile
  2410                           
  2411                           ;Sistema.c: 248: PORTAbits.RA1 = 0;
  2412  0014B4  9280               	bcf	128,1,c	;volatile
  2413                           
  2414                           ;Sistema.c: 249: PORTAbits.RA2 = 0;
  2415  0014B6  9480               	bcf	128,2,c	;volatile
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;Sistema.c: 251: char buffer_TX[] = "Bombillas Apagadas \r";
  2419  0014B8  EE21  F052         	lfsr	2,OFF_LAMPARAS@F3204
  2420  0014BC  EE10  F001         	lfsr	1,OFF_LAMPARAS@buffer_TX
  2421  0014C0  0E14               	movlw	20
  2422  0014C2                     u2551:
  2423  0014C2  CFDB FFE3          	movff	plusw2,plusw1
  2424  0014C6  06E8               	decf	wreg,f,c
  2425  0014C8  E2FC               	bc	u2551
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;Sistema.c: 252: for (int i = 0; i < 20; i++) {
  2429  0014CA  0E00               	movlw	0
  2430  0014CC  6E17               	movwf	(OFF_LAMPARAS@i+1)^0,c
  2431  0014CE  0E00               	movlw	0
  2432  0014D0  6E16               	movwf	OFF_LAMPARAS@i^0,c
  2433  0014D2                     l356:
  2434                           
  2435                           ; BSR set to: 0
  2436  0014D2  A2AC               	btfss	172,1,c	;volatile
  2437  0014D4  D7FE               	goto	l356
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;Sistema.c: 255: };Sistema.c: 257: TXREG = buffer_TX[i];
  2441  0014D6  5016               	movf	OFF_LAMPARAS@i^0,w,c
  2442  0014D8  0F01               	addlw	low OFF_LAMPARAS@buffer_TX
  2443  0014DA  6ED9               	movwf	fsr2l,c
  2444  0014DC  6ADA               	clrf	fsr2h,c
  2445  0014DE  50DF               	movf	indf2,w,c
  2446  0014E0  6EAD               	movwf	173,c	;volatile
  2447                           
  2448                           ; BSR set to: 0
  2449  0014E2  4A16               	infsnz	OFF_LAMPARAS@i^0,f,c
  2450  0014E4  2A17               	incf	(OFF_LAMPARAS@i+1)^0,f,c
  2451                           
  2452                           ; BSR set to: 0
  2453  0014E6  BE17               	btfsc	(OFF_LAMPARAS@i+1)^0,7,c
  2454  0014E8  D7F4               	goto	l356
  2455  0014EA  5017               	movf	(OFF_LAMPARAS@i+1)^0,w,c
  2456  0014EC  E105               	bnz	u2570
  2457  0014EE  0E14               	movlw	20
  2458  0014F0  5C16               	subwf	OFF_LAMPARAS@i^0,w,c
  2459  0014F2  B0D8               	btfsc	status,0,c
  2460  0014F4  0012               	return	
  2461  0014F6  D7ED               	goto	l356
  2462  0014F8                     u2570:
  2463                           
  2464                           ; BSR set to: 0
  2465  0014F8  0012               	return		;funcret
  2466  0014FA                     __end_of_OFF_LAMPARAS:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function _Mostrar_Fecha *****************
  2470 ;; Defined at:
  2471 ;;		line 415 in file "Sistema.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 3F/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2488 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 4
  2492 ;; This function calls:
  2493 ;;		_I2C_Stop
  2494 ;;		_LCD_Init
  2495 ;;		_LCD_String
  2496 ;;		_LCD_String_xy
  2497 ;;		_MSdelay
  2498 ;;		_RTC_Read_Calendar
  2499 ;;		_RTC_Read_Clock
  2500 ;;		_sprintf
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text7
  2507  00086A                     __ptext7:
  2508                           	callstack 0
  2509  00086A                     _Mostrar_Fecha:
  2510                           	callstack 26
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;Sistema.c: 416: LCD_Init();
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;incstack = 0
  2517  00086A  EC27  F00B         	call	_LCD_Init	;wreg free
  2518                           
  2519                           ;Sistema.c: 417: RTC_Read_Clock(0);
  2520  00086E  0E00               	movlw	0
  2521  000870  EC7D  F00A         	call	_RTC_Read_Clock
  2522                           
  2523                           ;Sistema.c: 418: I2C_Stop();
  2524  000874  ECC8  F00B         	call	_I2C_Stop	;wreg free
  2525                           
  2526                           ;Sistema.c: 419: MSdelay(1000);
  2527  000878  0E03               	movlw	3
  2528  00087A  6E02               	movwf	(MSdelay@val+1)^0,c
  2529  00087C  0EE8               	movlw	232
  2530  00087E  6E01               	movwf	MSdelay@val^0,c
  2531  000880  ECF4  F00A         	call	_MSdelay	;wreg free
  2532                           
  2533                           ;Sistema.c: 420: if (hour & (1 << Clock_type)) {
  2534  000884  AC38               	btfss	_hour^0,6,c
  2535  000886  D055               	goto	l3273
  2536                           
  2537                           ;Sistema.c: 422: if (hour & (1 << AM_PM)) {
  2538  000888  AA38               	btfss	_hour^0,5,c
  2539  00088A  D00C               	goto	l3257
  2540                           
  2541                           ;Sistema.c: 423: LCD_String_xy(1, 14, "PM");
  2542  00088C  0E0E               	movlw	14
  2543  00088E  6E0A               	movwf	LCD_String_xy@pos^0,c
  2544  000890  0E61               	movlw	low STR_7
  2545  000892  6E0B               	movwf	LCD_String_xy@msg^0,c
  2546  000894  500B               	movf	LCD_String_xy@msg^0,w,c
  2547  000896  A4D8               	btfss	status,2,c
  2548  000898  0E08               	movlw	high __smallconst
  2549  00089A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2550  00089C  0E01               	movlw	1
  2551  00089E  ECDA  F00A         	call	_LCD_String_xy
  2552                           
  2553                           ;Sistema.c: 424: } else {
  2554  0008A2  D00B               	goto	l3259
  2555  0008A4                     l3257:
  2556                           
  2557                           ;Sistema.c: 425: LCD_String_xy(1, 14, "AM");
  2558  0008A4  0E0E               	movlw	14
  2559  0008A6  6E0A               	movwf	LCD_String_xy@pos^0,c
  2560  0008A8  0E5E               	movlw	low STR_8
  2561  0008AA  6E0B               	movwf	LCD_String_xy@msg^0,c
  2562  0008AC  500B               	movf	LCD_String_xy@msg^0,w,c
  2563  0008AE  A4D8               	btfss	status,2,c
  2564  0008B0  0E08               	movlw	high __smallconst
  2565  0008B2  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2566  0008B4  0E01               	movlw	1
  2567  0008B6  ECDA  F00A         	call	_LCD_String_xy
  2568  0008BA                     l3259:
  2569                           
  2570                           ;Sistema.c: 426: };Sistema.c: 428: hour = hour & (0x1f);
  2571  0008BA  0E1F               	movlw	31
  2572  0008BC  1438               	andwf	_hour^0,w,c
  2573  0008BE  6E38               	movwf	_hour^0,c
  2574  0008C0  6A39               	clrf	(_hour+1)^0,c
  2575                           
  2576                           ;Sistema.c: 429: sprintf(secs, "%x ", sec);
  2577  0008C2  0EE1               	movlw	low _secs
  2578  0008C4  6E0D               	movwf	sprintf@sp^0,c
  2579  0008C6  6A0E               	clrf	(sprintf@sp+1)^0,c
  2580  0008C8  0E3A               	movlw	low STR_9
  2581  0008CA  6E0F               	movwf	sprintf@f^0,c
  2582  0008CC  C0D8  F010         	movff	_sec,?_sprintf+3
  2583  0008D0  C0D9  F011         	movff	_sec+1,?_sprintf+4
  2584  0008D4  EC6D  F006         	call	_sprintf	;wreg free
  2585                           
  2586                           ;Sistema.c: 430: sprintf(mins, "%x:", min);
  2587  0008D8  0EF3               	movlw	low _mins
  2588  0008DA  6E0D               	movwf	sprintf@sp^0,c
  2589  0008DC  0E01               	movlw	high _mins
  2590  0008DE  6E0E               	movwf	(sprintf@sp+1)^0,c
  2591  0008E0  0E31               	movlw	low (STR_11+4)
  2592  0008E2  6E0F               	movwf	sprintf@f^0,c
  2593  0008E4  C0D6  F010         	movff	_min,?_sprintf+3
  2594  0008E8  C0D7  F011         	movff	_min+1,?_sprintf+4
  2595  0008EC  EC6D  F006         	call	_sprintf	;wreg free
  2596                           
  2597                           ;Sistema.c: 431: sprintf(hours, "Tim:%x:", hour);
  2598  0008F0  0EE9               	movlw	low _hours
  2599  0008F2  6E0D               	movwf	sprintf@sp^0,c
  2600  0008F4  0E01               	movlw	high _hours
  2601  0008F6  6E0E               	movwf	(sprintf@sp+1)^0,c
  2602  0008F8  0E2D               	movlw	low STR_11
  2603  0008FA  6E0F               	movwf	sprintf@f^0,c
  2604  0008FC  C038  F010         	movff	_hour,?_sprintf+3
  2605  000900  C039  F011         	movff	_hour+1,?_sprintf+4
  2606  000904  EC6D  F006         	call	_sprintf	;wreg free
  2607                           
  2608                           ;Sistema.c: 432: LCD_String_xy(0, 0, hours);
  2609  000908  0E00               	movlw	0
  2610  00090A  6E0A               	movwf	LCD_String_xy@pos^0,c
  2611  00090C  0EE9               	movlw	low _hours
  2612  00090E  6E0B               	movwf	LCD_String_xy@msg^0,c
  2613  000910  0E01               	movlw	high _hours
  2614  000912  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2615  000914  0E00               	movlw	0
  2616  000916  ECDA  F00A         	call	_LCD_String_xy
  2617  00091A                     l3269:
  2618                           
  2619                           ;Sistema.c: 433: LCD_String(mins);
  2620  00091A  0EF3               	movlw	low _mins
  2621  00091C  6E08               	movwf	LCD_String@msg^0,c
  2622  00091E  0E01               	movlw	high _mins
  2623  000920  6E09               	movwf	(LCD_String@msg+1)^0,c
  2624  000922  EC0C  F00A         	call	_LCD_String	;wreg free
  2625                           
  2626                           ;Sistema.c: 434: LCD_String(secs);
  2627  000926  0EE1               	movlw	low _secs
  2628  000928  6E08               	movwf	LCD_String@msg^0,c
  2629  00092A  6A09               	clrf	(LCD_String@msg+1)^0,c
  2630  00092C  EC0C  F00A         	call	_LCD_String	;wreg free
  2631                           
  2632                           ;Sistema.c: 435: } else {
  2633  000930  D031               	goto	l3287
  2634  000932                     l3273:
  2635                           
  2636                           ;Sistema.c: 437: hour = hour & (0x3f);
  2637  000932  0E3F               	movlw	63
  2638  000934  1438               	andwf	_hour^0,w,c
  2639  000936  6E38               	movwf	_hour^0,c
  2640  000938  6A39               	clrf	(_hour+1)^0,c
  2641                           
  2642                           ;Sistema.c: 438: sprintf(secs, "%x ", sec);
  2643  00093A  0EE1               	movlw	low _secs
  2644  00093C  6E0D               	movwf	sprintf@sp^0,c
  2645  00093E  6A0E               	clrf	(sprintf@sp+1)^0,c
  2646  000940  0E3A               	movlw	low STR_9
  2647  000942  6E0F               	movwf	sprintf@f^0,c
  2648  000944  C0D8  F010         	movff	_sec,?_sprintf+3
  2649  000948  C0D9  F011         	movff	_sec+1,?_sprintf+4
  2650  00094C  EC6D  F006         	call	_sprintf	;wreg free
  2651                           
  2652                           ;Sistema.c: 439: sprintf(mins, "%x:", min);
  2653  000950  0EF3               	movlw	low _mins
  2654  000952  6E0D               	movwf	sprintf@sp^0,c
  2655  000954  0E01               	movlw	high _mins
  2656  000956  6E0E               	movwf	(sprintf@sp+1)^0,c
  2657  000958  0E31               	movlw	low (STR_11+4)
  2658  00095A  6E0F               	movwf	sprintf@f^0,c
  2659  00095C  C0D6  F010         	movff	_min,?_sprintf+3
  2660  000960  C0D7  F011         	movff	_min+1,?_sprintf+4
  2661  000964  EC6D  F006         	call	_sprintf	;wreg free
  2662                           
  2663                           ;Sistema.c: 440: sprintf(hours, "Tim:%x:", hour);
  2664  000968  0EE9               	movlw	low _hours
  2665  00096A  6E0D               	movwf	sprintf@sp^0,c
  2666  00096C  0E01               	movlw	high _hours
  2667  00096E  6E0E               	movwf	(sprintf@sp+1)^0,c
  2668  000970  0E2D               	movlw	low STR_11
  2669  000972  6E0F               	movwf	sprintf@f^0,c
  2670  000974  C038  F010         	movff	_hour,?_sprintf+3
  2671  000978  C039  F011         	movff	_hour+1,?_sprintf+4
  2672  00097C  EC6D  F006         	call	_sprintf	;wreg free
  2673                           
  2674                           ;Sistema.c: 441: LCD_String_xy(0, 0, hours);
  2675  000980  0E00               	movlw	0
  2676  000982  6E0A               	movwf	LCD_String_xy@pos^0,c
  2677  000984  0EE9               	movlw	low _hours
  2678  000986  6E0B               	movwf	LCD_String_xy@msg^0,c
  2679  000988  0E01               	movlw	high _hours
  2680  00098A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2681  00098C  0E00               	movlw	0
  2682  00098E  ECDA  F00A         	call	_LCD_String_xy
  2683  000992  D7C3               	goto	l3269
  2684  000994                     l3287:
  2685                           
  2686                           ;Sistema.c: 444: };Sistema.c: 446: RTC_Read_Calendar(3);
  2687  000994  0E03               	movlw	3
  2688  000996  ECB6  F009         	call	_RTC_Read_Calendar
  2689                           
  2690                           ;Sistema.c: 447: I2C_Stop();
  2691  00099A  ECC8  F00B         	call	_I2C_Stop	;wreg free
  2692                           
  2693                           ;Sistema.c: 448: sprintf(date, " Dia %x-", Date);
  2694  00099E  0EDF               	movlw	low _date
  2695  0009A0  6E0D               	movwf	sprintf@sp^0,c
  2696  0009A2  0E01               	movlw	high _date
  2697  0009A4  6E0E               	movwf	(sprintf@sp+1)^0,c
  2698  0009A6  0E24               	movlw	low STR_15
  2699  0009A8  6E0F               	movwf	sprintf@f^0,c
  2700  0009AA  C0D2  F010         	movff	_Date,?_sprintf+3
  2701  0009AE  C0D3  F011         	movff	_Date+1,?_sprintf+4
  2702  0009B2  EC6D  F006         	call	_sprintf	;wreg free
  2703                           
  2704                           ;Sistema.c: 449: sprintf(month, "%x-", Month);
  2705  0009B6  0ED5               	movlw	low _month
  2706  0009B8  6E0D               	movwf	sprintf@sp^0,c
  2707  0009BA  0E01               	movlw	high _month
  2708  0009BC  6E0E               	movwf	(sprintf@sp+1)^0,c
  2709  0009BE  0E29               	movlw	low (STR_15+5)
  2710  0009C0  6E0F               	movwf	sprintf@f^0,c
  2711  0009C2  C0D0  F010         	movff	_Month,?_sprintf+3
  2712  0009C6  C0D1  F011         	movff	_Month+1,?_sprintf+4
  2713  0009CA  EC6D  F006         	call	_sprintf	;wreg free
  2714                           
  2715                           ;Sistema.c: 450: sprintf(year, "%x ", Year);
  2716  0009CE  0ECB               	movlw	low _year
  2717  0009D0  6E0D               	movwf	sprintf@sp^0,c
  2718  0009D2  0E01               	movlw	high _year
  2719  0009D4  6E0E               	movwf	(sprintf@sp+1)^0,c
  2720  0009D6  0E3A               	movlw	low STR_9
  2721  0009D8  6E0F               	movwf	sprintf@f^0,c
  2722  0009DA  C0CE  F010         	movff	_Year,?_sprintf+3
  2723  0009DE  C0CF  F011         	movff	_Year+1,?_sprintf+4
  2724  0009E2  EC6D  F006         	call	_sprintf	;wreg free
  2725                           
  2726                           ;Sistema.c: 451: LCD_String_xy(2, 0, date);
  2727  0009E6  0E00               	movlw	0
  2728  0009E8  6E0A               	movwf	LCD_String_xy@pos^0,c
  2729  0009EA  0EDF               	movlw	low _date
  2730  0009EC  6E0B               	movwf	LCD_String_xy@msg^0,c
  2731  0009EE  0E01               	movlw	high _date
  2732  0009F0  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2733  0009F2  0E02               	movlw	2
  2734  0009F4  ECDA  F00A         	call	_LCD_String_xy
  2735                           
  2736                           ;Sistema.c: 452: LCD_String(month);
  2737  0009F8  0ED5               	movlw	low _month
  2738  0009FA  6E08               	movwf	LCD_String@msg^0,c
  2739  0009FC  0E01               	movlw	high _month
  2740  0009FE  6E09               	movwf	(LCD_String@msg+1)^0,c
  2741  000A00  EC0C  F00A         	call	_LCD_String	;wreg free
  2742                           
  2743                           ;Sistema.c: 453: LCD_String(year);
  2744  000A04  0ECB               	movlw	low _year
  2745  000A06  6E08               	movwf	LCD_String@msg^0,c
  2746  000A08  0E01               	movlw	high _year
  2747  000A0A  6E09               	movwf	(LCD_String@msg+1)^0,c
  2748  000A0C  EC0C  F00A         	call	_LCD_String	;wreg free
  2749                           
  2750                           ;Sistema.c: 456: switch (days[Day]) {
  2751  000A10  D03F               	goto	l3319
  2752  000A12                     l3303:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;Sistema.c: 458: LCD_String("Sun");
  2756  000A12  0E52               	movlw	low STR_18
  2757  000A14  6E08               	movwf	LCD_String@msg^0,c
  2758  000A16  5008               	movf	LCD_String@msg^0,w,c
  2759  000A18  A4D8               	btfss	status,2,c
  2760  000A1A  0E08               	movlw	high __smallconst
  2761  000A1C  6E09               	movwf	(LCD_String@msg+1)^0,c
  2762  000A1E  EC0C  F00A         	call	_LCD_String	;wreg free
  2763                           
  2764                           ;Sistema.c: 459: break;
  2765  000A22  0012               	return	
  2766  000A24                     l3305:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;Sistema.c: 461: LCD_String("Mon");
  2770  000A24  0E4E               	movlw	low STR_19
  2771  000A26  6E08               	movwf	LCD_String@msg^0,c
  2772  000A28  5008               	movf	LCD_String@msg^0,w,c
  2773  000A2A  A4D8               	btfss	status,2,c
  2774  000A2C  0E08               	movlw	high __smallconst
  2775  000A2E  6E09               	movwf	(LCD_String@msg+1)^0,c
  2776  000A30  EC0C  F00A         	call	_LCD_String	;wreg free
  2777                           
  2778                           ;Sistema.c: 462: break;
  2779  000A34  0012               	return	
  2780  000A36                     l3307:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;Sistema.c: 464: LCD_String("Tue");
  2784  000A36  0E46               	movlw	low STR_20
  2785  000A38  6E08               	movwf	LCD_String@msg^0,c
  2786  000A3A  5008               	movf	LCD_String@msg^0,w,c
  2787  000A3C  A4D8               	btfss	status,2,c
  2788  000A3E  0E08               	movlw	high __smallconst
  2789  000A40  6E09               	movwf	(LCD_String@msg+1)^0,c
  2790  000A42  EC0C  F00A         	call	_LCD_String	;wreg free
  2791                           
  2792                           ;Sistema.c: 465: break;
  2793  000A46  0012               	return	
  2794  000A48                     l3309:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;Sistema.c: 467: LCD_String("Wed");
  2798  000A48  0E42               	movlw	low STR_21
  2799  000A4A  6E08               	movwf	LCD_String@msg^0,c
  2800  000A4C  5008               	movf	LCD_String@msg^0,w,c
  2801  000A4E  A4D8               	btfss	status,2,c
  2802  000A50  0E08               	movlw	high __smallconst
  2803  000A52  6E09               	movwf	(LCD_String@msg+1)^0,c
  2804  000A54  EC0C  F00A         	call	_LCD_String	;wreg free
  2805                           
  2806                           ;Sistema.c: 468: break;
  2807  000A58  0012               	return	
  2808  000A5A                     l3311:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;Sistema.c: 470: LCD_String("Thu");
  2812  000A5A  0E5A               	movlw	low STR_22
  2813  000A5C  6E08               	movwf	LCD_String@msg^0,c
  2814  000A5E  5008               	movf	LCD_String@msg^0,w,c
  2815  000A60  A4D8               	btfss	status,2,c
  2816  000A62  0E08               	movlw	high __smallconst
  2817  000A64  6E09               	movwf	(LCD_String@msg+1)^0,c
  2818  000A66  EC0C  F00A         	call	_LCD_String	;wreg free
  2819                           
  2820                           ;Sistema.c: 471: break;
  2821  000A6A  0012               	return	
  2822  000A6C                     l3313:
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;Sistema.c: 473: LCD_String("Fri");
  2826  000A6C  0E4A               	movlw	low STR_23
  2827  000A6E  6E08               	movwf	LCD_String@msg^0,c
  2828  000A70  5008               	movf	LCD_String@msg^0,w,c
  2829  000A72  A4D8               	btfss	status,2,c
  2830  000A74  0E08               	movlw	high __smallconst
  2831  000A76  6E09               	movwf	(LCD_String@msg+1)^0,c
  2832  000A78  EC0C  F00A         	call	_LCD_String	;wreg free
  2833                           
  2834                           ;Sistema.c: 474: break;
  2835  000A7C  0012               	return	
  2836  000A7E                     l3315:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;Sistema.c: 476: LCD_String("Sat");
  2840  000A7E  0E56               	movlw	low STR_24
  2841  000A80  6E08               	movwf	LCD_String@msg^0,c
  2842  000A82  5008               	movf	LCD_String@msg^0,w,c
  2843  000A84  A4D8               	btfss	status,2,c
  2844  000A86  0E08               	movlw	high __smallconst
  2845  000A88  6E09               	movwf	(LCD_String@msg+1)^0,c
  2846  000A8A  EC0C  F00A         	call	_LCD_String	;wreg free
  2847                           
  2848                           ;Sistema.c: 477: break;
  2849  000A8E  0012               	return	
  2850  000A90                     l3319:
  2851  000A90  0EB4               	movlw	low _days
  2852  000A92  0100               	movlb	0	; () banked
  2853  000A94  25D4               	addwf	_Day& (0+255),w,b
  2854  000A96  6ED9               	movwf	fsr2l,c
  2855  000A98  0E01               	movlw	high _days
  2856  000A9A  21D5               	addwfc	(_Day+1)& (0+255),w,b
  2857  000A9C  6EDA               	movwf	fsr2h,c
  2858  000A9E  50DF               	movf	indf2,w,c
  2859                           
  2860                           ; Switch size 1, requested type "simple"
  2861                           ; Number of cases is 7, Range of values is 70 to 116
  2862                           ; switch strategies available:
  2863                           ; Name         Instructions Cycles
  2864                           ; simple_byte           22    12 (average)
  2865                           ;	Chosen strategy is simple_byte
  2866  000AA0  0A46               	xorlw	70	; case 70
  2867  000AA2  B4D8               	btfsc	status,2,c
  2868  000AA4  D7E3               	goto	l3313
  2869  000AA6  0A0B               	xorlw	11	; case 77
  2870  000AA8  B4D8               	btfsc	status,2,c
  2871  000AAA  D7BC               	goto	l3305
  2872  000AAC  0A1E               	xorlw	30	; case 83
  2873  000AAE  B4D8               	btfsc	status,2,c
  2874  000AB0  D7B0               	goto	l3303
  2875  000AB2  0A07               	xorlw	7	; case 84
  2876  000AB4  B4D8               	btfsc	status,2,c
  2877  000AB6  D7BF               	goto	l3307
  2878  000AB8  0A03               	xorlw	3	; case 87
  2879  000ABA  B4D8               	btfsc	status,2,c
  2880  000ABC  D7C5               	goto	l3309
  2881  000ABE  0A24               	xorlw	36	; case 115
  2882  000AC0  B4D8               	btfsc	status,2,c
  2883  000AC2  D7DD               	goto	l3315
  2884  000AC4  0A07               	xorlw	7	; case 116
  2885  000AC6  A4D8               	btfss	status,2,c
  2886  000AC8  0012               	return	
  2887  000ACA  D7C7               	goto	l3311
  2888  000ACC                     __end_of_Mostrar_Fecha:
  2889                           	callstack 0
  2890                           
  2891 ;; *************** function _sprintf *****************
  2892 ;; Defined at:
  2893 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  sp              2   12[COMRAM] PTR unsigned char 
  2896 ;;		 -> year(10), month(10), date(10), hours(10), 
  2897 ;;		 -> mins(10), secs(10), vec_value(10), 
  2898 ;;  f               1   14[COMRAM] PTR const unsigned char 
  2899 ;;		 -> STR_17(4), STR_16(4), STR_15(9), STR_14(8), 
  2900 ;;		 -> STR_13(4), STR_12(4), STR_11(8), STR_10(4), 
  2901 ;;		 -> STR_9(4), STR_4(4), STR_3(3), STR_2(5), 
  2902 ;;		 -> STR_1(3), 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  idx             1   18[COMRAM] unsigned char 
  2905 ;;  tmpval          4    0        struct .
  2906 ;;  cp              3    0        PTR const unsigned char 
  2907 ;;  val             2   22[COMRAM] unsigned int 
  2908 ;;  len             2    0        unsigned int 
  2909 ;;  c               1   24[COMRAM] unsigned char 
  2910 ;;  flag            1   21[COMRAM] unsigned char 
  2911 ;;  prec            1   20[COMRAM] char 
  2912 ;;  ap              1   19[COMRAM] PTR void [1]
  2913 ;;		 -> ?_sprintf(2), 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  2   12[COMRAM] int 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2923 ;;      Params:         5       0       0       0       0       0       0       0       0
  2924 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2925 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2926 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2927 ;;Total ram usage:       13 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 1
  2930 ;; This function calls:
  2931 ;;		___lwdiv
  2932 ;;		___lwmod
  2933 ;; This function is called by:
  2934 ;;		_printTempHumedad
  2935 ;;		_Mostrar_Fecha
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text8
  2940  000CDA                     __ptext8:
  2941                           	callstack 0
  2942  000CDA                     _sprintf:
  2943                           	callstack 28
  2944                           
  2945                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2946                           
  2947                           ;incstack = 0
  2948  000CDA  0E10               	movlw	low (?_sprintf+3)
  2949  000CDC  6E14               	movwf	sprintf@ap^0,c
  2950                           
  2951                           ;doprnt.c: 553: while((c = *f++)) {
  2952  000CDE  D0ED               	goto	u2160
  2953  000CE0                     l2919:
  2954                           
  2955                           ;doprnt.c: 555: if(c != '%')
  2956  000CE0  0E25               	movlw	37
  2957  000CE2  1819               	xorwf	sprintf@c^0,w,c
  2958  000CE4  B4D8               	btfsc	status,2,c
  2959  000CE6  D009               	goto	l2925
  2960                           
  2961                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2962  000CE8  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2963  000CEC  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2964  000CF0  C019  FFDF         	movff	sprintf@c,indf2
  2965  000CF4  4A0D               	infsnz	sprintf@sp^0,f,c
  2966  000CF6  2A0E               	incf	(sprintf@sp+1)^0,f,c
  2967                           
  2968                           ;doprnt.c: 559: continue;
  2969  000CF8  D0E0               	goto	u2160
  2970  000CFA                     l2925:
  2971                           
  2972                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2973  000CFA  0E00               	movlw	0
  2974  000CFC  6E16               	movwf	sprintf@flag^0,c
  2975                           
  2976                           ;doprnt.c: 661: switch(c = *f++) {
  2977  000CFE  D002               	goto	l2931
  2978  000D00                     l2927:
  2979                           
  2980                           ;doprnt.c: 747: flag |= 0x80;
  2981  000D00  8E16               	bsf	sprintf@flag^0,7,c
  2982                           
  2983                           ;doprnt.c: 749: break;
  2984  000D02  D018               	goto	l466
  2985  000D04                     l2931:
  2986  000D04  2A0F               	incf	sprintf@f^0,f,c
  2987  000D06  040F               	decf	sprintf@f^0,w,c
  2988  000D08  6E12               	movwf	??_sprintf^0,c
  2989  000D0A  C012  FFF6         	movff	??_sprintf,tblptrl
  2990  000D0E                     	if	1	;There is more than 1 active tblptr byte
  2991  000D0E  0E08               	movlw	high __smallconst
  2992  000D10  6EF7               	movwf	tblptrh,c
  2993  000D12                     	endif
  2994  000D12                     	if	0	;tblptru may be non-zero
  2995  000D12                     	endif
  2996  000D12                     	if	0	;tblptru may be non-zero
  2997  000D12                     	endif
  2998  000D12  0008               	tblrd		*
  2999  000D14  CFF5 F019          	movff	tablat,sprintf@c
  3000  000D18  5019               	movf	sprintf@c^0,w,c
  3001                           
  3002                           ; Switch size 1, requested type "simple"
  3003                           ; Number of cases is 4, Range of values is 0 to 120
  3004                           ; switch strategies available:
  3005                           ; Name         Instructions Cycles
  3006                           ; simple_byte           13     7 (average)
  3007                           ;	Chosen strategy is simple_byte
  3008  000D1A  0A00               	xorlw	0	; case 0
  3009  000D1C  B4D8               	btfsc	status,2,c
  3010  000D1E  D0DA               	goto	u2170
  3011  000D20  0A64               	xorlw	100	; case 100
  3012  000D22  B4D8               	btfsc	status,2,c
  3013  000D24  D007               	goto	l466
  3014  000D26  0A0D               	xorlw	13	; case 105
  3015  000D28  B4D8               	btfsc	status,2,c
  3016  000D2A  D004               	goto	l466
  3017  000D2C  0A11               	xorlw	17	; case 120
  3018  000D2E  B4D8               	btfsc	status,2,c
  3019  000D30  D7E7               	goto	l2927
  3020  000D32  D0C3               	goto	u2160
  3021  000D34                     l466:
  3022                           
  3023                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
  3024  000D34  BE16               	btfsc	sprintf@flag^0,7,c
  3025  000D36  D012               	goto	l2943
  3026                           
  3027                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3028  000D38  5014               	movf	sprintf@ap^0,w,c
  3029  000D3A  6ED9               	movwf	fsr2l,c
  3030  000D3C  6ADA               	clrf	fsr2h,c
  3031  000D3E  CFDE F017          	movff	postinc2,sprintf@val
  3032  000D42  CFDD F018          	movff	postdec2,sprintf@val+1
  3033  000D46  0E02               	movlw	2
  3034  000D48  2614               	addwf	sprintf@ap^0,f,c
  3035                           
  3036                           ;doprnt.c: 1287: if((int)val < 0) {
  3037  000D4A  AE18               	btfss	(sprintf@val+1)^0,7,c
  3038  000D4C  D043               	goto	l2977
  3039                           
  3040                           ;doprnt.c: 1288: flag |= 0x03;
  3041  000D4E  0E03               	movlw	3
  3042  000D50  1216               	iorwf	sprintf@flag^0,f,c
  3043                           
  3044                           ;doprnt.c: 1289: val = -val;
  3045  000D52  6C17               	negf	sprintf@val^0,c
  3046  000D54  1E18               	comf	(sprintf@val+1)^0,f,c
  3047  000D56  B0D8               	btfsc	status,0,c
  3048  000D58  2A18               	incf	(sprintf@val+1)^0,f,c
  3049  000D5A  D03C               	goto	l2977
  3050  000D5C                     l2943:
  3051                           
  3052                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  3053  000D5C  5014               	movf	sprintf@ap^0,w,c
  3054  000D5E  6ED9               	movwf	fsr2l,c
  3055  000D60  6ADA               	clrf	fsr2h,c
  3056  000D62  CFDE F017          	movff	postinc2,sprintf@val
  3057  000D66  CFDD F018          	movff	postdec2,sprintf@val+1
  3058  000D6A  0E02               	movlw	2
  3059  000D6C  2614               	addwf	sprintf@ap^0,f,c
  3060  000D6E  D032               	goto	l2977
  3061  000D70                     l2947:
  3062                           
  3063                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3064  000D70  0E01               	movlw	1
  3065  000D72  6E19               	movwf	sprintf@c^0,c
  3066  000D74                     l2953:
  3067                           
  3068                           ;doprnt.c: 1332: if(val < dpowers[c])
  3069  000D74  5019               	movf	sprintf@c^0,w,c
  3070  000D76  0D02               	mullw	2
  3071  000D78  50F3               	movf	243,w,c
  3072  000D7A  0F01               	addlw	low _dpowers
  3073  000D7C  6E12               	movwf	??_sprintf^0,c
  3074  000D7E  C012  FFF6         	movff	??_sprintf,tblptrl
  3075  000D82                     	if	1	;There is more than 1 active tblptr byte
  3076  000D82  0E08               	movlw	high __smallconst
  3077  000D84  6EF7               	movwf	tblptrh,c
  3078  000D86                     	endif
  3079  000D86                     	if	0	;tblptru may be non-zero
  3080  000D86                     	endif
  3081  000D86                     	if	0	;tblptru may be non-zero
  3082  000D86                     	endif
  3083  000D86  0009               	tblrd		*+
  3084  000D88  50F5               	movf	tablat,w,c
  3085  000D8A  5C17               	subwf	sprintf@val^0,w,c
  3086  000D8C  0009               	tblrd		*+
  3087  000D8E  50F5               	movf	tablat,w,c
  3088  000D90  5818               	subwfb	(sprintf@val+1)^0,w,c
  3089  000D92  A0D8               	btfss	status,0,c
  3090  000D94  D027               	goto	l2979
  3091  000D96  2A19               	incf	sprintf@c^0,f,c
  3092  000D98  0E05               	movlw	5
  3093  000D9A  1819               	xorwf	sprintf@c^0,w,c
  3094  000D9C  B4D8               	btfsc	status,2,c
  3095  000D9E  D022               	goto	l2979
  3096  000DA0  D7E9               	goto	l2953
  3097  000DA2                     l2961:
  3098                           
  3099                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3100  000DA2  0E01               	movlw	1
  3101  000DA4  6E19               	movwf	sprintf@c^0,c
  3102  000DA6                     l2967:
  3103                           
  3104                           ;doprnt.c: 1343: if(val < hexpowers[c])
  3105  000DA6  5019               	movf	sprintf@c^0,w,c
  3106  000DA8  0D02               	mullw	2
  3107  000DAA  50F3               	movf	243,w,c
  3108  000DAC  0F0B               	addlw	low _hexpowers
  3109  000DAE  6E12               	movwf	??_sprintf^0,c
  3110  000DB0  C012  FFF6         	movff	??_sprintf,tblptrl
  3111  000DB4                     	if	1	;There is more than 1 active tblptr byte
  3112  000DB4  0E08               	movlw	high __smallconst
  3113  000DB6  6EF7               	movwf	tblptrh,c
  3114  000DB8                     	endif
  3115  000DB8                     	if	0	;tblptru may be non-zero
  3116  000DB8                     	endif
  3117  000DB8                     	if	0	;tblptru may be non-zero
  3118  000DB8                     	endif
  3119  000DB8  0009               	tblrd		*+
  3120  000DBA  50F5               	movf	tablat,w,c
  3121  000DBC  5C17               	subwf	sprintf@val^0,w,c
  3122  000DBE  0009               	tblrd		*+
  3123  000DC0  50F5               	movf	tablat,w,c
  3124  000DC2  5818               	subwfb	(sprintf@val+1)^0,w,c
  3125  000DC4  A0D8               	btfss	status,0,c
  3126  000DC6  D00E               	goto	l2979
  3127  000DC8  2A19               	incf	sprintf@c^0,f,c
  3128  000DCA  0E04               	movlw	4
  3129  000DCC  1819               	xorwf	sprintf@c^0,w,c
  3130  000DCE  B4D8               	btfsc	status,2,c
  3131  000DD0  D009               	goto	l2979
  3132  000DD2  D7E9               	goto	l2967
  3133  000DD4                     l2977:
  3134  000DD4  5016               	movf	sprintf@flag^0,w,c
  3135  000DD6  0B80               	andlw	128
  3136                           
  3137                           ; Switch size 1, requested type "simple"
  3138                           ; Number of cases is 2, Range of values is 0 to 128
  3139                           ; switch strategies available:
  3140                           ; Name         Instructions Cycles
  3141                           ; simple_byte            7     4 (average)
  3142                           ;	Chosen strategy is simple_byte
  3143  000DD8  0A00               	xorlw	0	; case 0
  3144  000DDA  B4D8               	btfsc	status,2,c
  3145  000DDC  D7C9               	goto	l2947
  3146  000DDE  0A80               	xorlw	128	; case 128
  3147  000DE0  B4D8               	btfsc	status,2,c
  3148  000DE2  D7DF               	goto	l2961
  3149  000DE4                     l2979:
  3150                           
  3151                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3152  000DE4  C016  F012         	movff	sprintf@flag,??_sprintf
  3153  000DE8  0E03               	movlw	3
  3154  000DEA  1612               	andwf	??_sprintf^0,f,c
  3155  000DEC  B4D8               	btfsc	status,2,c
  3156  000DEE  D008               	goto	l2985
  3157                           
  3158                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3159  000DF0  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3160  000DF4  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3161  000DF8  0E2D               	movlw	45
  3162  000DFA  6EDF               	movwf	indf2,c
  3163  000DFC  4A0D               	infsnz	sprintf@sp^0,f,c
  3164  000DFE  2A0E               	incf	(sprintf@sp+1)^0,f,c
  3165  000E00                     l2985:
  3166                           
  3167                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3168  000E00  C019  F015         	movff	sprintf@c,sprintf@prec
  3169                           
  3170                           ;doprnt.c: 1500: while(prec--) {
  3171  000E04  D056               	goto	l3001
  3172  000E06                     l2987:
  3173                           
  3174                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3175  000E06  5015               	movf	sprintf@prec^0,w,c
  3176  000E08  0D02               	mullw	2
  3177  000E0A  50F3               	movf	243,w,c
  3178  000E0C  0F01               	addlw	low _dpowers
  3179  000E0E  6E12               	movwf	??_sprintf^0,c
  3180  000E10  C012  FFF6         	movff	??_sprintf,tblptrl
  3181  000E14                     	if	1	;There is more than 1 active tblptr byte
  3182  000E14  0E08               	movlw	high __smallconst
  3183  000E16  6EF7               	movwf	tblptrh,c
  3184  000E18                     	endif
  3185  000E18                     	if	0	;tblptru may be non-zero
  3186  000E18                     	endif
  3187  000E18                     	if	0	;tblptru may be non-zero
  3188  000E18                     	endif
  3189  000E18  0009               	tblrd		*+
  3190  000E1A  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3191  000E1E  000A               	tblrd		*-
  3192  000E20  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3193  000E24  C017  F001         	movff	sprintf@val,___lwdiv@dividend
  3194  000E28  C018  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3195  000E2C  ECE3  F009         	call	___lwdiv	;wreg free
  3196  000E30  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3197  000E34  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3198  000E38  0E00               	movlw	0
  3199  000E3A  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3200  000E3C  0E0A               	movlw	10
  3201  000E3E  6E0A               	movwf	___lwmod@divisor^0,c
  3202  000E40  EC9F  F00A         	call	___lwmod	;wreg free
  3203  000E44  5008               	movf	?___lwmod^0,w,c
  3204  000E46  0F30               	addlw	48
  3205  000E48  6E19               	movwf	sprintf@c^0,c
  3206                           
  3207                           ;doprnt.c: 1517: break;
  3208  000E4A  D02B               	goto	l2997
  3209  000E4C                     l2989:
  3210                           
  3211                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
  3212  000E4C  C017  F001         	movff	sprintf@val,___lwdiv@dividend
  3213  000E50  C018  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3214  000E54  5015               	movf	sprintf@prec^0,w,c
  3215  000E56  0D02               	mullw	2
  3216  000E58  50F3               	movf	243,w,c
  3217  000E5A  0F0B               	addlw	low _hexpowers
  3218  000E5C  6E12               	movwf	??_sprintf^0,c
  3219  000E5E  C012  FFF6         	movff	??_sprintf,tblptrl
  3220  000E62                     	if	1	;There is more than 1 active tblptr byte
  3221  000E62  0E08               	movlw	high __smallconst
  3222  000E64  6EF7               	movwf	tblptrh,c
  3223  000E66                     	endif
  3224  000E66                     	if	0	;tblptru may be non-zero
  3225  000E66                     	endif
  3226  000E66                     	if	0	;tblptru may be non-zero
  3227  000E66                     	endif
  3228  000E66  0009               	tblrd		*+
  3229  000E68  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3230  000E6C  000A               	tblrd		*-
  3231  000E6E  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3232  000E72  ECE3  F009         	call	___lwdiv	;wreg free
  3233  000E76  5001               	movf	?___lwdiv^0,w,c
  3234  000E78  0B0F               	andlw	15
  3235  000E7A  6E13               	movwf	sprintf@idx^0,c
  3236                           
  3237                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  3238  000E7C  5013               	movf	sprintf@idx^0,w,c
  3239  000E7E  0F13               	addlw	low STR_25
  3240  000E80  6E12               	movwf	??_sprintf^0,c
  3241  000E82  C012  FFF6         	movff	??_sprintf,tblptrl
  3242  000E86                     	if	1	;There is more than 1 active tblptr byte
  3243  000E86  0E08               	movlw	high __smallconst
  3244  000E88  6EF7               	movwf	tblptrh,c
  3245  000E8A                     	endif
  3246  000E8A                     	if	0	;tblptru may be non-zero
  3247  000E8A                     	endif
  3248  000E8A                     	if	0	;tblptru may be non-zero
  3249  000E8A                     	endif
  3250  000E8A  0008               	tblrd		*
  3251  000E8C  CFF5 F019          	movff	tablat,sprintf@c
  3252                           
  3253                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  3254  000E90  D008               	goto	l2997
  3255  000E92                     l2995:
  3256  000E92  5016               	movf	sprintf@flag^0,w,c
  3257  000E94  0B80               	andlw	128
  3258                           
  3259                           ; Switch size 1, requested type "simple"
  3260                           ; Number of cases is 2, Range of values is 0 to 128
  3261                           ; switch strategies available:
  3262                           ; Name         Instructions Cycles
  3263                           ; simple_byte            7     4 (average)
  3264                           ;	Chosen strategy is simple_byte
  3265  000E96  0A00               	xorlw	0	; case 0
  3266  000E98  B4D8               	btfsc	status,2,c
  3267  000E9A  D7B5               	goto	l2987
  3268  000E9C  0A80               	xorlw	128	; case 128
  3269  000E9E  B4D8               	btfsc	status,2,c
  3270  000EA0  D7D5               	goto	l2989
  3271  000EA2                     l2997:
  3272                           
  3273                           ;doprnt.c: 1550: ((*sp++ = (c)));
  3274  000EA2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3275  000EA6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3276  000EAA  C019  FFDF         	movff	sprintf@c,indf2
  3277  000EAE  4A0D               	infsnz	sprintf@sp^0,f,c
  3278  000EB0  2A0E               	incf	(sprintf@sp+1)^0,f,c
  3279  000EB2                     l3001:
  3280  000EB2  0615               	decf	sprintf@prec^0,f,c
  3281  000EB4  2815               	incf	sprintf@prec^0,w,c
  3282  000EB6  A4D8               	btfss	status,2,c
  3283  000EB8  D7EC               	goto	l2995
  3284  000EBA                     u2160:
  3285  000EBA  2A0F               	incf	sprintf@f^0,f,c
  3286  000EBC  040F               	decf	sprintf@f^0,w,c
  3287  000EBE  6E12               	movwf	??_sprintf^0,c
  3288  000EC0  C012  FFF6         	movff	??_sprintf,tblptrl
  3289  000EC4                     	if	1	;There is more than 1 active tblptr byte
  3290  000EC4  0E08               	movlw	high __smallconst
  3291  000EC6  6EF7               	movwf	tblptrh,c
  3292  000EC8                     	endif
  3293  000EC8                     	if	0	;tblptru may be non-zero
  3294  000EC8                     	endif
  3295  000EC8                     	if	0	;tblptru may be non-zero
  3296  000EC8                     	endif
  3297  000EC8  0008               	tblrd		*
  3298  000ECA  CFF5 F019          	movff	tablat,sprintf@c
  3299  000ECE  5019               	movf	sprintf@c^0,w,c
  3300  000ED0  A4D8               	btfss	status,2,c
  3301  000ED2  D706               	goto	l2919
  3302  000ED4                     u2170:
  3303                           
  3304                           ;doprnt.c: 1564: *sp = 0;
  3305  000ED4  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3306  000ED8  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3307  000EDC  0E00               	movlw	0
  3308  000EDE  6EDF               	movwf	indf2,c
  3309  000EE0  0012               	return		;funcret
  3310  000EE2                     __end_of_sprintf:
  3311                           	callstack 0
  3312                           
  3313 ;; *************** function ___lwmod *****************
  3314 ;; Defined at:
  3315 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  dividend        2    7[COMRAM] unsigned int 
  3318 ;;  divisor         2    9[COMRAM] unsigned int 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  counter         1   11[COMRAM] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  2    7[COMRAM] unsigned int 
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3330 ;;      Params:         4       0       0       0       0       0       0       0       0
  3331 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3333 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3334 ;;Total ram usage:        5 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_sprintf
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text9
  3344  00153E                     __ptext9:
  3345                           	callstack 0
  3346  00153E                     ___lwmod:
  3347                           	callstack 28
  3348                           
  3349                           ;incstack = 0
  3350  00153E  500A               	movf	___lwmod@divisor^0,w,c
  3351  001540  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  3352  001542  B4D8               	btfsc	status,2,c
  3353  001544  D018               	goto	l983
  3354  001546  0E01               	movlw	1
  3355  001548  6E0C               	movwf	___lwmod@counter^0,c
  3356  00154A  D004               	goto	l2851
  3357  00154C                     l2849:
  3358  00154C  90D8               	bcf	status,0,c
  3359  00154E  360A               	rlcf	___lwmod@divisor^0,f,c
  3360  001550  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  3361  001552  2A0C               	incf	___lwmod@counter^0,f,c
  3362  001554                     l2851:
  3363  001554  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  3364  001556  D7FA               	goto	l2849
  3365  001558                     u1990:
  3366  001558  500A               	movf	___lwmod@divisor^0,w,c
  3367  00155A  5C08               	subwf	___lwmod@dividend^0,w,c
  3368  00155C  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3369  00155E  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  3370  001560  A0D8               	btfss	status,0,c
  3371  001562  D004               	goto	l2857
  3372  001564  500A               	movf	___lwmod@divisor^0,w,c
  3373  001566  5E08               	subwf	___lwmod@dividend^0,f,c
  3374  001568  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3375  00156A  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  3376  00156C                     l2857:
  3377  00156C  90D8               	bcf	status,0,c
  3378  00156E  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  3379  001570  320A               	rrcf	___lwmod@divisor^0,f,c
  3380  001572  2E0C               	decfsz	___lwmod@counter^0,f,c
  3381  001574  D7F1               	goto	u1990
  3382  001576                     l983:
  3383  001576  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3384  00157A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3385  00157E  0012               	return		;funcret
  3386  001580                     __end_of___lwmod:
  3387                           	callstack 0
  3388                           
  3389 ;; *************** function ___lwdiv *****************
  3390 ;; Defined at:
  3391 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  dividend        2    0[COMRAM] unsigned int 
  3394 ;;  divisor         2    2[COMRAM] unsigned int 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;  quotient        2    5[COMRAM] unsigned int 
  3397 ;;  counter         1    4[COMRAM] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  2    0[COMRAM] unsigned int 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3407 ;;      Params:         4       0       0       0       0       0       0       0       0
  3408 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3410 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3411 ;;Total ram usage:        7 bytes
  3412 ;; Hardware stack levels used: 1
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_sprintf
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text10
  3421  0013C6                     __ptext10:
  3422                           	callstack 0
  3423  0013C6                     ___lwdiv:
  3424                           	callstack 28
  3425                           
  3426                           ;incstack = 0
  3427  0013C6  0E00               	movlw	0
  3428  0013C8  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  3429  0013CA  0E00               	movlw	0
  3430  0013CC  6E06               	movwf	___lwdiv@quotient^0,c
  3431  0013CE  5003               	movf	___lwdiv@divisor^0,w,c
  3432  0013D0  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3433  0013D2  B4D8               	btfsc	status,2,c
  3434  0013D4  D01C               	goto	l973
  3435  0013D6  0E01               	movlw	1
  3436  0013D8  6E05               	movwf	___lwdiv@counter^0,c
  3437  0013DA  D004               	goto	l2831
  3438  0013DC                     l2829:
  3439  0013DC  90D8               	bcf	status,0,c
  3440  0013DE  3603               	rlcf	___lwdiv@divisor^0,f,c
  3441  0013E0  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3442  0013E2  2A05               	incf	___lwdiv@counter^0,f,c
  3443  0013E4                     l2831:
  3444  0013E4  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3445  0013E6  D7FA               	goto	l2829
  3446  0013E8                     u1960:
  3447  0013E8  90D8               	bcf	status,0,c
  3448  0013EA  3606               	rlcf	___lwdiv@quotient^0,f,c
  3449  0013EC  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3450  0013EE  5003               	movf	___lwdiv@divisor^0,w,c
  3451  0013F0  5C01               	subwf	___lwdiv@dividend^0,w,c
  3452  0013F2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3453  0013F4  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3454  0013F6  A0D8               	btfss	status,0,c
  3455  0013F8  D005               	goto	l2841
  3456  0013FA  5003               	movf	___lwdiv@divisor^0,w,c
  3457  0013FC  5E01               	subwf	___lwdiv@dividend^0,f,c
  3458  0013FE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3459  001400  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3460  001402  8006               	bsf	___lwdiv@quotient^0,0,c
  3461  001404                     l2841:
  3462  001404  90D8               	bcf	status,0,c
  3463  001406  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3464  001408  3203               	rrcf	___lwdiv@divisor^0,f,c
  3465  00140A  2E05               	decfsz	___lwdiv@counter^0,f,c
  3466  00140C  D7ED               	goto	u1960
  3467  00140E                     l973:
  3468  00140E  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
  3469  001412  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3470  001416  0012               	return		;funcret
  3471  001418                     __end_of___lwdiv:
  3472                           	callstack 0
  3473                           
  3474 ;; *************** function _RTC_Read_Clock *****************
  3475 ;; Defined at:
  3476 ;;		line 393 in file "Sistema.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  read_clock_a    1    wreg     unsigned char 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3490 ;;      Params:         0       0       0       0       0       0       0       0       0
  3491 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3492 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3493 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3494 ;;Total ram usage:        2 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; Hardware stack levels required when called: 3
  3497 ;; This function calls:
  3498 ;;		_I2C_Read
  3499 ;;		_I2C_Repeated_Start
  3500 ;;		_I2C_Start
  3501 ;;		_I2C_Write
  3502 ;; This function is called by:
  3503 ;;		_Mostrar_Fecha
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text11
  3508  0014FA                     __ptext11:
  3509                           	callstack 0
  3510  0014FA                     _RTC_Read_Clock:
  3511                           	callstack 26
  3512                           
  3513                           ;incstack = 0
  3514                           ;RTC_Read_Clock@read_clock_address stored from wreg
  3515  0014FA  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  3516                           
  3517                           ;Sistema.c: 394: I2C_Start(0xD0);
  3518  0014FC  0ED0               	movlw	208
  3519  0014FE  EC9B  F00B         	call	_I2C_Start
  3520                           
  3521                           ;Sistema.c: 395: I2C_Write(read_clock_address);
  3522  001502  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  3523  001504  ECB1  F00B         	call	_I2C_Write
  3524                           
  3525                           ;Sistema.c: 396: I2C_Repeated_Start(0xD1);
  3526  001508  0ED1               	movlw	209
  3527  00150A  ECA6  F00B         	call	_I2C_Repeated_Start
  3528                           
  3529                           ;Sistema.c: 397: sec = I2C_Read(0);
  3530  00150E  0E00               	movlw	0
  3531  001510  EC50  F00B         	call	_I2C_Read
  3532  001514  6E03               	movwf	??_RTC_Read_Clock^0,c
  3533  001516  5003               	movf	??_RTC_Read_Clock^0,w,c
  3534  001518  0100               	movlb	0	; () banked
  3535  00151A  6FD8               	movwf	_sec& (0+255),b
  3536  00151C  6BD9               	clrf	(_sec+1)& (0+255),b
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;Sistema.c: 398: min = I2C_Read(0);
  3540  00151E  0E00               	movlw	0
  3541  001520  EC50  F00B         	call	_I2C_Read
  3542  001524  6E03               	movwf	??_RTC_Read_Clock^0,c
  3543  001526  5003               	movf	??_RTC_Read_Clock^0,w,c
  3544  001528  0100               	movlb	0	; () banked
  3545  00152A  6FD6               	movwf	_min& (0+255),b
  3546  00152C  6BD7               	clrf	(_min+1)& (0+255),b
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;Sistema.c: 399: hour = I2C_Read(1);
  3550  00152E  0E01               	movlw	1
  3551  001530  EC50  F00B         	call	_I2C_Read
  3552  001534  6E03               	movwf	??_RTC_Read_Clock^0,c
  3553  001536  5003               	movf	??_RTC_Read_Clock^0,w,c
  3554  001538  6E38               	movwf	_hour^0,c
  3555  00153A  6A39               	clrf	(_hour+1)^0,c
  3556  00153C  0012               	return		;funcret
  3557  00153E                     __end_of_RTC_Read_Clock:
  3558                           	callstack 0
  3559                           
  3560 ;; *************** function _RTC_Read_Calendar *****************
  3561 ;; Defined at:
  3562 ;;		line 403 in file "Sistema.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  read_calenda    1    wreg     unsigned char 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  read_calenda    1    3[COMRAM] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      void 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3576 ;;      Params:         0       0       0       0       0       0       0       0       0
  3577 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3578 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3579 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3580 ;;Total ram usage:        2 bytes
  3581 ;; Hardware stack levels used: 1
  3582 ;; Hardware stack levels required when called: 3
  3583 ;; This function calls:
  3584 ;;		_I2C_Read
  3585 ;;		_I2C_Repeated_Start
  3586 ;;		_I2C_Start
  3587 ;;		_I2C_Stop
  3588 ;;		_I2C_Write
  3589 ;; This function is called by:
  3590 ;;		_Mostrar_Fecha
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text12
  3595  00136C                     __ptext12:
  3596                           	callstack 0
  3597  00136C                     _RTC_Read_Calendar:
  3598                           	callstack 26
  3599                           
  3600                           ;incstack = 0
  3601                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  3602  00136C  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  3603                           
  3604                           ;Sistema.c: 404: I2C_Start(0xD0);
  3605  00136E  0ED0               	movlw	208
  3606  001370  EC9B  F00B         	call	_I2C_Start
  3607                           
  3608                           ;Sistema.c: 405: I2C_Write(read_calendar_address);
  3609  001374  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  3610  001376  ECB1  F00B         	call	_I2C_Write
  3611                           
  3612                           ;Sistema.c: 406: I2C_Repeated_Start(0xD1);
  3613  00137A  0ED1               	movlw	209
  3614  00137C  ECA6  F00B         	call	_I2C_Repeated_Start
  3615                           
  3616                           ;Sistema.c: 407: Day = I2C_Read(0);
  3617  001380  0E00               	movlw	0
  3618  001382  EC50  F00B         	call	_I2C_Read
  3619  001386  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3620  001388  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3621  00138A  0100               	movlb	0	; () banked
  3622  00138C  6FD4               	movwf	_Day& (0+255),b
  3623  00138E  6BD5               	clrf	(_Day+1)& (0+255),b
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;Sistema.c: 408: Date = I2C_Read(0);
  3627  001390  0E00               	movlw	0
  3628  001392  EC50  F00B         	call	_I2C_Read
  3629  001396  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3630  001398  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3631  00139A  0100               	movlb	0	; () banked
  3632  00139C  6FD2               	movwf	_Date& (0+255),b
  3633  00139E  6BD3               	clrf	(_Date+1)& (0+255),b
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;Sistema.c: 409: Month = I2C_Read(0);
  3637  0013A0  0E00               	movlw	0
  3638  0013A2  EC50  F00B         	call	_I2C_Read
  3639  0013A6  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3640  0013A8  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3641  0013AA  0100               	movlb	0	; () banked
  3642  0013AC  6FD0               	movwf	_Month& (0+255),b
  3643  0013AE  6BD1               	clrf	(_Month+1)& (0+255),b
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;Sistema.c: 410: Year = I2C_Read(1);
  3647  0013B0  0E01               	movlw	1
  3648  0013B2  EC50  F00B         	call	_I2C_Read
  3649  0013B6  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3650  0013B8  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3651  0013BA  0100               	movlb	0	; () banked
  3652  0013BC  6FCE               	movwf	_Year& (0+255),b
  3653  0013BE  6BCF               	clrf	(_Year+1)& (0+255),b
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;Sistema.c: 411: I2C_Stop();
  3657  0013C0  ECC8  F00B         	call	_I2C_Stop	;wreg free
  3658  0013C4  0012               	return		;funcret
  3659  0013C6                     __end_of_RTC_Read_Calendar:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _I2C_Stop *****************
  3663 ;; Defined at:
  3664 ;;		line 122 in file "I2C_Master_File.h"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;		None
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      unsigned char 
  3671 ;; Registers used:
  3672 ;;		wreg
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3678 ;;      Params:         0       0       0       0       0       0       0       0       0
  3679 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3681 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3682 ;;Total ram usage:        0 bytes
  3683 ;; Hardware stack levels used: 1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_RTC_Read_Calendar
  3688 ;;		_Mostrar_Fecha
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text13
  3693  001790                     __ptext13:
  3694                           	callstack 0
  3695  001790                     _I2C_Stop:
  3696                           	callstack 28
  3697                           
  3698                           ;I2C_Master_File.h: 124: PEN = 1;
  3699                           
  3700                           ;incstack = 0
  3701  001790  84C5               	bsf	4037,2,c	;volatile
  3702  001792                     l206:
  3703  001792  B4C5               	btfsc	4037,2,c	;volatile
  3704  001794  D7FE               	goto	l206
  3705                           
  3706                           ;I2C_Master_File.h: 126: if(!SSPSTATbits.P);
  3707  001796  50C7               	movf	199,w,c	;volatile
  3708  001798  0012               	return		;funcret
  3709  00179A                     __end_of_I2C_Stop:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function _I2C_Start *****************
  3713 ;; Defined at:
  3714 ;;		line 97 in file "I2C_Master_File.h"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  slave_write_    1    wreg     unsigned char 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  slave_write_    1    1[COMRAM] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      unsigned char 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0
  3729 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3731 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3732 ;;Total ram usage:        1 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 2
  3735 ;; This function calls:
  3736 ;;		_I2C_Write
  3737 ;; This function is called by:
  3738 ;;		_RTC_Read_Clock
  3739 ;;		_RTC_Read_Calendar
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text14
  3744  001736                     __ptext14:
  3745                           	callstack 0
  3746  001736                     _I2C_Start:
  3747                           	callstack 26
  3748                           
  3749                           ;incstack = 0
  3750                           ;I2C_Start@slave_write_address stored from wreg
  3751  001736  6E02               	movwf	I2C_Start@slave_write_address^0,c
  3752                           
  3753                           ;I2C_Master_File.h: 99: SSPCON2bits.SEN=1;
  3754  001738  80C5               	bsf	197,0,c	;volatile
  3755  00173A                     l190:
  3756  00173A  B0C5               	btfsc	197,0,c	;volatile
  3757  00173C  D7FE               	goto	l190
  3758                           
  3759                           ;I2C_Master_File.h: 101: SSPIF=0;
  3760  00173E  969E               	bcf	3998,3,c	;volatile
  3761                           
  3762                           ;I2C_Master_File.h: 102: if(!SSPSTATbits.S)
  3763  001740  A6C7               	btfss	199,3,c	;volatile
  3764  001742  0012               	return	
  3765                           
  3766                           ;I2C_Master_File.h: 104: return (I2C_Write(slave_write_address));;	Return value of _I2C_
      +                          Start is never used
  3767  001744  5002               	movf	I2C_Start@slave_write_address^0,w,c
  3768  001746  ECB1  F00B         	call	_I2C_Write
  3769  00174A  0012               	return		;funcret
  3770  00174C                     __end_of_I2C_Start:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _I2C_Repeated_Start *****************
  3774 ;; Defined at:
  3775 ;;		line 108 in file "I2C_Master_File.h"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  slave_read_a    1    wreg     unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      unsigned char 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0
  3790 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3792 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3793 ;;Total ram usage:        1 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; Hardware stack levels required when called: 2
  3796 ;; This function calls:
  3797 ;;		_I2C_Write
  3798 ;; This function is called by:
  3799 ;;		_RTC_Read_Clock
  3800 ;;		_RTC_Read_Calendar
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text15
  3805  00174C                     __ptext15:
  3806                           	callstack 0
  3807  00174C                     _I2C_Repeated_Start:
  3808                           	callstack 26
  3809                           
  3810                           ;incstack = 0
  3811                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  3812  00174C  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  3813                           
  3814                           ;I2C_Master_File.h: 110: RSEN = 1;
  3815  00174E  82C5               	bsf	4037,1,c	;volatile
  3816  001750                     l197:
  3817  001750  B2C5               	btfsc	4037,1,c	;volatile
  3818  001752  D7FE               	goto	l197
  3819                           
  3820                           ;I2C_Master_File.h: 112: SSPIF = 0;
  3821  001754  969E               	bcf	3998,3,c	;volatile
  3822                           
  3823                           ;I2C_Master_File.h: 113: if(!SSPSTATbits.S)
  3824  001756  A6C7               	btfss	199,3,c	;volatile
  3825  001758  0012               	return	
  3826                           
  3827                           ;I2C_Master_File.h: 115: I2C_Write(slave_read_address);
  3828  00175A  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  3829  00175C  ECB1  F00B         	call	_I2C_Write
  3830                           
  3831                           ;I2C_Master_File.h: 116: if (ACKSTAT)
  3832  001760  0012               	return		;funcret
  3833  001762                     __end_of_I2C_Repeated_Start:
  3834                           	callstack 0
  3835                           
  3836 ;; *************** function _I2C_Write *****************
  3837 ;; Defined at:
  3838 ;;		line 130 in file "I2C_Master_File.h"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  data            1    wreg     unsigned char 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  data            1    0[COMRAM] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      unsigned char 
  3845 ;; Registers used:
  3846 ;;		wreg, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3852 ;;      Params:         0       0       0       0       0       0       0       0       0
  3853 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3855 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3856 ;;Total ram usage:        1 bytes
  3857 ;; Hardware stack levels used: 1
  3858 ;; Hardware stack levels required when called: 1
  3859 ;; This function calls:
  3860 ;;		_I2C_Ready
  3861 ;; This function is called by:
  3862 ;;		_I2C_Start
  3863 ;;		_I2C_Repeated_Start
  3864 ;;		_RTC_Read_Clock
  3865 ;;		_RTC_Read_Calendar
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text16
  3870  001762                     __ptext16:
  3871                           	callstack 0
  3872  001762                     _I2C_Write:
  3873                           	callstack 27
  3874                           
  3875                           ;incstack = 0
  3876                           ;I2C_Write@data stored from wreg
  3877  001762  6E01               	movwf	I2C_Write@data^0,c
  3878                           
  3879                           ;I2C_Master_File.h: 132: SSPBUF = data;
  3880  001764  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  3881                           
  3882                           ;I2C_Master_File.h: 133: I2C_Ready();
  3883  001768  ECD7  F00B         	call	_I2C_Ready	;wreg free
  3884                           
  3885                           ;I2C_Master_File.h: 134: if (ACKSTAT)
  3886  00176C  ACC5               	btfss	4037,6,c	;volatile
  3887  00176E  D002               	goto	l2761
  3888                           
  3889                           ;I2C_Master_File.h: 135: return 1;
  3890  001770  0E01               	movlw	1
  3891  001772  0012               	return	
  3892  001774                     l2761:
  3893                           
  3894                           ;I2C_Master_File.h: 136: else;I2C_Master_File.h: 137: return 2;
  3895  001774  0E02               	movlw	2
  3896  001776  0012               	return		;funcret
  3897  001778                     __end_of_I2C_Write:
  3898                           	callstack 0
  3899                           
  3900 ;; *************** function _I2C_Read *****************
  3901 ;; Defined at:
  3902 ;;		line 41 in file "I2C_Master_File.h"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  flag            1    wreg     unsigned char 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  flag            1    0[COMRAM] unsigned char 
  3907 ;;  buffer          1    1[COMRAM] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      unsigned char 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3917 ;;      Params:         0       0       0       0       0       0       0       0       0
  3918 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3920 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3921 ;;Total ram usage:        2 bytes
  3922 ;; Hardware stack levels used: 1
  3923 ;; Hardware stack levels required when called: 1
  3924 ;; This function calls:
  3925 ;;		_I2C_Ack
  3926 ;;		_I2C_Nack
  3927 ;;		_I2C_Ready
  3928 ;; This function is called by:
  3929 ;;		_RTC_Read_Clock
  3930 ;;		_RTC_Read_Calendar
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text17
  3935  0016A0                     __ptext17:
  3936                           	callstack 0
  3937  0016A0                     _I2C_Read:
  3938                           	callstack 27
  3939                           
  3940                           ;incstack = 0
  3941                           ;I2C_Read@flag stored from wreg
  3942  0016A0  6E01               	movwf	I2C_Read@flag^0,c
  3943                           
  3944                           ;I2C_Master_File.h: 44: char buffer;;I2C_Master_File.h: 45: RCEN = 1;
  3945  0016A2  86C5               	bsf	4037,3,c	;volatile
  3946  0016A4                     l162:
  3947  0016A4  A0C7               	btfss	199,0,c	;volatile
  3948  0016A6  D7FE               	goto	l162
  3949                           
  3950                           ;I2C_Master_File.h: 48: buffer = SSPBUF;
  3951  0016A8  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  3952                           
  3953                           ;I2C_Master_File.h: 50: if(flag==0)
  3954  0016AC  5001               	movf	I2C_Read@flag^0,w,c
  3955  0016AE  A4D8               	btfss	status,2,c
  3956  0016B0  D003               	goto	l2795
  3957                           
  3958                           ;I2C_Master_File.h: 51: I2C_Ack();
  3959  0016B2  ECD2  F00B         	call	_I2C_Ack	;wreg free
  3960  0016B6  D002               	goto	l166
  3961  0016B8                     l2795:
  3962                           
  3963                           ;I2C_Master_File.h: 52: else;I2C_Master_File.h: 53: I2C_Nack();
  3964  0016B8  ECCD  F00B         	call	_I2C_Nack	;wreg free
  3965  0016BC                     l166:
  3966                           
  3967                           ;I2C_Master_File.h: 54: I2C_Ready();
  3968  0016BC  ECD7  F00B         	call	_I2C_Ready	;wreg free
  3969                           
  3970                           ;I2C_Master_File.h: 55: return(buffer);
  3971  0016C0  5002               	movf	I2C_Read@buffer^0,w,c
  3972  0016C2  0012               	return		;funcret
  3973  0016C4                     __end_of_I2C_Read:
  3974                           	callstack 0
  3975                           
  3976 ;; *************** function _I2C_Ready *****************
  3977 ;; Defined at:
  3978 ;;		line 72 in file "I2C_Master_File.h"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		None
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3995 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3996 ;;Total ram usage:        0 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_I2C_Read
  4002 ;;		_I2C_Write
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text18
  4007  0017AE                     __ptext18:
  4008                           	callstack 0
  4009  0017AE                     _I2C_Ready:
  4010                           	callstack 27
  4011                           
  4012                           ;I2C_Master_File.h: 74: while(!SSPIF);
  4013                           
  4014                           ;incstack = 0
  4015  0017AE  A69E               	btfss	3998,3,c	;volatile
  4016  0017B0  D7FE               	goto	_I2C_Ready
  4017                           
  4018                           ;I2C_Master_File.h: 75: SSPIF=0;
  4019  0017B2  969E               	bcf	3998,3,c	;volatile
  4020  0017B4  0012               	return		;funcret
  4021  0017B6                     __end_of_I2C_Ready:
  4022                           	callstack 0
  4023                           
  4024 ;; *************** function _I2C_Nack *****************
  4025 ;; Defined at:
  4026 ;;		line 147 in file "I2C_Master_File.h"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		None
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4040 ;;      Params:         0       0       0       0       0       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4043 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_I2C_Read
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text19
  4054  00179A                     __ptext19:
  4055                           	callstack 0
  4056  00179A                     _I2C_Nack:
  4057                           	callstack 27
  4058                           
  4059                           ;I2C_Master_File.h: 149: ACKDT=1;
  4060                           
  4061                           ;incstack = 0
  4062  00179A  8AC5               	bsf	4037,5,c	;volatile
  4063                           
  4064                           ;I2C_Master_File.h: 150: ACKEN=1;
  4065  00179C  88C5               	bsf	4037,4,c	;volatile
  4066  00179E                     l224:
  4067  00179E  A8C5               	btfss	4037,4,c	;volatile
  4068  0017A0  0012               	return	
  4069  0017A2  D7FD               	goto	l224
  4070  0017A4                     __end_of_I2C_Nack:
  4071                           	callstack 0
  4072                           
  4073 ;; *************** function _I2C_Ack *****************
  4074 ;; Defined at:
  4075 ;;		line 140 in file "I2C_Master_File.h"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      void 
  4082 ;; Registers used:
  4083 ;;		None
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4089 ;;      Params:         0       0       0       0       0       0       0       0       0
  4090 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4092 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4093 ;;Total ram usage:        0 bytes
  4094 ;; Hardware stack levels used: 1
  4095 ;; This function calls:
  4096 ;;		Nothing
  4097 ;; This function is called by:
  4098 ;;		_I2C_Read
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text20
  4103  0017A4                     __ptext20:
  4104                           	callstack 0
  4105  0017A4                     _I2C_Ack:
  4106                           	callstack 27
  4107                           
  4108                           ;I2C_Master_File.h: 142: ACKDT=0;
  4109                           
  4110                           ;incstack = 0
  4111  0017A4  9AC5               	bcf	4037,5,c	;volatile
  4112                           
  4113                           ;I2C_Master_File.h: 143: ACKEN=1;
  4114  0017A6  88C5               	bsf	4037,4,c	;volatile
  4115  0017A8                     l218:
  4116  0017A8  A8C5               	btfss	4037,4,c	;volatile
  4117  0017AA  0012               	return	
  4118  0017AC  D7FD               	goto	l218
  4119  0017AE                     __end_of_I2C_Ack:
  4120                           	callstack 0
  4121                           
  4122 ;; *************** function _LCD_String_xy *****************
  4123 ;; Defined at:
  4124 ;;		line 83 in file "LCD_16x2.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  row             1    wreg     unsigned char 
  4127 ;;  pos             1    9[COMRAM] unsigned char 
  4128 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  4129 ;;		 -> date(10), hours(10), STR_8(3), STR_7(3), 
  4130 ;;		 -> STR_6(2), STR_5(2), vec_value(10), 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  row             1   12[COMRAM] unsigned char 
  4133 ;;  location        1   13[COMRAM] unsigned char 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4143 ;;      Params:         3       0       0       0       0       0       0       0       0
  4144 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4146 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4147 ;;Total ram usage:        5 bytes
  4148 ;; Hardware stack levels used: 1
  4149 ;; Hardware stack levels required when called: 3
  4150 ;; This function calls:
  4151 ;;		_LCD_Command
  4152 ;;		_LCD_String
  4153 ;; This function is called by:
  4154 ;;		_printTempHumedad
  4155 ;;		_Mostrar_Fecha
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text21
  4160  0015B4                     __ptext21:
  4161                           	callstack 0
  4162  0015B4                     _LCD_String_xy:
  4163                           	callstack 26
  4164                           
  4165                           ;incstack = 0
  4166                           ;LCD_String_xy@row stored from wreg
  4167  0015B4  6E0D               	movwf	LCD_String_xy@row^0,c
  4168                           
  4169                           ;LCD_16x2.c: 86: if(row<1)
  4170  0015B6  500D               	movf	LCD_String_xy@row^0,w,c
  4171  0015B8  A4D8               	btfss	status,2,c
  4172  0015BA  D008               	goto	l2881
  4173                           
  4174                           ;LCD_16x2.c: 87: {;LCD_16x2.c: 88: location=(0x80) | ((pos) & 0x0f);
  4175  0015BC  500A               	movf	LCD_String_xy@pos^0,w,c
  4176  0015BE  0B0F               	andlw	15
  4177  0015C0  0980               	iorlw	128
  4178  0015C2  6E0E               	movwf	LCD_String_xy@location^0,c
  4179                           
  4180                           ;LCD_16x2.c: 89: LCD_Command(location);
  4181  0015C4  500E               	movf	LCD_String_xy@location^0,w,c
  4182  0015C6  EC80  F00B         	call	_LCD_Command
  4183                           
  4184                           ;LCD_16x2.c: 90: }
  4185  0015CA  D007               	goto	l2885
  4186  0015CC                     l2881:
  4187                           
  4188                           ;LCD_16x2.c: 91: else;LCD_16x2.c: 92: {;LCD_16x2.c: 93: location=(0xC0) | ((pos) & 0x0f)
      +                          ;
  4189  0015CC  500A               	movf	LCD_String_xy@pos^0,w,c
  4190  0015CE  0B0F               	andlw	15
  4191  0015D0  09C0               	iorlw	192
  4192  0015D2  6E0E               	movwf	LCD_String_xy@location^0,c
  4193                           
  4194                           ;LCD_16x2.c: 94: LCD_Command(location);
  4195  0015D4  500E               	movf	LCD_String_xy@location^0,w,c
  4196  0015D6  EC80  F00B         	call	_LCD_Command
  4197  0015DA                     l2885:
  4198                           
  4199                           ;LCD_16x2.c: 95: };LCD_16x2.c: 98: LCD_String(msg);
  4200  0015DA  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  4201  0015DE  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  4202  0015E2  EC0C  F00A         	call	_LCD_String	;wreg free
  4203  0015E6  0012               	return		;funcret
  4204  0015E8                     __end_of_LCD_String_xy:
  4205                           	callstack 0
  4206                           
  4207 ;; *************** function _LCD_String *****************
  4208 ;; Defined at:
  4209 ;;		line 73 in file "LCD_16x2.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  4212 ;;		 -> STR_24(4), STR_23(4), STR_22(4), STR_21(4), 
  4213 ;;		 -> STR_20(4), STR_19(4), STR_18(4), year(10), 
  4214 ;;		 -> month(10), date(10), hours(10), mins(10), 
  4215 ;;		 -> secs(10), STR_8(3), STR_7(3), STR_6(2), 
  4216 ;;		 -> STR_5(2), vec_value(10), 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;		None
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4228 ;;      Params:         2       0       0       0       0       0       0       0       0
  4229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4231 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4232 ;;Total ram usage:        2 bytes
  4233 ;; Hardware stack levels used: 1
  4234 ;; Hardware stack levels required when called: 2
  4235 ;; This function calls:
  4236 ;;		_LCD_Char
  4237 ;; This function is called by:
  4238 ;;		_LCD_String_xy
  4239 ;;		_printTempHumedad
  4240 ;;		_Mostrar_Fecha
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           	psect	text22
  4245  001418                     __ptext22:
  4246                           	callstack 0
  4247  001418                     _LCD_String:
  4248                           	callstack 26
  4249                           
  4250                           ;LCD_16x2.c: 75: while((*msg)!=0)
  4251                           
  4252                           ;incstack = 0
  4253  001418  D014               	goto	l2787
  4254  00141A                     l2783:
  4255                           
  4256                           ;LCD_16x2.c: 76: {;LCD_16x2.c: 77: LCD_Char(*msg);
  4257  00141A  C008  FFF6         	movff	LCD_String@msg,tblptrl
  4258  00141E  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  4259  001422  6AF8               	clrf	tblptru,c
  4260  001424  0E07               	movlw	(high __ramtop+-1)
  4261  001426  64F7               	cpfsgt	tblptrh,c
  4262  001428  D003               	bra	u1857
  4263  00142A  0008               	tblrd		*
  4264  00142C  50F5               	movf	tablat,w,c
  4265  00142E  D005               	bra	u1850
  4266  001430                     u1857:
  4267  001430  CFF6 FFE1          	movff	tblptrl,fsr1l
  4268  001434  CFF7 FFE2          	movff	tblptrh,fsr1h
  4269  001438  50E7               	movf	indf1,w,c
  4270  00143A                     u1850:
  4271  00143A  EC72  F00B         	call	_LCD_Char
  4272                           
  4273                           ;LCD_16x2.c: 78: msg++;
  4274  00143E  4A08               	infsnz	LCD_String@msg^0,f,c
  4275  001440  2A09               	incf	(LCD_String@msg+1)^0,f,c
  4276  001442                     l2787:
  4277  001442  C008  FFF6         	movff	LCD_String@msg,tblptrl
  4278  001446  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  4279  00144A  6AF8               	clrf	tblptru,c
  4280  00144C  0E07               	movlw	(high __ramtop+-1)
  4281  00144E  64F7               	cpfsgt	tblptrh,c
  4282  001450  D003               	bra	u1867
  4283  001452  0008               	tblrd		*
  4284  001454  50F5               	movf	tablat,w,c
  4285  001456  D005               	bra	u1860
  4286  001458                     u1867:
  4287  001458  CFF6 FFE1          	movff	tblptrl,fsr1l
  4288  00145C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4289  001460  50E7               	movf	indf1,w,c
  4290  001462                     u1860:
  4291  001462  0900               	iorlw	0
  4292  001464  B4D8               	btfsc	status,2,c
  4293  001466  0012               	return	
  4294  001468  D7D8               	goto	l2783
  4295  00146A                     __end_of_LCD_String:
  4296                           	callstack 0
  4297                           
  4298 ;; *************** function _LCD_Char *****************
  4299 ;; Defined at:
  4300 ;;		line 62 in file "LCD_16x2.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  dat             1    wreg     unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  dat             1    6[COMRAM] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0
  4315 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4317 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4318 ;;Total ram usage:        1 bytes
  4319 ;; Hardware stack levels used: 1
  4320 ;; Hardware stack levels required when called: 1
  4321 ;; This function calls:
  4322 ;;		_MSdelay
  4323 ;; This function is called by:
  4324 ;;		_LCD_Custom_Char
  4325 ;;		_LCD_String
  4326 ;;		_ON_LEDS
  4327 ;;		_printTempHumedad
  4328 ;;		_ON_LAMPARAS
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text23
  4333  0016E4                     __ptext23:
  4334                           	callstack 0
  4335  0016E4                     _LCD_Char:
  4336                           	callstack 26
  4337                           
  4338                           ;incstack = 0
  4339                           ;LCD_Char@dat stored from wreg
  4340  0016E4  6E07               	movwf	LCD_Char@dat^0,c
  4341                           
  4342                           ;LCD_16x2.c: 64: LATD= dat;
  4343  0016E6  C007  FF8C         	movff	LCD_Char@dat,3980	;volatile
  4344                           
  4345                           ;LCD_16x2.c: 65: LATC0 = 1;
  4346  0016EA  808B               	bsf	3979,0,c	;volatile
  4347                           
  4348                           ;LCD_16x2.c: 66: LATC1=1;
  4349  0016EC  828B               	bsf	3979,1,c	;volatile
  4350                           
  4351                           ;LCD_16x2.c: 67: __nop();
  4352  0016EE  F000               	nop	
  4353                           
  4354                           ;LCD_16x2.c: 68: LATC1=0;
  4355  0016F0  928B               	bcf	3979,1,c	;volatile
  4356                           
  4357                           ;LCD_16x2.c: 69: MSdelay(1);
  4358  0016F2  0E00               	movlw	0
  4359  0016F4  6E02               	movwf	(MSdelay@val+1)^0,c
  4360  0016F6  0E01               	movlw	1
  4361  0016F8  6E01               	movwf	MSdelay@val^0,c
  4362  0016FA  ECF4  F00A         	call	_MSdelay	;wreg free
  4363  0016FE  0012               	return		;funcret
  4364  001700                     __end_of_LCD_Char:
  4365                           	callstack 0
  4366                           
  4367 ;; *************** function _LCD_Init *****************
  4368 ;; Defined at:
  4369 ;;		line 21 in file "LCD_16x2.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      void 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4383 ;;      Params:         0       0       0       0       0       0       0       0       0
  4384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4386 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4387 ;;Total ram usage:        0 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; Hardware stack levels required when called: 2
  4390 ;; This function calls:
  4391 ;;		_LCD_Command
  4392 ;;		_MSdelay
  4393 ;; This function is called by:
  4394 ;;		_main
  4395 ;;		_Mostrar_Fecha
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text24
  4400  00164E                     __ptext24:
  4401                           	callstack 0
  4402  00164E                     _LCD_Init:
  4403                           	callstack 27
  4404                           
  4405                           ;LCD_16x2.c: 23: TRISD = 0x00;
  4406                           
  4407                           ;incstack = 0
  4408  00164E  0E00               	movlw	0
  4409  001650  6E95               	movwf	149,c	;volatile
  4410                           
  4411                           ;LCD_16x2.c: 24: TRISC = 0x00;
  4412  001652  0E00               	movlw	0
  4413  001654  6E94               	movwf	148,c	;volatile
  4414                           
  4415                           ;LCD_16x2.c: 25: MSdelay(20);
  4416  001656  0E00               	movlw	0
  4417  001658  6E02               	movwf	(MSdelay@val+1)^0,c
  4418  00165A  0E14               	movlw	20
  4419  00165C  6E01               	movwf	MSdelay@val^0,c
  4420  00165E  ECF4  F00A         	call	_MSdelay	;wreg free
  4421                           
  4422                           ;LCD_16x2.c: 26: LCD_Command(0x38);
  4423  001662  0E38               	movlw	56
  4424  001664  EC80  F00B         	call	_LCD_Command
  4425                           
  4426                           ;LCD_16x2.c: 27: LCD_Command(0x0c);
  4427  001668  0E0C               	movlw	12
  4428  00166A  EC80  F00B         	call	_LCD_Command
  4429                           
  4430                           ;LCD_16x2.c: 28: LCD_Command(0x06);
  4431  00166E  0E06               	movlw	6
  4432  001670  EC80  F00B         	call	_LCD_Command
  4433                           
  4434                           ;LCD_16x2.c: 29: LCD_Command(0x01);
  4435  001674  0E01               	movlw	1
  4436  001676  EC80  F00B         	call	_LCD_Command
  4437  00167A  0012               	return		;funcret
  4438  00167C                     __end_of_LCD_Init:
  4439                           	callstack 0
  4440                           
  4441 ;; *************** function _LCD_Command *****************
  4442 ;; Defined at:
  4443 ;;		line 50 in file "LCD_16x2.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  cmd             1    wreg     unsigned char 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  cmd             1    6[COMRAM] unsigned char 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      void 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0, cstack
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4457 ;;      Params:         0       0       0       0       0       0       0       0       0
  4458 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4460 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4461 ;;Total ram usage:        1 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; Hardware stack levels required when called: 1
  4464 ;; This function calls:
  4465 ;;		_MSdelay
  4466 ;; This function is called by:
  4467 ;;		_LCD_Init
  4468 ;;		_LCD_Custom_Char
  4469 ;;		_LCD_String_xy
  4470 ;;		_ON_LEDS
  4471 ;;		_ON_LAMPARAS
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text25
  4476  001700                     __ptext25:
  4477                           	callstack 0
  4478  001700                     _LCD_Command:
  4479                           	callstack 27
  4480                           
  4481                           ;incstack = 0
  4482                           ;LCD_Command@cmd stored from wreg
  4483  001700  6E07               	movwf	LCD_Command@cmd^0,c
  4484                           
  4485                           ;LCD_16x2.c: 52: LATD= cmd;
  4486  001702  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  4487                           
  4488                           ;LCD_16x2.c: 53: LATC0 = 0;
  4489  001706  908B               	bcf	3979,0,c	;volatile
  4490                           
  4491                           ;LCD_16x2.c: 54: LATC1 = 1;
  4492  001708  828B               	bsf	3979,1,c	;volatile
  4493                           
  4494                           ;LCD_16x2.c: 55: __nop();
  4495  00170A  F000               	nop	
  4496                           
  4497                           ;LCD_16x2.c: 56: LATC1 = 0;
  4498  00170C  928B               	bcf	3979,1,c	;volatile
  4499                           
  4500                           ;LCD_16x2.c: 57: MSdelay(3);
  4501  00170E  0E00               	movlw	0
  4502  001710  6E02               	movwf	(MSdelay@val+1)^0,c
  4503  001712  0E03               	movlw	3
  4504  001714  6E01               	movwf	MSdelay@val^0,c
  4505  001716  ECF4  F00A         	call	_MSdelay	;wreg free
  4506  00171A  0012               	return		;funcret
  4507  00171C                     __end_of_LCD_Command:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function _MSdelay *****************
  4511 ;; Defined at:
  4512 ;;		line 102 in file "LCD_16x2.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  val             2    0[COMRAM] unsigned int 
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  j               2    4[COMRAM] unsigned int 
  4517 ;;  i               2    2[COMRAM] unsigned int 
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg, status,2, status,0
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4527 ;;      Params:         2       0       0       0       0       0       0       0       0
  4528 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4530 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4531 ;;Total ram usage:        6 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_LCD_Init
  4537 ;;		_LCD_Command
  4538 ;;		_LCD_Char
  4539 ;;		_main
  4540 ;;		_ON_LAMPARAS
  4541 ;;		_Mostrar_Fecha
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text26
  4546  0015E8                     __ptext26:
  4547                           	callstack 0
  4548  0015E8                     _MSdelay:
  4549                           	callstack 26
  4550                           
  4551                           ;LCD_16x2.c: 104: unsigned int i,j;;LCD_16x2.c: 105: for(i=0;i<=val;i++)
  4552                           
  4553                           ;incstack = 0
  4554  0015E8  0E00               	movlw	0
  4555  0015EA  6E04               	movwf	(MSdelay@i+1)^0,c
  4556  0015EC  0E00               	movlw	0
  4557  0015EE  6E03               	movwf	MSdelay@i^0,c
  4558  0015F0  D00E               	goto	l2717
  4559  0015F2                     l2705:
  4560                           
  4561                           ;LCD_16x2.c: 106: for(j=0;j<81;j++);
  4562  0015F2  0E00               	movlw	0
  4563  0015F4  6E06               	movwf	(MSdelay@j+1)^0,c
  4564  0015F6  0E00               	movlw	0
  4565  0015F8  6E05               	movwf	MSdelay@j^0,c
  4566  0015FA                     l2711:
  4567  0015FA  4A05               	infsnz	MSdelay@j^0,f,c
  4568  0015FC  2A06               	incf	(MSdelay@j+1)^0,f,c
  4569  0015FE  5006               	movf	(MSdelay@j+1)^0,w,c
  4570  001600  E104               	bnz	u1770
  4571  001602  0E51               	movlw	81
  4572  001604  5C05               	subwf	MSdelay@j^0,w,c
  4573  001606  A0D8               	btfss	status,0,c
  4574  001608  D7F8               	goto	l2711
  4575  00160A                     u1770:
  4576  00160A  4A03               	infsnz	MSdelay@i^0,f,c
  4577  00160C  2A04               	incf	(MSdelay@i+1)^0,f,c
  4578  00160E                     l2717:
  4579  00160E  5003               	movf	MSdelay@i^0,w,c
  4580  001610  5C01               	subwf	MSdelay@val^0,w,c
  4581  001612  5004               	movf	(MSdelay@i+1)^0,w,c
  4582  001614  5802               	subwfb	(MSdelay@val+1)^0,w,c
  4583  001616  A0D8               	btfss	status,0,c
  4584  001618  0012               	return	
  4585  00161A  D7EB               	goto	l2705
  4586  00161C                     __end_of_MSdelay:
  4587                           	callstack 0
  4588                           
  4589 ;; *************** function _I2C_Init *****************
  4590 ;; Defined at:
  4591 ;;		line 58 in file "I2C_Master_File.h"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4605 ;;      Params:         0       0       0       0       0       0       0       0       0
  4606 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4608 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4609 ;;Total ram usage:        0 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_main
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text27
  4619  00171C                     __ptext27:
  4620                           	callstack 0
  4621  00171C                     _I2C_Init:
  4622                           	callstack 30
  4623                           
  4624                           ;I2C_Master_File.h: 60: TRISB0=1;
  4625                           
  4626                           ;incstack = 0
  4627  00171C  8093               	bsf	3987,0,c	;volatile
  4628                           
  4629                           ;I2C_Master_File.h: 61: TRISB1=1;
  4630  00171E  8293               	bsf	3987,1,c	;volatile
  4631                           
  4632                           ;I2C_Master_File.h: 62: SSPSTAT=80;
  4633  001720  0E50               	movlw	80
  4634  001722  6EC7               	movwf	199,c	;volatile
  4635                           
  4636                           ;I2C_Master_File.h: 63: SSPCON1=0x28;
  4637  001724  0E28               	movlw	40
  4638  001726  6EC6               	movwf	198,c	;volatile
  4639                           
  4640                           ;I2C_Master_File.h: 65: SSPCON2=0;
  4641  001728  0E00               	movlw	0
  4642  00172A  6EC5               	movwf	197,c	;volatile
  4643                           
  4644                           ;I2C_Master_File.h: 66: SSPADD=((8000000/(4*100000))-1);
  4645  00172C  0E13               	movlw	19
  4646  00172E  6EC8               	movwf	200,c	;volatile
  4647                           
  4648                           ;I2C_Master_File.h: 67: SSPIE=1;
  4649  001730  869D               	bsf	3997,3,c	;volatile
  4650                           
  4651                           ;I2C_Master_File.h: 68: SSPIF=0;
  4652  001732  969E               	bcf	3998,3,c	;volatile
  4653  001734  0012               	return		;funcret
  4654  001736                     __end_of_I2C_Init:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _DHT11_Start *****************
  4658 ;; Defined at:
  4659 ;;		line 180 in file "Sistema.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4675 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4676 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4677 ;;Total ram usage:        1 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_main
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text28
  4687  0016C4                     __ptext28:
  4688                           	callstack 0
  4689  0016C4                     _DHT11_Start:
  4690                           	callstack 30
  4691                           
  4692                           ;Sistema.c: 181: TRISCbits.RC2 = 0;
  4693                           
  4694                           ;incstack = 0
  4695  0016C4  9494               	bcf	148,2,c	;volatile
  4696                           
  4697                           ;Sistema.c: 182: LATC2 = 0;
  4698  0016C6  948B               	bcf	3979,2,c	;volatile
  4699                           
  4700                           ;Sistema.c: 183: _delay((unsigned long)((18)*(8000000L/4000.0)));
  4701  0016C8  0E2F               	movlw	47
  4702  0016CA  6E01               	movwf	??_DHT11_Start^0,c
  4703  0016CC  0EC0               	movlw	192
  4704  0016CE                     u2677:
  4705  0016CE  2EE8               	decfsz	wreg,f,c
  4706  0016D0  D7FE               	bra	u2677
  4707  0016D2  2E01               	decfsz	??_DHT11_Start^0,f,c
  4708  0016D4  D7FC               	bra	u2677
  4709                           
  4710                           ;Sistema.c: 184: LATC2 = 1;
  4711  0016D6  848B               	bsf	3979,2,c	;volatile
  4712                           
  4713                           ;Sistema.c: 185: _delay((unsigned long)((20)*(8000000L/4000000.0)));
  4714  0016D8  0E0D               	movlw	13
  4715  0016DA                     u2687:
  4716  0016DA  2EE8               	decfsz	wreg,f,c
  4717  0016DC  D7FE               	bra	u2687
  4718  0016DE  F000               	nop	
  4719                           
  4720                           ;Sistema.c: 186: TRISCbits.RC2 = 1;
  4721  0016E0  8494               	bsf	148,2,c	;volatile
  4722  0016E2  0012               	return		;funcret
  4723  0016E4                     __end_of_DHT11_Start:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function _DHT11_ReadData *****************
  4727 ;; Defined at:
  4728 ;;		line 165 in file "Sistema.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  data            1    1[COMRAM] unsigned char 
  4733 ;;  i               1    0[COMRAM] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      unsigned char 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4743 ;;      Params:         0       0       0       0       0       0       0       0       0
  4744 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4746 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4747 ;;Total ram usage:        2 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_main
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text29
  4757  00161C                     __ptext29:
  4758                           	callstack 0
  4759  00161C                     _DHT11_ReadData:
  4760                           	callstack 30
  4761                           
  4762                           ;Sistema.c: 166: char i, data = 0;
  4763                           
  4764                           ;incstack = 0
  4765  00161C  0E00               	movlw	0
  4766  00161E  6E02               	movwf	DHT11_ReadData@data^0,c
  4767                           
  4768                           ;Sistema.c: 167: for (i = 0; i < 8; i++) {
  4769  001620  0E00               	movlw	0
  4770  001622  6E01               	movwf	DHT11_ReadData@i^0,c
  4771  001624                     l302:
  4772  001624  A482               	btfss	130,2,c	;volatile
  4773  001626  D7FE               	goto	l302
  4774                           
  4775                           ;Sistema.c: 169: _delay((unsigned long)((30)*(8000000L/4000000.0)));
  4776  001628  0E14               	movlw	20
  4777  00162A                     u2697:
  4778  00162A  2EE8               	decfsz	wreg,f,c
  4779  00162C  D7FE               	bra	u2697
  4780                           
  4781                           ;Sistema.c: 170: if (PORTCbits.RC2 & 1)
  4782  00162E  A482               	btfss	130,2,c	;volatile
  4783  001630  D003               	goto	l3059
  4784                           
  4785                           ;Sistema.c: 171: data = ((data << 1) | 1);
  4786  001632  80D8               	bsf	status,0,c
  4787  001634  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4788  001636  D003               	goto	l307
  4789  001638                     l3059:
  4790                           
  4791                           ;Sistema.c: 172: else;Sistema.c: 173: data = (data << 1);
  4792  001638  5002               	movf	DHT11_ReadData@data^0,w,c
  4793  00163A  2402               	addwf	DHT11_ReadData@data^0,w,c
  4794  00163C  6E02               	movwf	DHT11_ReadData@data^0,c
  4795  00163E                     l307:
  4796  00163E  B482               	btfsc	130,2,c	;volatile
  4797  001640  D7FE               	goto	l307
  4798  001642  2A01               	incf	DHT11_ReadData@i^0,f,c
  4799  001644  0E07               	movlw	7
  4800  001646  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4801  001648  D7ED               	goto	l302
  4802                           
  4803                           ;Sistema.c: 176: };Sistema.c: 177: return data;
  4804  00164A  5002               	movf	DHT11_ReadData@data^0,w,c
  4805  00164C  0012               	return		;funcret
  4806  00164E                     __end_of_DHT11_ReadData:
  4807                           	callstack 0
  4808                           
  4809 ;; *************** function _DHT11_CheckResponse *****************
  4810 ;; Defined at:
  4811 ;;		line 190 in file "Sistema.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;		None
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;		None
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      void 
  4818 ;; Registers used:
  4819 ;;		None
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4825 ;;      Params:         0       0       0       0       0       0       0       0       0
  4826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4828 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4829 ;;Total ram usage:        0 bytes
  4830 ;; Hardware stack levels used: 1
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_main
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text30
  4839  001778                     __ptext30:
  4840                           	callstack 0
  4841  001778                     _DHT11_CheckResponse:
  4842                           	callstack 30
  4843                           
  4844                           ;Sistema.c: 191: while (PORTCbits.RC2 & 1);
  4845                           
  4846                           ;incstack = 0
  4847  001778  B482               	btfsc	130,2,c	;volatile
  4848  00177A  D7FE               	goto	_DHT11_CheckResponse
  4849  00177C                     u2180:
  4850  00177C  A482               	btfss	130,2,c	;volatile
  4851  00177E  D7FE               	goto	u2180
  4852  001780                     u2190:
  4853  001780  A482               	btfss	130,2,c	;volatile
  4854  001782  0012               	return	
  4855  001784  D7FD               	goto	u2190
  4856  001786                     __end_of_DHT11_CheckResponse:
  4857                           	callstack 0
  4858                           
  4859                           	psect	rparam
  4860  0000                     
  4861                           	psect	idloc
  4862                           
  4863                           ;Config register IDLOC0 @ 0x200000
  4864                           ;	unspecified, using default values
  4865  200000                     	org	2097152
  4866  200000  FF                 	db	255
  4867                           
  4868                           ;Config register IDLOC1 @ 0x200001
  4869                           ;	unspecified, using default values
  4870  200001                     	org	2097153
  4871  200001  FF                 	db	255
  4872                           
  4873                           ;Config register IDLOC2 @ 0x200002
  4874                           ;	unspecified, using default values
  4875  200002                     	org	2097154
  4876  200002  FF                 	db	255
  4877                           
  4878                           ;Config register IDLOC3 @ 0x200003
  4879                           ;	unspecified, using default values
  4880  200003                     	org	2097155
  4881  200003  FF                 	db	255
  4882                           
  4883                           ;Config register IDLOC4 @ 0x200004
  4884                           ;	unspecified, using default values
  4885  200004                     	org	2097156
  4886  200004  FF                 	db	255
  4887                           
  4888                           ;Config register IDLOC5 @ 0x200005
  4889                           ;	unspecified, using default values
  4890  200005                     	org	2097157
  4891  200005  FF                 	db	255
  4892                           
  4893                           ;Config register IDLOC6 @ 0x200006
  4894                           ;	unspecified, using default values
  4895  200006                     	org	2097158
  4896  200006  FF                 	db	255
  4897                           
  4898                           ;Config register IDLOC7 @ 0x200007
  4899                           ;	unspecified, using default values
  4900  200007                     	org	2097159
  4901  200007  FF                 	db	255
  4902                           
  4903                           	psect	config
  4904                           
  4905                           ;Config register CONFIG1L @ 0x300000
  4906                           ;	PLL Prescaler Selection bits
  4907                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4908                           ;	System Clock Postscaler Selection bits
  4909                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4910                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4911                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4912  300000                     	org	3145728
  4913  300000  00                 	db	0
  4914                           
  4915                           ;Config register CONFIG1H @ 0x300001
  4916                           ;	Oscillator Selection bits
  4917                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4918                           ;	Fail-Safe Clock Monitor Enable bit
  4919                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4920                           ;	Internal/External Oscillator Switchover bit
  4921                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4922  300001                     	org	3145729
  4923  300001  09                 	db	9
  4924                           
  4925                           ;Config register CONFIG2L @ 0x300002
  4926                           ;	Power-up Timer Enable bit
  4927                           ;	PWRT = OFF, PWRT disabled
  4928                           ;	Brown-out Reset Enable bits
  4929                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4930                           ;	Brown-out Reset Voltage bits
  4931                           ;	BORV = 3, Minimum setting 2.05V
  4932                           ;	USB Voltage Regulator Enable bit
  4933                           ;	VREGEN = OFF, USB voltage regulator disabled
  4934  300002                     	org	3145730
  4935  300002  1F                 	db	31
  4936                           
  4937                           ;Config register CONFIG2H @ 0x300003
  4938                           ;	Watchdog Timer Enable bit
  4939                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4940                           ;	Watchdog Timer Postscale Select bits
  4941                           ;	WDTPS = 32768, 1:32768
  4942  300003                     	org	3145731
  4943  300003  1E                 	db	30
  4944                           
  4945                           ; Padding undefined space
  4946  300004                     	org	3145732
  4947  300004  FF                 	db	255
  4948                           
  4949                           ;Config register CONFIG3H @ 0x300005
  4950                           ;	CCP2 MUX bit
  4951                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  4952                           ;	PORTB A/D Enable bit
  4953                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4954                           ;	Low-Power Timer 1 Oscillator Enable bit
  4955                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4956                           ;	MCLR Pin Enable bit
  4957                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4958  300005                     	org	3145733
  4959  300005  00                 	db	0
  4960                           
  4961                           ;Config register CONFIG4L @ 0x300006
  4962                           ;	Stack Full/Underflow Reset Enable bit
  4963                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4964                           ;	Single-Supply ICSP Enable bit
  4965                           ;	LVP = OFF, Single-Supply ICSP disabled
  4966                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4967                           ;	ICPRT = OFF, ICPORT disabled
  4968                           ;	Extended Instruction Set Enable bit
  4969                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4970                           ;	Background Debugger Enable bit
  4971                           ;	DEBUG = 0x1, unprogrammed default
  4972  300006                     	org	3145734
  4973  300006  81                 	db	129
  4974                           
  4975                           ; Padding undefined space
  4976  300007                     	org	3145735
  4977  300007  FF                 	db	255
  4978                           
  4979                           ;Config register CONFIG5L @ 0x300008
  4980                           ;	Code Protection bit
  4981                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4982                           ;	Code Protection bit
  4983                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4984                           ;	Code Protection bit
  4985                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4986                           ;	Code Protection bit
  4987                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4988  300008                     	org	3145736
  4989  300008  0F                 	db	15
  4990                           
  4991                           ;Config register CONFIG5H @ 0x300009
  4992                           ;	Boot Block Code Protection bit
  4993                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4994                           ;	Data EEPROM Code Protection bit
  4995                           ;	CPD = OFF, Data EEPROM is not code-protected
  4996  300009                     	org	3145737
  4997  300009  C0                 	db	192
  4998                           
  4999                           ;Config register CONFIG6L @ 0x30000A
  5000                           ;	Write Protection bit
  5001                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5002                           ;	Write Protection bit
  5003                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5004                           ;	Write Protection bit
  5005                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5006                           ;	Write Protection bit
  5007                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5008  30000A                     	org	3145738
  5009  30000A  0F                 	db	15
  5010                           
  5011                           ;Config register CONFIG6H @ 0x30000B
  5012                           ;	Configuration Register Write Protection bit
  5013                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5014                           ;	Boot Block Write Protection bit
  5015                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5016                           ;	Data EEPROM Write Protection bit
  5017                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5018  30000B                     	org	3145739
  5019  30000B  E0                 	db	224
  5020                           
  5021                           ;Config register CONFIG7L @ 0x30000C
  5022                           ;	Table Read Protection bit
  5023                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5024                           ;	Table Read Protection bit
  5025                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5026                           ;	Table Read Protection bit
  5027                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5028                           ;	Table Read Protection bit
  5029                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5030  30000C                     	org	3145740
  5031  30000C  0F                 	db	15
  5032                           
  5033                           ;Config register CONFIG7H @ 0x30000D
  5034                           ;	Boot Block Table Read Protection bit
  5035                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5036  30000D                     	org	3145741
  5037  30000D  40                 	db	64
  5038                           tosu	equ	0xFFF
  5039                           tosh	equ	0xFFE
  5040                           tosl	equ	0xFFD
  5041                           stkptr	equ	0xFFC
  5042                           pclatu	equ	0xFFB
  5043                           pclath	equ	0xFFA
  5044                           pcl	equ	0xFF9
  5045                           tblptru	equ	0xFF8
  5046                           tblptrh	equ	0xFF7
  5047                           tblptrl	equ	0xFF6
  5048                           tablat	equ	0xFF5
  5049                           prodh	equ	0xFF4
  5050                           prodl	equ	0xFF3
  5051                           indf0	equ	0xFEF
  5052                           postinc0	equ	0xFEE
  5053                           postdec0	equ	0xFED
  5054                           preinc0	equ	0xFEC
  5055                           plusw0	equ	0xFEB
  5056                           fsr0h	equ	0xFEA
  5057                           fsr0l	equ	0xFE9
  5058                           wreg	equ	0xFE8
  5059                           indf1	equ	0xFE7
  5060                           postinc1	equ	0xFE6
  5061                           postdec1	equ	0xFE5
  5062                           preinc1	equ	0xFE4
  5063                           plusw1	equ	0xFE3
  5064                           fsr1h	equ	0xFE2
  5065                           fsr1l	equ	0xFE1
  5066                           bsr	equ	0xFE0
  5067                           indf2	equ	0xFDF
  5068                           postinc2	equ	0xFDE
  5069                           postdec2	equ	0xFDD
  5070                           preinc2	equ	0xFDC
  5071                           plusw2	equ	0xFDB
  5072                           fsr2h	equ	0xFDA
  5073                           fsr2l	equ	0xFD9
  5074                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    18
    Data        249
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     55      58
    BANK0           160    110     159
    BANK1           256      0     253
    BANK2           256     38      74
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_15(CODE[9]), STR_14(CODE[8]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[8]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK1[10]), secs(BANK0[10]), vec_value(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> date(BANK1[10]), hours(BANK1[10]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), vec_value(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), year(BANK1[10]), 
		 -> month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), mins(BANK1[10]), 
		 -> secs(BANK0[10]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), vec_value(BANK0[10]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> alert(BANK1[8]), bombillaCar0(BANK0[8]), good(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_printTempHumedad
    _printTempHumedad->_sprintf
    _ON_LAMPARAS->_ON_LEDS
    _ON_LEDS->_LCD_Custom_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _Mostrar_Fecha->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_ON_LAMPARAS

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   48853
                                              0 BANK2     38    38      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                           _I2C_Init
                           _LCD_Init
                            _MSdelay
                      _Mostrar_Fecha
                       _OFF_LAMPARAS
                           _OFF_LEDS
                        _ON_LAMPARAS
                   _printTempHumedad
 ---------------------------------------------------------------------------------
 (1) _printTempHumedad                                    30    30      0   14416
                                             25 COMRAM    30    30      0
                           _LCD_Char
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _ON_LAMPARAS                                        110   110      0   13202
                                              0 BANK0    110   110      0
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                            _MSdelay
                            _ON_LEDS
 ---------------------------------------------------------------------------------
 (2) _ON_LEDS                                             24    24      0    5813
                                             11 COMRAM    24    24      0
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Custom_Char                                      4     2      2    3096
                                              7 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _OFF_LEDS                                            17    17      0     136
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 (1) _OFF_LAMPARAS                                        23    23      0     136
                                              0 COMRAM    23    23      0
 ---------------------------------------------------------------------------------
 (1) _Mostrar_Fecha                                        0     0      0   17038
                           _I2C_Stop
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    17      5    4411
                                             12 COMRAM    13     8      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     251
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     251
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      62
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      62
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      31
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      65
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    5774
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    2732
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0    1227
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    2423
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0    1227
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2    1196
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     170
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _I2C_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _MSdelay
   _Mostrar_Fecha
     _I2C_Stop
     _LCD_Init
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
       _LCD_String
     _MSdelay
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _OFF_LAMPARAS
   _OFF_LEDS
   _ON_LAMPARAS
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
       _LCD_Char
       _LCD_Command
     _MSdelay
     _ON_LEDS
       _LCD_Char
       _LCD_Command
       _LCD_Custom_Char
   _printTempHumedad
     _LCD_Char
     _LCD_String
     _LCD_String_xy
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     26      4A       9       28.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6E      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     37      3A       1       61.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     220      20        0.0%
DATA                 0      0     220       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 11 10:36:22 2021

                    __size_of_I2C_Ready 0008                      __size_of_I2C_Start 0016  
                          ?_LCD_Command 0001                             _SSPSTATbits 000FC7  
                    __size_of_I2C_Write 0016                             ?_LCD_String 0008  
                       _LCD_Custom_Char 1580  RTC_Read_Calendar@read_calendar_address 0004  
                                   l302 1624                                     l206 1792  
                                   l224 179E                                     l218 17A8  
                                   l162 16A4                                     l307 163E  
                                   l332 148A                                     l340 12DC  
                                   l166 16BC                                     l190 173A  
                                   l406 0C0E                                     l415 0C70  
                                   l345 12B6                                     l371 0FEE  
                                   l356 14D2                                     l197 1750  
                                   l349 12E2                                     l367 0F80  
                                   l376 0FC8                                     l289 10EC  
                                   l466 0D34                                     l388 0B30  
                                   l397 0B9E                                     l973 140E  
                                   l983 1576                                     _PEN 007E2A  
                                   _Day 00D4                         __end_of_I2C_Ack 17AE  
                                   _min 00D6                                     _sec 00D8  
             __size_of_printTempHumedad 018A                                     wreg 000FE8  
                           LCD_Char@dat 0007                                    l3001 0EB2  
                                  l3117 0FF0                                    l3311 0A5A  
                                  l3303 0A12                                    l3231 0C98  
                                  l3207 0C46                                    l3313 0A6C  
                                  l3305 0A24                                    l3241 0CC2  
                                  l3059 1638                                    l3315 0A7E  
                                  l3307 0A36                                    l3243 0CCC  
                                  l3309 0A48                                    l3157 0B70  
                                  l3413 1124                                    l2711 15FA  
                                  l3319 0A90                                    l3183 0BE0  
                                  l2705 15F2                                    l3257 08A4  
                                  l3273 0932                                    l3259 08BA  
                                  l3099 0FA6                                    l3419 112E  
                                  l2717 160E                                    l3269 091A  
                                  l2831 13E4                                    l3287 0994  
                                  l2761 1774                                    l2841 1404  
                                  l3377 1092                                    l2851 1554  
                                  l2931 0D04                                    l2829 13DC  
                                  l2925 0CFA                                    l2783 141A  
                                  l2943 0D5C                                    l2927 0D00  
                                  l2919 0CE0                                    l2775 1598  
                                  l2881 15CC                                    l2857 156C  
                                  l2849 154C                                    l2961 0DA2  
                                  l2953 0D74                                    l2787 1442  
                                  l2795 16B8                                    l2947 0D70  
                                  l2885 15DA                                    l2967 0DA6  
                                  l2895 126A                                    l2985 0E00  
                                  l2977 0DD4                                    l2995 0E92  
                                  l2987 0E06                                    l2979 0DE4  
                                  l2989 0E4C                                    l2997 0EA2  
                                  STR_1 083F                                    STR_2 0835  
                                  STR_3 083F                                    STR_4 083E  
                                  STR_5 0866                                    STR_6 0864  
                                  STR_7 0861                                    STR_8 085E  
                                  STR_9 083A                                    u2020 1262  
                                  u2030 127A                                    u2040 128A  
                                  u2051 12A6                                    u2301 0FB8  
                                  u2160 0EBA                                    _LATD 000F8C  
                                  u2401 0B8E                                    u2170 0ED4  
                                  u2180 177C                                    u2420 0BC2  
                                  u2261 0F70                                    u2190 1780  
                                  u2510 0C94                                    u2351 0B20  
                                  u2600 14B0                                    u2370 0B54  
                                  u2451 0BFE                                    u2611 10DA  
                                  u2470 0C32                                    u2630 1116  
                                  u2551 14C2                                    u1770 160A  
                                  u1850 143A                                    u2570 14F8  
                                  u2491 0C60                                    u1860 1462  
                                  u2581 147A                                    u1960 13E8  
                                  u1857 1430                                    u2657 0F3E  
                                  u1867 1458                                    u2667 0F58  
                                  u2677 16CE                                    u1990 1558  
                                  u2687 16DA                                    u2697 162A  
                                  _RCEN 007E2B                                    _RSEN 007E29  
                                  _Date 00D2                                    _Year 00CE  
                       __end_of_ON_LEDS 12E4                                    _date 01DF  
                                  _days 01B4                                    _main 106C  
                                  _good 01C3                         ?_RTC_Read_Clock 0001  
                                  _hour 0038                        __end_of_I2C_Nack 17A4  
                                  _mins 01F3                                    _secs 00E1  
                      __end_of_I2C_Init 1736                        __end_of_I2C_Read 16C4  
                                  _year 01CB                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                        __end_of_I2C_Stop 179A  
                                  prodl 000FF3                       ON_LEDS@T_Integral 001F  
                                  start 0000                         __end_of_MSdelay 161C  
                      ??_DHT11_ReadData 0001                           _LCD_String_xy 15B4  
                  __size_of_DHT11_Start 0020                            ___param_bank 000000  
      RTC_Read_Clock@read_clock_address 0004                        __end_of_LCD_Char 1700  
                      __end_of_LCD_Init 167C                              _Clock_type 00F6  
                      __end_of_OFF_LEDS 14B2                                   ?_main 0001  
                                 _ACKEN 007E2C                                   _ACKDT 007E2D  
                                 STR_10 0831                                   STR_11 082D  
                                 STR_12 083A                                   STR_20 0846  
                                 STR_13 0831                                   STR_21 0842  
                                 STR_14 082D                                   STR_22 085A  
                                 STR_23 084A                                   STR_15 0824  
                                 STR_16 0829                                   STR_24 0856  
                                 STR_17 083A                                   STR_25 0813  
                                 STR_18 0852                                   STR_19 084E  
                                 _LATC0 007C58                                   _LATC1 007C59  
                                 _LATC2 007C5A                                   _AM_PM 00F5  
                       __end_of___lwdiv 1418                         __end_of___lwmod 1580  
                                 _SPBRG 000FAF                                   _TRISA 000F92  
                                 _TRISC 000F94                                   _TRISD 000F95  
                                 _SSPIE 007CEB                                   _SSPIF 007CF3  
                                 _TXREG 000FAD                                   _Month 00D0  
                                 _alert 01BB                         __end_of_dpowers 080B  
                                 _hours 01E9                                   _month 01D5  
                     __end_of_I2C_Ready 17B6                                   main@i 0224  
                     __end_of_I2C_Start 174C                       __end_of_I2C_Write 1778  
                                 tablat 000FF5                                   plusw1 000FE3  
                                 plusw2 000FDB                                   status 000FD8  
                   __size_of_LCD_String 0052                         __end_of_sprintf 0EE2  
                        _var_RH_Decimal 00E0                          ?_LCD_String_xy 000A  
                         ?_OFF_LAMPARAS 0001                 __end_of_LCD_Custom_Char 15B4  
                       __initialization 12E4                            __end_of_main 1170  
                             ??_I2C_Ack 0001                                  ??_main 0038  
                         __activetblptr 000002                           main@buffer_TX 0200  
                             ??_ON_LEDS 000C                                  _ADCON1 000FC1  
                   _DHT11_CheckResponse 1778                        LCD_String_xy@msg 000B  
                      LCD_String_xy@pos 000A                        LCD_String_xy@row 000D  
                             ??_MSdelay 0003                                  _OSCCON 000FD3  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
                        ??_OFF_LAMPARAS 0001                            ?_ON_LAMPARAS 0001  
                 __end_of_Mostrar_Fecha 0ACC                    ?_DHT11_CheckResponse 0001  
                             ??___lwdiv 0005                               ??___lwmod 000C  
                                clear_0 134A                                  clear_1 1356  
                                isa$std 000001                      _I2C_Repeated_Start 174C  
                  __size_of_LCD_Command 001C                        LCD_Custom_Char@i 000B  
                             ?_I2C_Nack 0001                        _printTempHumedad 0EE2  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                     printTempHumedad@i 0034                               ?_I2C_Stop 0001  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                   ?_I2C_Repeated_Start 0001                               ??_sprintf 0012  
                        _var_T_Integral 003A                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 1362  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 000D  
                         ___rparam_used 000001                               ?_OFF_LEDS 0001  
                            _banAgregar 00DC                    ??_I2C_Repeated_Start 0002  
                      ?_LCD_Custom_Char 0008                          __pcstackCOMRAM 0001  
                          __pidataBANK0 1786                            __pidataBANK1 1170  
                          __pidataBANK2 167C                   ??_DHT11_CheckResponse 0001  
                       _var_RH_Integral 00DF                            ??_LCD_String 000A  
                             OFF_LEDS@i 0010                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                        ??_RTC_Read_Clock 0003  
                            __pbssBANK0 00CE                              __pbssBANK1 01CB  
                            ??_LCD_Char 0007                              ??_LCD_Init 0008  
                    __end_of_LCD_String 146A                              ??_OFF_LEDS 0001  
                 OFF_LAMPARAS@buffer_TX 0001                            I2C_Read@flag 0001  
                        I2C_Read@buffer 0002                                 _I2C_Ack 17A4  
                               _ACKSTAT 007E2E                    __end_of_OFF_LAMPARAS 14FA  
                               _ON_LEDS 123C                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               _MSdelay 15E8                           ??_DHT11_Start 0001  
                             _I2C_Ready 17AE                               _I2C_Start 1736  
                             _I2C_Write 1762                           LCD_String@msg 0008  
                               __Hparam 0000                                 __Lparam 0000  
                  __size_of_ON_LAMPARAS 020E                       _RTC_Read_Calendar 136C  
                          _bombillaCar0 00F7                                 ___lwdiv 13C6  
                      ON_LAMPARAS@F3221 011C                        ON_LAMPARAS@F3215 0100  
                               ___lwmod 153E                        ON_LAMPARAS@F3224 0167  
                      ON_LAMPARAS@F3218 0137                            __psmallconst 0800  
                               _acumBom 00DA                      ?_RTC_Read_Calendar 0001  
                               __pcinit 12E4                                 __ramtop 0800  
         printTempHumedad@buffer_TX_831 001C                                 __ptext0 106C  
                               __ptext1 0EE2                                 __ptext2 0ACC  
                               __ptext3 123C                                 __ptext4 1580  
                               __ptext5 146A                                 __ptext6 14B2  
                               __ptext7 086A                                 __ptext8 0CDA  
                               __ptext9 153E                       __end_of_hexpowers 0813  
                               _dpowers 0801                        ON_LAMPARAS@i_850 00CB  
                      ON_LAMPARAS@i_851 00CD                        ON_LAMPARAS@i_844 00C7  
                      ON_LAMPARAS@i_847 00C9                     ??_RTC_Read_Calendar 0003  
                               _sprintf 0CDA                    end_of_initialization 1362  
                        LCD_Command@cmd 0007                           __Lmediumconst 0000  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001                __end_of_printTempHumedad 106C  
             __end_of_RTC_Read_Calendar 13C6                               _RCSTAbits 000FAB  
                   __end_of_DHT11_Start 16E4                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc2 000FDE                               _PORTAbits 000F80  
                             _PORTBbits 000F81                               _PORTCbits 000F82  
               __size_of_DHT11_ReadData 0032                       OFF_LAMPARAS@F3204 0152  
                             _TRISCbits 000F94                       __size_of_I2C_Nack 000A  
                     __size_of_I2C_Init 001A                       __size_of_I2C_Read 0024  
                     __size_of_I2C_Stop 000A                               _TXSTAbits 000FAC  
                     __size_of_LCD_Char 001C                       __size_of_LCD_Init 002E  
                    DHT11_ReadData@data 0002                       __size_of_OFF_LEDS 0048  
                         ??_LCD_Command 0007                   __size_of_OFF_LAMPARAS 0048  
                           _BAUDCONbits 000FB8                     start_initialization 12E4  
                __size_of_Mostrar_Fecha 0262    I2C_Repeated_Start@slave_read_address 0002  
                           ??_I2C_Ready 0001                             _DHT11_Start 16C4  
                           ??_I2C_Start 0002             __end_of_DHT11_CheckResponse 1786  
                           ??_I2C_Write 0001                   __end_of_LCD_String_xy 15E8  
                          _OFF_LAMPARAS 14B2              __size_of_RTC_Read_Calendar 005A  
           __size_of_I2C_Repeated_Start 0016                           _var_T_Decimal 00DE  
                           __pdataBANK0 00F5                             __pdataBANK1 0100  
                           __pdataBANK2 0226                                ?_I2C_Ack 0001  
              __size_of_LCD_Custom_Char 0034                   printTempHumedad@F3212 019C  
                 printTempHumedad@F3209 01A9                     __end_of_LCD_Command 171C  
                           __pbssCOMRAM 0038                           __pcstackBANK0 0060  
                         __pcstackBANK2 0200                                ?_ON_LEDS 0001  
                 printTempHumedad@i_832 0036                                ?_MSdelay 0001  
                         OFF_LEDS@F3196 018D                             sprintf@flag 0016  
                           sprintf@prec 0015                           OFF_LAMPARAS@i 0016  
                      ON_LEDS@buffer_TX 000C                        ___lwdiv@dividend 0001  
                         _Mostrar_Fecha 086A                                ?___lwdiv 0001  
                              ?___lwmod 0008                                ON_LEDS@i 0022  
                        _DHT11_ReadData 161C                             __smallconst 0800  
                              _I2C_Nack 179A                                _I2C_Init 171C  
                              _I2C_Read 16A0                                _I2C_Stop 1790  
              ON_LAMPARAS@buffer_TX_843 007C                ON_LAMPARAS@buffer_TX_846 0097  
              ON_LAMPARAS@buffer_TX_849 00B2                               _hexpowers 080B  
                      ___lwdiv@quotient 0006                   LCD_String_xy@location 000E  
                              ?_sprintf 000D                                MSdelay@i 0003  
                              MSdelay@j 0005                                _LCD_Char 16E4  
                              _LCD_Init 164E                           ??_ON_LAMPARAS 0024  
                              _OFF_LEDS 146A                 __size_of_RTC_Read_Clock 0044  
                             _vec_value 00EB                       ?_printTempHumedad 0001  
                        ?_Mostrar_Fecha 0001                               main@F3188 0226  
                    ??_printTempHumedad 001A                  __end_of_DHT11_ReadData 164E  
                           _LCD_Command 1700                       OFF_LEDS@buffer_TX 0001  
                      __size_of_I2C_Ack 000A                       ??_LCD_Custom_Char 000A  
                             copy_data0 12F8                               copy_data1 1318  
                             copy_data2 1338                        __size_of_ON_LEDS 00A8  
          I2C_Start@slave_write_address 0002                        __size_of_MSdelay 0034  
                              __Hrparam 0000                                __Lrparam 0000  
                         I2C_Write@data 0001                     __end_of_ON_LAMPARAS 0CDA  
                       ?_DHT11_ReadData 0001                        __size_of___lwdiv 0052  
                      __size_of___lwmod 0042                         DHT11_ReadData@i 0001  
                            sprintf@idx 0013                              sprintf@val 0017  
                          ON_LEDS@F3201 017A                         ___lwdiv@divisor 0003  
                       ___lwdiv@counter 0005                                __ptext10 13C6  
                              __ptext11 14FA                                __ptext20 17A4  
                              __ptext12 136C                                __ptext21 15B4  
                              __ptext13 1790                                __ptext30 1778  
                              __ptext22 1418                                __ptext14 1736  
                              __ptext23 16E4                                __ptext15 174C  
                              __ptext24 164E                                __ptext16 1762  
                              __ptext25 1700                                __ptext17 16A0  
                              __ptext26 15E8                                __ptext18 17AE  
                              __ptext27 171C                                __ptext19 179A  
                              __ptext28 16C4                                __ptext29 161C  
                          ON_LAMPARAS@i 00C5                        __size_of_sprintf 0208  
                         __size_of_main 0104                            ?_DHT11_Start 0001  
                          ON_LEDS@valor 0020                         ??_Mostrar_Fecha 001A  
                            MSdelay@val 0001                                isa$xinst 000000  
                            _LCD_String 1418                      LCD_Custom_Char@loc 000A  
                    LCD_Custom_Char@msg 0008                               sprintf@ap 0014  
                             sprintf@sp 000D                        ___lwmod@dividend 0008  
                  ON_LAMPARAS@buffer_TX 0060              __end_of_I2C_Repeated_Start 1762  
                           _ON_LAMPARAS 0ACC                          _RTC_Read_Clock 14FA  
             printTempHumedad@buffer_TX 0029            __size_of_DHT11_CheckResponse 000E  
                              sprintf@c 0019                                sprintf@f 000F  
                       ___lwmod@divisor 000A                         ___lwmod@counter 000C  
                __size_of_LCD_String_xy 0034                             _SSPCON2bits 000FC5  
                __end_of_RTC_Read_Clock 153E  
